
FUNCTION CALC_SNR, SELECTOR, OBS_RATE, OBS_ERR, D_IND, EDGES, SIGNAL, NOISE

COMMON TIME_C, TIMES, TIME_LOOKUP, COMBINED_TIMES, TIME_RANGE, TIME_SPAN, $
               DEFAULT_TL, TRIGGER

COMMON ENERGY_C, THRESHOLDS, ENERGY_LOOKUP, COMBINED_ENERGIES, ENERGY_RANGE, $
                 ENERGY_SPAN, DEFAULT_EL, ENERGIES

COMMON BACK_C, BACK_FIT, BACK_ERRS, BACK_SPAN, B_TOT_TIME, BACK_TIMES, $
               BACK_HISTORY, DIRTY, NDEGREE, HAVE_BACK, SUM_BACK, SUM_ERRS

IF SELECTOR NE -1 THEN BEGIN ; Sum SNR over energy bins
   SIGNAL = SIGNAL + OBS_RATE(D_IND) - BACK_FIT(D_IND) / EDGES(D_IND)
   SIGMA_BACK = BACK_ERRS(D_IND) / EDGES(D_IND)
   SIGMA_OBS = OBS_ERR(D_IND) 
   NOISE = SQRT(NOISE * NOISE + SIGMA_OBS * SIGMA_OBS + SIGMA_BACK * SIGMA_BACK)
   SCALE = TIME_SPAN(0,1) - TIME_SPAN(0,0)  ; Average SNR for 1 sec.
   ENDIF $
ELSE BEGIN                   ; Sum SNR over time bins
   SIGNAL = SIGNAL + OBS_RATE(D_IND) - SUM_BACK(D_IND) 
   SIGMA_OBS = OBS_ERR(D_IND) 
   SIGMA_BACK = SUM_ERRS(D_IND) 
   NOISE = SQRT(NOISE * NOISE + SIGMA_OBS * SIGMA_OBS + SIGMA_BACK * SIGMA_BACK)
   ; Scale by the average energy bin width over the selected range
   SCALE = (ENERGY_SPAN(0,1) - ENERGY_SPAN(0,0)) / N_ELEMENTS(BACK_FIT)
   ENDELSE

    RETURN, SIGNAL / NOISE ;/ SCALE

END
