@fit_functions
pro filter_jb_properties,cr,pewter,iron,nsig=nsig
  
  if n_elements(nsig) eq 0 then nsig=3.
  jbs=[pewter,iron]
  tags=tag_names(cr)
  nwj=26
  wj=indgen(nwj)+6
  wfit=intarr(nwj)
  for i=0,n_elements(jbs)-1 do begin

     for j=0,nwj-1 do if cr[jbs[i]].(wj[j]) lt nsig then wfit[j]=1
     w=where(wfit ne 0,nw) ;;where non-jb fits
     for j=0,nw-1 do tmp=execute('cr[jbs[i]].('+ntostr(wj[w[j]])+')=90.')
     wcr=where(cr.grb eq cr[jbs[i]].grb)
     file=strtrim(cr[jbs[i]].grb)+'/qstr.fits'
     qstr=mrdfits(file,1)
     cr_consistency_check,cr[wcr],elim,qstr,nsig=nsig     
;     which_cr_results,cr,cr[jbs[i]].grb
;     k=get_kbrd(10)
  endfor
  type_jb,cr,jbs
  
  return
end

pro cr_fake_compare,nsig=nsig
  
  if n_elements(nsig) eq 0 then nsig=3.
  cr_paper_results,cr,gold,silver,iron,pewter,w0,w23,w123,w4,w3g,nsig=nsig
;;; should we assume that probable bursts can only have their jb relations, but then how to compare to mock???  
  u=uniq(cr[[w0,w23,w123,w4]].grb)
  nreal=n_elements(u)*1.
  type_jb,cr,[gold,silver,pewter,iron],nonly=nonly0,/silent,nsig=nsig
  type_jb,cr,w4[w3g],nonly=nonly0a,/silent,nsig=nsig
  nonly0[4]=nonly0a[4]
  
  fakelc,cr[w4],'w1234',dir='w1234/',nonly=nonly1,nsig=nsig;,/silent
  fakelc,cr[w0],'w0',dir='w0/',nonly=nonly2,/silent,nsig=nsig
  fakelc,cr[w123],'w123',dir='w123/',nonly=nonly3,/silent,nsig=nsig
  fakelc,cr[w23],'w23',dir='w23/',nonly=nonly4,/silent,nsig=nsig
  
  
  print,'             # JB        Uni          Uni-sp      Uni-n-s     JB+EI        Struc       ISM         Wind        p<2         p>2         nu2          nu3'
  print,'real ',nonly0[0:11]
  print
  print,'f1234',nonly1[0:11]
  print,'f123 ',nonly2[0:11]
  print,'f23  ',nonly3[0:11]
  print,'f0   ',nonly4[0:11]
  print
  nfake=4000.
  print,nreal,nfake
  njb=total([nonly1[0],nonly2[0],nonly3[0],nonly4[0]])
  nuni=total([nonly1[1],nonly2[1],nonly3[1],nonly4[1]])
  nunisp=total([nonly1[2],nonly2[2],nonly3[2],nonly4[2]])
  nuninosp=total([nonly1[3],nonly2[3],nonly3[3],nonly4[3]])
  njbei=total([nonly1[4],nonly2[4],nonly3[4],nonly4[4]])
  nstruc=total([nonly1[5],nonly2[5],nonly3[5],nonly4[5]])
  nism=total([nonly1[6],nonly2[6],nonly3[6],nonly4[6]])
  nwind=total([nonly1[7],nonly2[7],nonly3[7],nonly4[7]])
  np12=total([nonly1[8],nonly2[8],nonly3[8],nonly4[8]])
  npg2=total([nonly1[9],nonly2[9],nonly3[9],nonly4[9]])
  nnu2=total([nonly1[10],nonly2[10],nonly3[10],nonly4[10]])
  nnu3=total([nonly1[11],nonly2[11],nonly3[11],nonly4[11]])
;  nonly=[nonlyjb,nonlynorm,nonlyspread,nonlynospread,nonlyeinorm,nonlystruc,nonlyism,nonlywind,nonlyp12,nonlyp2,nonlynu2,nonlynu3,nonlysph,nnotjb]  
  print,'expect        '+ntostrarr([njb,nuni,nunisp,nuninosp,njbei,nstruc,nism,nwind,np12,npg2,nnu2,nnu3]/nfake*nreal,'       ',5)
  
  stop
  return
end 

pro fakelc,crreal,name,cr,dir=dir,wonlyspread=wonlyspread,wonlynospread=wonlynospread,wonlynorm=wonlynorm,wonlyeinorm=wonlyeinorm,wonlystruc=wonlystruc,wonlyjb=wonlyjb,silent=silent,wnotjb=wnotjb,wsph=wsph,wonlysph=wonlysph,wonlyism=wonlyism,wonlywind=wonlywind,wonlyp12=wonlyp12,wonlypg2=wonlypg2,wonlynu2=wonlynu2,wonlynu3=wonlynu3,nonly=nonly,nsig=nsig
  
  if n_params() lt 2 then begin
     print,'syntax fakelc,crreal,name'
     return
  endif 
  
  if n_elements(nsig) eq 0 then nsig=3.
  if n_elements(dir) eq 0 then dir='' else begin
     if nsig eq 2. then signame='_2sig' else signame=''
     totfile='simulations/cr_sim_total_'+name+signame+'.fits'
     if exist(totfile) then cr=mrdfits(totfile,1)
  endelse 
  names=name+'_'

  w0=where(crreal.seg0 eq 1,nw0)
  w1=where(crreal.seg1 eq 1,nw1)
  w2=where(crreal.seg2 eq 1,nw2)
  w3=where(crreal.seg3 eq 1,nw3)
  w4=where(crreal.seg4 eq 1,nw4)
  
  if n_elements(cr) eq 0 then begin      
     n=1000
     num=indgen(n)
     numstr=ntostr(num)
     w=where(num lt 10)
     numstr[w]='0'+numstr[w]
     w=where(num lt 100)
     numstr[w]='0'+numstr[w]
     grb='GRB000'+numstr
     jstart=1
     if nw0 eq 0 then begin 
        if nw1 gt 0 then begin ;;;works for 1-2-3-4, 1-2-3
           random_signif,crreal,w1,w1,crfake1,nsig=nsig
           random_signif,crreal,w2,[w1,w2],crfake2,nsig=nsig
           crfake1.grb=grb
        endif else begin
           random_signif,crreal,w2,w2,crfake2,nsig=nsig  ;;works for 2-3-4 or 2-3
           jstart=2
        endelse 
        random_signif,crreal,w3,[w2,w3],crfake3,nsig=nsig
        if nw4 gt 0 then begin 
           random_signif,crreal,w4,[w3,w4],crfake4,nsig=nsig
           crfake4.grb=grb
        endif
        crfake2.grb=grb
        crfake3.grb=grb
     endif else begin  ;;works if 0
        random_signif,crreal,w0,w0,crfake0,nsig=nsig
        crfake0.grb=grb
        jstart=0
     endelse 
     
     if nw0 eq 0 then begin 
        if nw1 gt 0 then concat_structs,crfake1,crfake2,crtmp0 else crtmp0=crfake2
        if nw4 gt 0 then concat_structs,crfake3,crfake4,crtmp1 else crtmp1=crfake3
        concat_structs,crtmp0,crtmp1,cr
        crtmp0=0 & crtmp1=0
     endif else cr=crfake0
     
;     k=get_kbrd(10)
;     if k eq 's' then stop
     cd,!mdata
;  make_crstruct,n,crfake
;  x=alog10(findgen(100)+1)
;  t=(max(x)-reverse(x))*1e6+100.
     x=10.^((findgen(100)+1.)/50.)
     t=[x[0:49]*1e2,x[50:69]*1e3,x[70:99]*1e4]
     for i=0,n-1 do begin 
        fname='simulations/'+dir+'cr_sim_'+names+ntostr(i)+signame+'.fits'
        w=where(cr.grb eq grb[i],nw)
        crstr=cr[w]
        which_alpha,cr[w].alpha,cr[w].alphaerr,j,posa,delalp,delalperr
        delalp=[0,delalp]
        delalperr=[[0,0],[delalperr]]
        print,cr[w].alpha
        print,cr[w].alphaerr
        print,cr[w].beta
        print,cr[w].betaerr
        if nw1 gt 0 and nw4 gt 0 then begin  ;;works if 1-2-3-4
           !p.multi=[0,1,5]
           p=[1e5,cr[w[0]].alpha,1000.,cr[w[1]].alpha,1e4,cr[w[2]].alpha,1e5,cr[w[3]].alpha]
           plot,t,bkn3pow(t,p),/xlog,/ylog,title=ntostr(n)
           oplot,[1000.,1000.],[1e-7,1e6],line=2 ;;break 1
           oplot,[1e5,1e5],[1e-7,1e6],line=2     ;;break 3
        endif 
        if nw1 eq 0 and nw4 eq 0 and nw0 eq 0 then begin ;;works if 2-3 (or 1-2)
           !p.multi=[0,1,3]
           p=[1e5,cr[w[0]].alpha,1e4,cr[w[1]].alpha]
           plot,t,bknpow(t,p),/xlog,/ylog,title=ntostr(n)
        endif 
        if nw1 gt 0 and nw4 eq 0 and nw0 eq 0 then begin ;;works if 1-2-3
           !p.multi=[0,1,4]
           p=[1e5,cr[w[0]].alpha,1000.,cr[w[1]].alpha,1e4,cr[w[2]].alpha]
           plot,t,bkn2pow(t,p),/xlog,/ylog,title=ntostr(n)
           oplot,[1000.,1000.],[1e-7,1e6],line=2 ;;break 1
        endif 
        if nw0 gt 0 then begin ;;works if 0
           !p.multi=[0,1,2]
           p=[1e5,cr[w[0]].alpha]
           plot,t,pow(t,p),/xlog,/ylog,title=ntostr(n)
        endif else begin 
           oplot,[1e4,1e4],[1e-5,1e3],line=2 ;;break 2
        endelse 

        for j=0,nw-1 do begin 
           
           which_closure_relation,cr[w[j]].alpha,cr[w[j]].alphaerr[0]/1.645,cr[w[j]].alphaerr[1]/1.645,cr[w[j]].beta+1.,cr[w[j]].betaerr[0]/1.645,cr[w[j]].betaerr[1]/1.645,crels,posa[*,j],delalp[j],[delalperr[j],delalperr[j]]/1.645,gg,chisq=chisq,qstr=qstr0,nsig=nsig
           
           if j gt 0 then begin
              concat_structs,qstr,qstr0,qstrcomb
              qstr=qstrcomb
           endif else qstr=qstr0
           
           oplot,[0,0],[0,60],line=2
;        stop
;        if n_elements(posa[j,*]) eq 2 then posa=posa[0]
;        s=size(posa)
;        if s[0] eq 2 then posa=
           com=execute('crstr[j].seg'+ntostr(j+jstart)+'=1')
           
;        for pa=1,4 do begin 
;           wposa=where(posa eq pa,nw)
;           if n_elements(posa) ne 4 then begin 
;              if nw eq 1 then com=execute('crstr[j].seg'+ntostr(pa)+'=1') 
;           endif else cr[j].seg0=1
;        endfor 
           if gg[0] ne -1 then $
              for c=0,n_elements(gg)-1 do  com=execute('crstr[j].(gg[c]+6)=sqrt(chisq[gg[c]])')     
        endfor 
        elim=1
        while elim gt 0 do cr_consistency_check,crstr,elim,qstr,nsig=nsig
;        cr_consistency_check,crstr
;        cr_consistency_check,crstr ;;run twice to adapt to already removed possibilities

        mwrfits,crstr,fname,/create
;     k=get_kbrd(10)
;     if k eq 's' then stop
        !p.multi=0
     endfor 
     !p.multi=0
     
     cat_crstructs,cr,nsig=nsig,fname='simulations/'+dir+'cr_sim_'+names+'*',outname='simulations/cr_sim_total_'+name+'.fits'
     
  endif 
  fw0=where(cr.seg0 eq 1,nw0)
  fw1=where(cr.seg1 eq 1,nw1)
  fw2=where(cr.seg2 eq 1,nw2)
  fw3=where(cr.seg3 eq 1,nw3)
  fw4=where(cr.seg4 eq 1,nw4)
  print
;stop  
  tnames=tag_names(cr)
  ntags=n_elements(tnames)
  ncrs=ntags-6-32
  crnames=tnames[6:ncrs+6]
  n=n_elements(cr)
  nreal=n_elements(crreal)*1.
  rand=strarr(n)
  res=strarr(n)
  rcon=strarr(n)
  
  if nw0 gt 0 then begin 
     print,'Single PL'
     type_jb,cr,fw0,wonlyspread=wonlyspread,wonlynospread=wonlynospread,wonlynorm=wonlynorm,wonlyeinorm=wonlyeinorm,wonlystruc=wonlystruc,wonlyjb=wonlyjb,silent=silent,wnotjb=wnotjb,wsph=wsph,wonlysph=wonlysph,wonlyism=wonlyism,wonlywind=wonlywind,wonlyp12=wonlyp12,wonlypg2=wonlypg2,wonlynu2=wonlynu2,wonlynu3=wonlynu3,nonly=nonly,nsig=nsig
     print
     ;;compare real and random
     for i=0,ncrs-1 do begin
        com=execute('wcons=where(cr[fw0].(i+6) le nsig and cr[fw0].(i+6) ne 100.,nwcons)')
        com=execute('wrealcons=where(crreal[w0].(i+6) le nsig,nwrealcons)')
        rand[i]=ntostr(nwcons)+'/'+ntostr(n)+'*'+ntostr(fix(nreal))
        res[i]=numdec(nwcons*1./n*nreal,2)
        rcon[i]=ntostr(nwrealcons)
     endfor 
     w=where(rcon*1. gt 0 and res*1. gt 0)
     colprint,crnames[w]+'     '+rand[w]+'    '+res[w]+'   '+rcon[w]
  endif else begin 
     if nw1 gt 0 then begin 
        print,'region I'
        type_jb,cr,fw1,wonlyspread=wonlyspread,wonlynospread=wonlynospread,wonlynorm=wonlynorm,wonlyeinorm=wonlyeinorm,wonlystruc=wonlystruc,wonlyjb=wonlyjb,silent=silent,wnotjb=wnotjb,wsph=wsph,wonlysph=wonlysph,wonlyism=wonlyism,wonlywind=wonlywind,wonlyp12=wonlyp12,wonlypg2=wonlypg2,wonlynu2=wonlynu2,wonlynu3=wonlynu3,nonly=nonly,nsig=nsig
        ;;compare real and random
        for i=0,ncrs-1 do begin
           com=execute('wcons=where(cr[fw1].(i+6) le nsig and cr[fw1].(i+6) ne 100.,nwcons)')
           com=execute('wrealcons=where(crreal[w1].(i+6) le nsig,nwrealcons)')
           rand[i]=ntostr(nwcons)+'/'+ntostr(n)+'*'+ntostr(fix(nreal))
           res[i]=numdec(nwcons*1./n*nreal,2)
           rcon[i]=ntostr(nwrealcons)
        endfor 
        w=where(rcon*1. gt 0 and res*1. gt 0)
        colprint,crnames[w]+'     '+rand[w]+'    '+res[w]+'   '+rcon[w]
     endif 
     print
     print,'region II'
     type_jb,cr,fw2,wonlyspread=wonlyspread,wonlynospread=wonlynospread,wonlynorm=wonlynorm,wonlyeinorm=wonlyeinorm,wonlystruc=wonlystruc,wonlyjb=wonlyjb,silent=silent,wnotjb=wnotjb,wsph=wsph,wonlysph=wonlysph,wonlyism=wonlyism,wonlywind=wonlywind,wonlyp12=wonlyp12,wonlypg2=wonlypg2,wonlynu2=wonlynu2,wonlynu3=wonlynu3,nonly=nonly,nsig=nsig
     ;;compare real and random
     for i=0,ncrs-1 do begin
        com=execute('wcons=where(cr[fw2].(i+6) le nsig,nwcons)')
        com=execute('wrealcons=where(crreal[w2].(i+6) le nsig and cr[fw2].(i+6) ne 100.,nwrealcons)')
        rand[i]=ntostr(nwcons)+'/'+ntostr(n)+'*'+ntostr(fix(nreal))
        res[i]=numdec(nwcons*1./n*nreal,2)
        rcon[i]=ntostr(nwrealcons)
     endfor 
     w=where(rcon*1. gt 0 and res*1. gt 0)
     colprint,crnames[w]+'     '+rand[w]+'    '+res[w]+'   '+rcon[w]
     print
     print,'region III'
     type_jb,cr,fw3,wonlyspread=wonlyspread,wonlynospread=wonlynospread,wonlynorm=wonlynorm,wonlyeinorm=wonlyeinorm,wonlystruc=wonlystruc,wonlyjb=wonlyjb,silent=silent,wnotjb=wnotjb,wsph=wsph,wonlysph=wonlysph,wonlyism=wonlyism,wonlywind=wonlywind,wonlyp12=wonlyp12,wonlypg2=wonlypg2,wonlynu2=wonlynu2,wonlynu3=wonlynu3,nonly=nonly,nsig=nsig
     nonlyei=nonly[4]
     ;;compare real and random
     for i=0,ncrs-1 do begin
        com=execute('wcons=where(cr[fw3].(i+6) le nsig,nwcons)')
        com=execute('wrealcons=where(crreal[w3].(i+6) le nsig and cr[fw3].(i+6) ne 100.,nwrealcons)')
        rand[i]=ntostr(nwcons)+'/'+ntostr(n)+'*'+ntostr(fix(nreal))
        res[i]=numdec(nwcons*1./n*nreal,2)
        rcon[i]=ntostr(nwrealcons)
     endfor 
     w=where(rcon*1. gt 0 and res*1. gt 0)
     colprint,crnames[w]+'     '+rand[w]+'    '+res[w]+'   '+rcon[w]
     print
     if nw4 gt 0 then begin 
        print,'region IV'
        type_jb,cr,fw4,wonlyspread=wonlyspread,wonlynospread=wonlynospread,wonlynorm=wonlynorm,wonlyeinorm=wonlyeinorm,wonlystruc=wonlystruc,wonlyjb=wonlyjb,silent=silent,wnotjb=wnotjb,wsph=wsph,wonlysph=wonlysph,wonlyism=wonlyism,wonlywind=wonlywind,wonlyp12=wonlyp12,wonlypg2=wonlypg2,wonlynu2=wonlynu2,wonlynu3=wonlynu3,nonly=nonly,nsig=nsig
        nonly[4]=nonlyei
        ;;compare real and random
        for i=0,ncrs-1 do begin
           com=execute('wcons=where(cr[fw4].(i+6) le nsig,nwcons)')
           com=execute('wrealcons=where(crreal[w4].(i+6) le nsig and cr[fw4].(i+6) ne 100.,nwrealcons)')
           rand[i]=ntostr(nwcons)+'/'+ntostr(n)+'*'+ntostr(fix(nreal))
           res[i]=numdec(nwcons*1./n*nreal,2)
           rcon[i]=ntostr(nwrealcons)
        endfor 
        w=where(rcon*1. gt 0 and res*1. gt 0)
        colprint,crnames[w]+'     '+rand[w]+'    '+res[w]+'   '+rcon[w]
     endif 
  endelse 
  
;  stop
  return
end 

pro random_signif,cr,wq,wa,crfake,nsig=nsig
  
  if n_elements(nsig) eq 0 then nsig=3.
  ;;create grid of alpha's & beta's based on real data and mean alperr & betaerr and see frac that fits CRs or family of CRs (type_jb tests)
  if nsig eq 2. then signame='_2sig' else signame=''
  
  if n_elements(cr) eq 0 then cr=mrdfits(!mdata+'closure_relations_total'+signame+'.fits',1)
  n=1000  ;;;number to fake
  if n_elements(wq) eq 0 then wq=indgen(n_elements(cr))
  if n_elements(crfake) eq 0 then begin 
     make_crstruct,n,crfake

     !p.multi=[0,2,3]
     ;;start by doing all regions together
     ;;get random alphas
     print,'alpha: ',minmax(cr[wq].alpha),minmax(cr[wq].alphaerr)
     print,'beta: ',minmax(cr[wq].beta),minmax(cr[wq].betaerr)
     plothist,cr[wq].alpha,x,y,bin=0.1;,yrange=[0,50]
     g=gaussfit(x,y,a,estimates=[max(y),mean(cr[wq].alpha),stddev(cr[wq].alpha)],nterm=3)
     oplot,x,g,color=!green
     genrand,g,x,n,alprand,/double
     plothist,alprand,/over,color=!red,bin=0.05;,yrange=[0,50]
     
     ;;get random beta's
     plothist,cr[wq].beta,x,y,bin=0.1;,yrange=[0,50]
     g=gaussfit(x,y,b,estimates=[max(y),mean(cr[wq].beta),stddev(cr[wq].beta)],nterm=3)
     oplot,x,g,color=!green
     genrand,g,x,n,betrand,/double
     plothist,betrand,/over,color=!red,bin=0.05;,yrange=[0,50]

     ;;get random delta alphas
     uniq=uniq(cr[wa].grb)
     nuniq=n_elements(uniq)
     delalp=0. & delalperr=0.
     for i=0,nuniq-1 do begin
        w=where(cr[wa].grb eq cr[wa[uniq[i]]].grb and cr[wa].alphaerr[0] gt 0. and cr[wa].alphaerr[1] gt 0.,nw)
        if nw gt 1 then begin 
           dalp=cr[wa[w[1:*]]].alpha-cr[wa[w[0:nw-2]]].alpha
           dalperrs=[sqrt(total(cr[wa[w]].alphaerr[0]^2)),sqrt(total(cr[wa[w]].alphaerr[1]^2))]
           delalp=[delalp,dalp]
           delalperr=[delalperr,dalperrs]
        endif 
     endfor 
     if n_elements(delalp) gt 1 then begin 
        delalp=delalp[1:*]
        delalperr=delalperr[1:*]

        print,'delalp: ',minmax(delalp),minmax(delalperr)
        
        plothist,delalp,x,y,bin=0.1;,yrange=[0,50]
        g=gaussfit(x,y,aa,estimates=[max(y),mean(delalp),stddev(delalp)],nterm=3)
        oplot,x,g,color=!green
        genrand,g,x,n,dalprand,/double
        plothist,dalprand,/over,color=!red,bin=0.03;,yrange=[0,50]

        plothist,delalperr,x,y,bin=0.01;,yrange=[0,50]
        g=gaussfit(x,y,aaerr,estimates=[max(y),mean(delalperr),stddev(delalperr)],nterm=3)
        oplot,x,g,color=!green
        genrand,g,x,n,dalpranderr,/double
        plothist,dalpranderr,/over,color=!red,bin=0.03;,yrange=[0,50]
     endif else begin
        dalprand=fltarr(n)
        dalpranderr=fltarr(n)
        print,'No delalp'
     endelse
                                ;  delalperr=median(delalperr[1:*])
;     delalperr=stddev(delalp)
;     delalperr=aa[2]
;     delalperr=[delalperr,delalperr]
     
;  alphaerr=median(cr.alphaerr)
;  betaerr=median(cr.betaerr)
;     alphaerr=stddev(cr[wq].alpha)
;     betaerr=stddev(cr[wq].beta)
     
     w=where(cr[wq].alphaerr[0] gt 0. and cr[wq].alphaerr[1] gt 0.)
     plothist,cr[wq[w]].alphaerr,x,y,bin=0.1;,yrange=[0,50]
     g=gaussfit(x,y,aerr,estimates=[max(y),mean(cr[wq[w]].alphaerr),stddev(cr[wq[w]].alphaerr)],nterm=3)
     oplot,x,g,color=!green
     genrand,g,x,n,alphaerr,/double
     plothist,alphaerr,/over,color=!red,bin=0.03;,yrange=[0,50]
     
     w=where(cr[wa].betaerr[0] gt 0. and cr[wa].betaerr[1] gt 0.)
     plothist,cr[wa[w]].betaerr,x,y,bin=0.1;,yrange=[0,50]
     g=gaussfit(x,y,berr,estimates=[max(y),mean(cr[wa[w]].betaerr),stddev(cr[wa[w]].betaerr)],nterm=3)
     oplot,x,g,color=!green
     genrand,g,x,n,betaerr,/double
     plothist,betaerr,/over,color=!red,bin=0.03;,yrange=[0,50]
     
;     alphaerr=a[2]
;     betaerr=b[2]
     
     crfake.alpha=alprand
     crfake.beta=betrand
     crfake.alphaerr[0]=alphaerr
     crfake.alphaerr[1]=alphaerr
     crfake.betaerr[0]=betaerr
     crfake.betaerr[1]=betaerr
     
     
;;      goto,jump
;;      k=get_kbrd(10)
;;      if k eq 's' then stop
;;      posa=[1,2,3,4]
;;      !p.multi=0

;;      for i=0,n-1 do begin 
;; ;        print,alprand[i],alphaerr[i]
;; ;        print,betrand[i],betaerr[i]
;; ;        print,dalprand[i],dalpranderr[i]
;;         which_closure_relation,alprand[i],alphaerr[i]/1.645,alphaerr[i]/1.645,betrand[i]+1.,betaerr[i]/1.645,betaerr[i]/1.645,crels,posa,dalprand[i],[dalpranderr[i],dalpranderr[i]]/1.645,gg,chisq=chisq ;,/noplot ;,answer=answer
;;         oplot,[0,0],[0,60],line=2
;; ;        k=get_kbrd(10)
;;         if k eq 's' then stop
;;         if gg[0] ne -1 then $
;;            for c=0,n_elements(gg)-1 do  com=execute('crfake[i].(gg[c]+6)=sqrt(chisq[gg[c]])')     
;;         ;;now need to collect random results
;;      endfor   
;;      jump:
     
  endif 
  
;;   type_jb,crfake,indgen(n)
;;   stop
  
;;   goto,dontdo
;;   nr=n_elements(wq)
;;   z=dblarr(nr)
;;   tnames=tag_names(cr)
;;   ntags=n_elements(tnames)
;;   ncrs=ntags-6-26  
;;   p=dblarr(ncrs)
;;   for i=0,ncrs-1 do begin
;;      com=execute('chisq=(crfake.(i+6))^2.')
;;      std=stddev(chisq)
;; ;     std=stddev([-chisq,chisq])
;;      mu=0.
;; ;     mu=mean(chisq)
;;      real=dblarr(nr)
;;      for j=0,nr-1 do begin 
;;         com=execute('real[j]=cr[wq[j]].(i+6)^2')
;; ;        com=execute('print,cr[wq[j]].(i+6)^2')
;;         if real[j] ne 1e4 then z[j]=abs(real[j]-mu)/std
;;      endfor 
;;      w=where(z ne 0. and real ne 1e4,nw)
;;      if nw gt 0 then begin 
;;         mz=median(z[w])
;;         pj=gaussint(z)-gaussint(-z)
;;         p[i]=gaussint(mz)-gaussint(-mz)
;;         plothist,[-1,chisq],title=tnames[i+6],bin=0.5,xrange=[0,100];max(chisq)]
;;         plothist,[-1,real[w]],/over,color=!red,bin=0.5,xrange=[0,100];max(chisq)]
;;         print,p[i]
;;         stop
;;      endif else print,'No real fit '+tnames[i+6]
;;   endfor 
;;   plothist,chisq
;;   dontdo:
                                ;  which_closure_relation,a,alow,aup,g,glow,gup,cr,posa,delalp,delalperr,gg,ps=ps,injection=injection,answer=answer
;  type_jb,crfake,indgen(n)
  
  !p.multi=0
;  stop
  return
end 

pro type_reg,cr,w,w4,w23,w123,w0
  
  match,w,w4,m4a,m4b
  match,w,w23,m23a,m23b
  match,w,w123,m123a,m123b
  match,w,w0,m0a,m0b
  
  if m4a[0] ne -1 then nm4=n_elements(m4a) else nm4=0
  if m23a[0] ne -1 then nm23=n_elements(m23a) else nm23=0
  if m123a[0] ne -1 then nm123=n_elements(m123a) else nm123=0
  if m0a[0] ne -1 then nm0=n_elements(m0a) else nm0=0
  print,'I-II-III-IV/II-III-IV: '+ntostr(nm4)
  print,'II-III/III-IV: '+ntostr(nm23)
  print,'I-II-III: '+ntostr(nm123)
  print,'single pl: '+ntostr(nm0)
  
  
  return
end 
  
pro type_cr,cr,wq,wism=wism,wwind=wwind,wp12=wp12,wp2=wp2,wnu2=wnu2,wnu3=wnu3,wonlyism=wonlyism,wonlywonlyind=wonlywonlyind,wonlyp12=wonlyp12,wonlyp2=wonlyp2,wonlynu2=wonlynu2,wonlynu3=wonlynu3,silent=silent
  
  ccr=cr[wq]
  if n_elements(nsig) eq 0 then nsig=3.  
  wism=where(ccr.isms2a le nsig or ccr.isms2b le nsig or ccr.isms2ai le nsig or ccr.isms3a le nsig or ccr.isms3b le nsig or ccr.isms3ai le nsig or ccr.ismf2a le nsig or ccr.ismf2b le nsig or ccr.ismf2ai le nsig or ccr.ismf3a le nsig or ccr.ismf3b le nsig or ccr.ismf3ai le nsig or ccr.jets2a le nsig or ccr.jets2ai le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3ai le nsig or ccr.jets3b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig,nism)
  wwind=where(ccr.winds2a le nsig or ccr.winds2b le nsig or ccr.winds2ai le nsig or ccr.winds3a le nsig or ccr.winds3b le nsig or ccr.winds3ai le nsig or ccr.windf2a le nsig or ccr.windf2b le nsig or ccr.windf2ai le nsig or ccr.windf3a le nsig or ccr.windf3b le nsig or ccr.windf3ai le nsig or ccr.jets2a le nsig or ccr.jets2ai le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3ai le nsig or ccr.jets3b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig,nwind)
  wp12=where(ccr.isms2b le nsig or ccr.isms3b le nsig or ccr.ismf2b le nsig or ccr.ismf3b le nsig or ccr.winds2b le nsig or ccr.winds3b le nsig or ccr.windf2b le nsig or ccr.windf3b le nsig or ccr.jets2b le nsig or ccr.jets3b le nsig or ccr.jetsism2b le nsig or ccr.jetsism3b le nsig or ccr.jetswind2b le nsig or ccr.jetswind3b le nsig,np12)
  wp2=where(ccr.isms2a le nsig or ccr.isms3a le nsig or ccr.ismf2a le nsig or ccr.ismf3a le nsig or ccr.isms2ai le nsig or ccr.isms3ai le nsig or ccr.ismf2ai le nsig or ccr.ismf3ai le nsig or ccr.winds2a le nsig or ccr.winds3a le nsig or ccr.windf2a le nsig or ccr.windf3a le nsig or ccr.winds2ai le nsig or ccr.winds3ai le nsig or ccr.windf2ai le nsig or ccr.windf3ai le nsig or ccr.jets2a le nsig or ccr.jets3a le nsig or ccr.jetsism2a le nsig or ccr.jetsism3a le nsig or ccr.jetswind2a le nsig or ccr.jetswind3a le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig,np2)
  wnu2=where(ccr.isms2a le nsig or ccr.isms2b le nsig or ccr.isms2ai le nsig or ccr.ismf2a le nsig or ccr.ismf2b le nsig or ccr.ismf2ai le nsig or ccr.winds2a le nsig or ccr.winds2b le nsig or ccr.winds2ai le nsig or ccr.windf2a le nsig or ccr.windf2b le nsig or ccr.windf2ai le nsig or ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jets2ai le nsig or ccr.jetsism2ai le nsig or ccr.jetswind2ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsowind2a le nsig,nnu2)
  wnu3=where(ccr.isms3a le nsig or ccr.isms3b le nsig or ccr.isms3ai le nsig or ccr.ismf3a le nsig or ccr.ismf3b le nsig or ccr.ismf3ai le nsig or ccr.winds3a le nsig or ccr.winds3b le nsig or ccr.winds3ai le nsig or ccr.windf3a le nsig or ccr.windf3b le nsig or ccr.windf3ai le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jets3ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind3a le nsig,nnu3)
  if not keyword_set(silent) then begin 
     print,'Total              - '+ntostr(n_elements(wq))
     print,'CONSISTENT WITH'
     print,'ISM       - '+ntostr(nism)
     print,'Wind      - '+ntostr(nwind)
     print,'1<p<2     - '+ntostr(np12)
     print,'p>2       - '+ntostr(np2)
     print,'nu<nu_c   - '+ntostr(nnu2)
     print,'nu>nu_c   - '+ntostr(nnu3)
  endif 
  
  wonlyism=where((ccr.isms2a le nsig or ccr.isms2b le nsig or ccr.isms2ai le nsig or ccr.isms3a le nsig or ccr.isms3b le nsig or ccr.isms3ai le nsig or ccr.ismf2a le nsig or ccr.ismf2b le nsig or ccr.ismf2ai le nsig or ccr.ismf3a le nsig or ccr.ismf3b le nsig or ccr.ismf3ai le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig) and (ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.jets2a gt nsig and ccr.jets2ai gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3ai gt nsig and ccr.jets3b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig),nonlyism)
  wonlywind=where((ccr.winds2a le nsig or ccr.winds2b le nsig or ccr.winds2ai le nsig or ccr.winds3a le nsig or ccr.winds3b le nsig or ccr.winds3ai le nsig or ccr.windf2a le nsig or ccr.windf2b le nsig or ccr.windf2ai le nsig or ccr.windf3a le nsig or ccr.windf3b le nsig or ccr.windf3ai le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig) and (ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.jets2a gt nsig and ccr.jets2ai gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3ai gt nsig and ccr.jets3b gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig),nonlywind)
  wonlyp12=where((ccr.isms2b le nsig or ccr.isms3b le nsig or ccr.ismf2b le nsig or ccr.ismf3b le nsig or ccr.winds2b le nsig or ccr.winds3b le nsig or ccr.windf2b le nsig or ccr.windf3b le nsig or ccr.jets2b le nsig or ccr.jets3b le nsig or ccr.jetsism2b le nsig or ccr.jetsism3b le nsig or ccr.jetswind2b le nsig or ccr.jetswind3b le nsig) and (ccr.isms2a gt nsig and ccr.isms3a gt nsig and ccr.ismf2a gt nsig and ccr.ismf3a gt nsig and ccr.isms2ai gt nsig and ccr.isms3ai gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds3a gt nsig and ccr.windf2a gt nsig and ccr.windf3a gt nsig and ccr.winds2ai gt nsig and ccr.winds3ai gt nsig and ccr.windf2ai gt nsig and ccr.windf3ai gt nsig and ccr.jets2a gt nsig and ccr.jets3a gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism3a gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind3a gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig),nonlyp12)
  wonlyp2=where((ccr.isms2a le nsig or ccr.isms3a le nsig or ccr.ismf2a le nsig or ccr.ismf3a le nsig or ccr.isms2ai le nsig or ccr.isms3ai le nsig or ccr.ismf2ai le nsig or ccr.ismf3ai le nsig or ccr.winds2a le nsig or ccr.winds3a le nsig or ccr.windf2a le nsig or ccr.windf3a le nsig or ccr.winds2ai le nsig or ccr.winds3ai le nsig or ccr.windf2ai le nsig or ccr.windf3ai le nsig or ccr.jets2a le nsig or ccr.jets3a le nsig or ccr.jetsism2a le nsig or ccr.jetsism3a le nsig or ccr.jetswind2a le nsig or ccr.jetswind3a le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig) and (ccr.isms2b gt nsig and ccr.isms3b gt nsig and ccr.ismf2b gt nsig and ccr.ismf3b gt nsig and ccr.winds2b gt nsig and ccr.winds3b gt nsig and ccr.windf2b gt nsig and ccr.windf3b gt nsig and ccr.jets2b gt nsig and ccr.jets3b gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3b gt nsig),nonlyp2)
  wonlynu2=where((ccr.isms2a le nsig or ccr.isms2b le nsig or ccr.isms2ai le nsig or ccr.ismf2a le nsig or ccr.ismf2b le nsig or ccr.ismf2ai le nsig or ccr.winds2a le nsig or ccr.winds2b le nsig or ccr.winds2ai le nsig or ccr.windf2a le nsig or ccr.windf2b le nsig or ccr.windf2ai le nsig or ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jets2ai le nsig or ccr.jetsism2ai le nsig or ccr.jetswind2ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsowind2a le nsig) and (ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jets3ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind3a gt nsig),nonlynu2)
  wonlynu3=where((ccr.isms3a le nsig or ccr.isms3b le nsig or ccr.isms3ai le nsig or ccr.ismf3a le nsig or ccr.ismf3b le nsig or ccr.ismf3ai le nsig or ccr.winds3a le nsig or ccr.winds3b le nsig or ccr.winds3ai le nsig or ccr.windf3a le nsig or ccr.windf3b le nsig or ccr.windf3ai le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jets3ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind3a le nsig) and (ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jets2ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsowind2a gt nsig),nonlynu3)
  if not keyword_set(silent) then begin 
     print,'Total              - '+ntostr(n_elements(wq))
     print,'ONLY CONSISTENT WITH'
     print,'ISM       - '+ntostr(nonlyism)
     print,'Wind      - '+ntostr(nonlywind)
     print,'1<p<2     - '+ntostr(nonlyp12)
     print,'p>2       - '+ntostr(nonlyp2)
     print,'nu<nu_c   - '+ntostr(nonlynu2)
     print,'nu>nu_c   - '+ntostr(nonlynu3)
  endif 
  return
end 

pro type_jb,cr,wq,wspread=wspread,wnospread=wnospread,wnorm=wnorm,weinorm=weinorm,wstruc=wstruc,wjb=wjb,wonlyspread=wonlyspread,wonlynospread=wonlynospread,wonlynorm=wonlynorm,wonlyeinorm=wonlyeinorm,wonlystruc=wonlystruc,wonlyjb=wonlyjb,silent=silent,wnotjb=wnotjb,wsph=wsph,wonlysph=wonlysph,wonlyism=wonlyism,wonlywind=wonlywind,wonlyp12=wonlyp12,wonlypg2=wonlypg2,wonlynu2=wonlynu2,wonlynu3=wonlynu3,nonly=nonly,nothing=nothing,nsig=nsig
  
  ccr=cr[wq]
  if n_elements(nsig) eq 0 then nsig=3.
  ;;consistent
  wspread=where(ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig,nspread)
  wnospread=where(ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig,nnospread)
  wnorm=where(ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig,nnorm)
  weinorm=where(ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig,neinorm)
  wstruc=where(ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig,nstruc)
  wjb=where(ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig,njb)
;  wjb=where(ccr.jetbreak gt 0,njb)
  wism=where(ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig,nism)
  wwind=where(ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig,nwind)
  wp12=where(ccr.jets2b le nsig or ccr.jets3b le nsig or ccr.jetsism2b le nsig or ccr.jetsism3b le nsig or ccr.jetswind2b le nsig or ccr.jetswind3b le nsig,np12)
  wp2=where(ccr.jets2a le nsig or ccr.jets3a le nsig or ccr.jetsism2a le nsig or ccr.jetsism3a le nsig or ccr.jetswind2a le nsig or ccr.jetswind3a le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig,np2)
  wnu2=where(ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jets2ai le nsig or ccr.jetsism2ai le nsig or ccr.jetswind2ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsowind2a le nsig,nnu2)
  wnu3=where(ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jets3ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind3a le nsig,nnu3)
  wsph=where(ccr.isms2a le nsig or ccr.isms2b le nsig or ccr.isms3a le nsig or ccr.isms3b le nsig or ccr.ismf2a le nsig or ccr.ismf2b le nsig or ccr.ismf3a le nsig or ccr.ismf3b le nsig or ccr.winds2a le nsig or ccr.winds2b le nsig or ccr.winds3a le nsig or ccr.winds3b le nsig or ccr.windf2a le nsig or ccr.windf2b le nsig or ccr.windf3a le nsig or ccr.windf3b le nsig,nsph)
  
  if not keyword_set(silent) then begin 
     print,'Total              - '+ntostr(n_elements(wq))
     print,'CONSISTENT WITH'
     print,'Jet Break general  - '+ntostr(njb)
     print,'Uniform Jet Break  - '+ntostr(nnorm)
     print,'Uniform Spread     - '+ntostr(nspread)
     print,'Uniform Non-spread - '+ntostr(nnospread)
     print,'Jet Break + EI     - '+ntostr(neinorm)
     print,'Structured JB      - '+ntostr(nstruc)
     print,'ISM Jet Break      - '+ntostr(nism)
     print,'Wind Jet Break     - '+ntostr(nwind)
     print,'1<p<2 Jet Break    - '+ntostr(np12)
     print,'p>2 Jet Break      - '+ntostr(np2)
     print,'nu<nu_c Jet Break  - '+ntostr(nnu2)
     print,'nu>nu_c Jet Break  - '+ntostr(nnu3)
     print,'Normal sph decay   - '+ntostr(nsph)
  endif 
  
  ;;ONLY CONSISTENT
  ;;spreading jet and not non-spread and not struct
  wonlyspread=where((ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig) and (ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig),nonlyspread)
  
  ;;non-spreading and not spreading and not struct
  wonlynospread=where((ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig) and (ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig),nonlynospread)
  
  ;;spreading or non-spreading and not EI and not struct
  wonlynorm=where((ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig) and (ccr.jets2ai gt nsig and ccr.jets3ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig),nonlynorm)
  
  ;;normal+EI and not normal and not struct
  wonlyeinorm=where((ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig) and (ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig),nonlyeinorm)
  
  ;;structured JB and not normal and not EI
  wonlystruc=where((ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig) and (ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig),nonlystruc)
  
  ;;some sort of JB and not non-JB
  wonlyjb=where((ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig) and (ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig),nonlyjb)
  
  ;;JB ISM and not Wind JB nor non-JB anything
  wonlyism=where(($
                    $ ;ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or 
                    ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig) and (ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig and ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig),nonlyism)
  
  ;;JB Wind and not ISM JB nor any non-JB
  wonlywind=where(($
                     $ ;ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jets3a le nsig or ccr.jets3b le nsig or 
                     ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig) and (ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and cr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig and ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig),nonlywind)
  
  ;;Only 1<p<2 JB, not 1<p<2 non-JB nor any p>2
  wonlyp12=where((ccr.jets2b le nsig or ccr.jets3b le nsig or ccr.jetsism2b le nsig or ccr.jetsism3b le nsig or ccr.jetswind2b le nsig or ccr.jetswind3b le nsig) and (ccr.jets2a gt nsig and ccr.jets3a gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism3a gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind3a gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig and ccr.isms2a gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig and ccr.isms2b gt nsig and ccr.isms3b gt nsig and ccr.ismf2b gt nsig and ccr.ismf3b gt nsig and ccr.winds2b gt nsig and ccr.winds3b gt nsig and ccr.windf2b gt nsig and ccr.windf3b gt nsig),nonlyp12)
  
  ;;only p>2 JB, not p<2 anything nor p>2 non-JB
  wonlypg2=where((ccr.jets2a le nsig or ccr.jets3a le nsig or ccr.jetsism2a le nsig or ccr.jetsism3a le nsig or ccr.jetswind2a le nsig or ccr.jetswind3a le nsig or ccr.jets2ai le nsig or ccr.jets3ai le nsig or ccr.jetsism2ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind2ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind2a le nsig or ccr.jetsowind3a le nsig) and (ccr.jets2b gt nsig and ccr.jets3b gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3b gt nsig and ccr.jetsoism2b gt nsig and ccr.jetsoism3b gt nsig and ccr.jetsowind2b gt nsig and ccr.jetsowind3b gt nsig and ccr.isms2b gt nsig and ccr.isms3b gt nsig and ccr.ismf2b gt nsig and ccr.ismf3b gt nsig and ccr.winds2b gt nsig and ccr.winds3b gt nsig and ccr.windf2b gt nsig and ccr.windf3b gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig and ccr.isms2a gt nsig and ccr.isms2ai gt nsig and ccr.isms3a gt nsig and ccr.isms3ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3ai gt nsig and ccr.winds2a gt nsig and ccr.winds2ai gt nsig and ccr.winds3a gt nsig and ccr.winds3ai gt nsig and ccr.windf2a gt nsig and ccr.windf2ai gt nsig and ccr.windf3a gt nsig and ccr.windf3ai gt nsig),nonlyp2)
  
  ;;only nu2 JB, not nu2 non-JB nor any nu3
  wonlynu2=where(ccr.jets2a le nsig or ccr.jets2b le nsig or ccr.jetsism2a le nsig or ccr.jetsism2b le nsig or ccr.jetswind2a le nsig or ccr.jetswind2b le nsig or ccr.jets2ai le nsig or ccr.jetsism2ai le nsig or ccr.jetswind2ai le nsig or ccr.jetsoism2a le nsig or ccr.jetsowind2a le nsig and (ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jets3ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind3a gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig),nonlynu2)
  
  ;;only nu3 JB, not nu3 non-JB nor any nu2
  wonlynu3=where(ccr.jets3a le nsig or ccr.jets3b le nsig or ccr.jetsism3a le nsig or ccr.jetsism3b le nsig or ccr.jetswind3a le nsig or ccr.jetswind3b le nsig or ccr.jets3ai le nsig or ccr.jetsism3ai le nsig or ccr.jetswind3ai le nsig or ccr.jetsoism3a le nsig or ccr.jetsowind3a le nsig and (ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jets2ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsowind2a gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms2ai gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf2ai gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds2ai gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf2ai gt nsig and ccr.highlat1 gt nsig and ccr.highlat2 gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.isms3ai gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.ismf3ai gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.winds3ai gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.windf3ai gt nsig),nonlynu3)
  
  wnotjb=where(ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig,nnotjb)
  
  wonlysph=where((ccr.isms2a le nsig or ccr.isms2b le nsig or ccr.isms3a le nsig or ccr.isms3b le nsig or ccr.ismf2a le nsig or ccr.ismf2b le nsig or ccr.ismf3a le nsig or ccr.ismf3b le nsig or ccr.winds2a le nsig or ccr.winds2b le nsig or ccr.winds3a le nsig or ccr.winds3b le nsig or ccr.windf2a le nsig or ccr.windf2b le nsig or ccr.windf3a le nsig or ccr.windf3b le nsig) and (ccr.isms2ai gt nsig and ccr.isms3ai gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3ai gt nsig and ccr.winds2ai gt nsig and ccr.winds3ai gt nsig and ccr.windf2ai gt nsig and ccr.windf3ai gt nsig and ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig),nonlysph)
  
  nothing=where(ccr.highlat1 gt nsig and ccr.highlat2 gt nsig and ccr.isms2a gt nsig and ccr.isms2b gt nsig and ccr.isms3a gt nsig and ccr.isms3b gt nsig and ccr.ismf2a gt nsig and ccr.ismf2b gt nsig and ccr.ismf3a gt nsig and ccr.ismf3b gt nsig and ccr.winds2a gt nsig and ccr.winds2b gt nsig and ccr.winds3a gt nsig and ccr.winds3b gt nsig and ccr.windf2a gt nsig and ccr.windf2b gt nsig and ccr.windf3a gt nsig and ccr.windf3b gt nsig and ccr.isms2ai gt nsig and ccr.isms3ai gt nsig and ccr.ismf2ai gt nsig and ccr.ismf3ai gt nsig and ccr.winds2ai gt nsig and ccr.winds3ai gt nsig and ccr.windf2ai gt nsig and ccr.windf3ai gt nsig and ccr.jets2a gt nsig and ccr.jets2b gt nsig and ccr.jets3a gt nsig and ccr.jets3b gt nsig and ccr.jetsism2a gt nsig and ccr.jetsism2b gt nsig and ccr.jetsism3a gt nsig and ccr.jetsism3b gt nsig and ccr.jetswind2a gt nsig and ccr.jetswind2b gt nsig and ccr.jetswind3a gt nsig and ccr.jetswind3b gt nsig and ccr.jets2ai gt nsig and ccr.jets3ai gt nsig and ccr.jetsism2ai gt nsig and ccr.jetsism3ai gt nsig and ccr.jetswind2ai gt nsig and ccr.jetswind3ai gt nsig and ccr.jetsoism2a gt nsig and ccr.jetsoism3a gt nsig and ccr.jetsowind2a gt nsig and ccr.jetsowind3a gt nsig,nnothing)
  
  
  nonly=[nonlyjb,nonlynorm,nonlyspread,nonlynospread,nonlyeinorm,nonlystruc,nonlyism,nonlywind,nonlyp12,nonlyp2,nonlynu2,nonlynu3,nonlysph,nnotjb]
  
  if not keyword_set(silent) then begin 
     print,'ONLY CONSISTENT WITH'
     print,'Jet Break general  - '+ntostr(nonlyjb)
     print,'Uniform Jet Break  - '+ntostr(nonlynorm)
     print,'Uniform Spread     - '+ntostr(nonlyspread)
     print,'Uniform Non-spread - '+ntostr(nonlynospread)
     print,'Jet Break + EI     - '+ntostr(nonlyeinorm)
     print,'Structured JB      - '+ntostr(nonlystruc)
     print,'ISM Jet Break      - '+ntostr(nonlyism)
     print,'Wind Jet Break     - '+ntostr(nonlywind)
     print,'1<p<2 Jet Break    - '+ntostr(nonlyp12)
     print,'p>2 Jet Break      - '+ntostr(nonlyp2)
     print,'nu<nu_c Jet Break  - '+ntostr(nonlynu2)
     print,'nu>nu_c Jet Break  - '+ntostr(nonlynu3)
     print,'Normal sph decay   - '+ntostr(nonlysph)
     print,'Not a jet break    - '+ntostr(nnotjb)
     print,'Consist w/ nothing - '+ntostr(nnothing)
  endif 
  
  return
end 

pro cr_paper_results,cr,gold,silver,iron,pewter,w0,w23,w123,w4,w3g,nsig=nsig
  
  if n_elements(nsig) eq 0 then nsig=3.
;  wset,0
;  cr_stats,cr,nsig=nsig
  if nsig eq 2. then signame='_2sig' else signame=''
  if n_elements(cr) eq 0 then cr=mrdfits(!mdata+'closure_relations_total'+signame+'.fits',1)
  outdir='~/papers/jetbreaks1/'
  plotsym,0,/fill  
  maybe_jet_break,cr,w,last,nsig=nsig
  alpha=cr[w].alpha

  j2a=where(cr[w].jets2a le nsig,nj2a)
  j2b=where(cr[w].jets2b le nsig,nj2b)
  j2ai=where(cr[w].jets2ai le nsig,nj2ai)
  j3a=where(cr[w].jets3a le nsig,nj3a)
  j3b=where(cr[w].jets3b le nsig,nj3b)
  j3ai=where(cr[w].jets3ai le nsig,nj3ai)
  ji2a=where(cr[w].jetsism2a le nsig,nji2a)
  ji2b=where(cr[w].jetsism2b le nsig,nji2b)
  ji2ai=where(cr[w].jetsism2ai le nsig,nji2ai)
  ji3a=where(cr[w].jetsism3a le nsig,nji3a)
  ji3b=where(cr[w].jetsism3b le nsig,nji3b)
  ji3ai=where(cr[w].jetsism3ai le nsig,nji3ai)
  jw2a=where(cr[w].jetswind2a le nsig,njw2a)
  jw2b=where(cr[w].jetswind2b le nsig,njw2b)
  jw2ai=where(cr[w].jetswind2ai le nsig,njw2ai)
  jw3a=where(cr[w].jetswind3a le nsig,njw3a)
  jw3b=where(cr[w].jetswind3b le nsig,njw3b)
  jw3ai=where(cr[w].jetswind3ai le nsig,njw3ai)
  jsi2a=where(cr[w].jetsoism2a le nsig,njsi2a)
  jsi2b=where(cr[w].jetsoism2b le nsig,njsi2b)
  jsi3a=where(cr[w].jetsoism3a le nsig,njsi3a)
  jsi3b=where(cr[w].jetsoism3b le nsig,njsi3b)
  jsw2a=where(cr[w].jetsowind2a le nsig,njsw2a)
  jsw2b=where(cr[w].jetsowind2b le nsig,njsw2b)
  jsw3a=where(cr[w].jetsowind3a le nsig,njsw3a)
  jsw3b=where(cr[w].jetsowind3b le nsig,njsw3b)
  
  name=['All','jets2a','jets2b','jets2ai','jets3a','jets3b','jets3ai','jetism2a','jetism2b','jetism2ai','jetism3a','jetism3b','jetism3ai','jetwind2a','jetwind2b','jetwind2ai','jetwind3a','jetwind3b','jetwind3ai','jetsoism2a','jetsoism2b','jetsoism3a','jetsoism3b','jetsowind2a','jetsowind2b','jetsowind3a','jetsowind3b']
  index=['*','j2a','j2b','j2ai','j3a','j3b','j3ai','ji2a','ji2b','ji2ai','ji3a','ji3b','ji3ai','jw2a','jw2b','jw2ai','jw3a','jw3b','jw3ai','jsi2a','jsi2b','jsi3a','jsi3b','jsw2a','jsw2b','jsw3a','jsw3b']
  nindex='if n'+index+' gt 0 then '
  nindex[0]=''
  
  goto,jump
  window,1
  !p.multi=[0,5,5]
  for i=0,n_elements(name)-1 do begin
     com=nindex[i]+'plothist,[-1,alpha['+index[i]+']],bin=0.1,xrange=[0,4],yrange=[0,10],xtitle=!tsym.alpha'
;     print,com
     tmp=execute(com)
     tmp=execute(nindex[i]+'legend,name[i],box=0,/top,/right')
  endfor 
  
  !p.multi=0
  jump:
;
;  err=sqrt((cr[w].alphaerr[0]/cr[w].alpha)^2+(cr[w].alphaerr[1]/cr[w].alpha)^2+(cr[w].betaerr[0]/cr[w].beta)^2+(cr[w].betaerr[1]/cr[w].beta)^2)
;  q=where(cr[w].alpha lt 1.5 and err lt 1. and cr[w].seg0 eq 0,nq)
;  q=where(cr.seg4 eq 1 and cr.jetbreak eq 0,nq)
;;   q=where(cr[w].seg0 eq 1,nq)
;  q=w
;  nq=n_elements(w)
;;   help,q
;  for i=0,nq-1 do begin
;;      ind=w[q[i]]
;      ind=q[i]
;     t=where(cr.grb eq cr[ind].grb)
;      print,cr[ind].grb
;      print,cr[ind].jetbreak
;      plot_cr,cr,t
;      k=get_kbrd(10)
;      if k eq 's' then stop
;   endfor 
;  !p.multi=0 
  
  w0=0 & w23=0 & w234=0 & w123=0 & w1234=0 & w12=0
  for i=0,n_elements(last)-1 do begin
     q=where(cr.grb eq cr[last[i]].grb,nq)
     case nq of 
        1: w0=[w0,q]
        2: begin 
           if cr[q[0]].seg1 eq 0 then w23=[w23,q] else w12=[w12,q]
        end 
        3: begin
           if cr[q[0]].seg1 eq 1 then w123=[w123,q] else w234=[w234,q]
        end
        4: w1234=[w1234,q]
     endcase 
  endfor 
  w0=w0[1:*]
  w12=w12[1:*]
  w23=w23[1:*]
  w123=w123[1:*]
  w234=w234[1:*]
  w1234=w1234[1:*]

  ;;SHOULD COMPARE OPENING ANGLE LIMITS FOR BURSTS W/ JB AND W/O TO MAKE STATEMENT ABOUT JB
  n4=n_elements(where(cr[last].jetbreak eq 4))
  n3=n_elements(where(cr[last].jetbreak eq 3))
  n2=n_elements(where(cr[last].jetbreak eq 2))
  n1=n_elements(where(cr[last].jetbreak eq 1))
  n0=n_elements(where(cr[last].jetbreak eq 0))
  
  
  w4=[w1234,w234]
;  w4=where(cr.jetbreak eq 4)
  w3g=where(cr[w4].seg3 eq 1)
  w44=where(cr.seg4 eq 1)
  
;  w23=where(cr.jetbreak eq 3)
  w3b=where(cr[w23].seg3 eq 1)
  w2=where(cr[w23].seg2 eq 1)
  
;  w123=where(cr.jetbreak eq 2)
  w2c=where(cr[w123].seg2 eq 1)
  w3c=where(cr[w123].seg3 eq 1)
  
  w1a=where(cr[w12].seg1 eq 1)
  w2a=where(cr[w12].seg2 eq 1)
  
  print
  
  ;;LETS EXPLORE BASED ON PROBABILITY OF CRAZY JET BREAK
  print,'Definitely Region 4'
;  w4=where(cr.seg4 eq 1)
  type_jb,cr,w44,wjb=wjb,nsig=nsig
  gold=w44[wjb]
  
  print,"Definitely Region 4's Region 3"
  type_jb,cr,w4[w3g],wonlyeinorm=wonlyeinorm1,weinorm=weinorm,nsig=nsig ;,wsph=wsph,wonlyjb=wonlyjb0
  
  print
  print,'Ambiguous Region 4 (2-3/3-4) second'
;  w34=where(cr.seg1 eq 0 and cr.seg2 eq 1 and cr.seg3 eq 1 and cr.seg4 eq 0)
  type_jb,cr,w23[w3b],wonlyjb=wonlyjb1,wonlyeinorm=wonlyeinorm3,wjb=wjb1,wsph=wsph,nsig=nsig
  print,'Ambiguous Region 4 (2-3/3-4) first'
;  w34=where(cr.seg1 eq 0 and cr.seg2 eq 1 and cr.seg3 eq 1 and cr.seg4 eq 0)
  type_jb,cr,w23[w2],wonlyjb=wonlyjb1a,wonlyeinorm=wonlyeinorm3a,wjb=wjb1a,weinorm=weinorm1a,wnorm=wnorm,nsig=nsig
  
  
  print
  print,'Ambiguous Single PL'
;  w0=where(cr.jetbreak eq 1)
  type_jb,cr,w0,wonlyeinorm=wonlyeinorm4,wonlyjb=wonlyjb3,weinorm=weinorm0,wjb=wjb0,nsig=nsig
  
  print
  print,'Region 3 with no Region 4'
;  w3=where(cr.jetbreak eq 2)
;  w3=where(cr.seg1 eq 1 and cr.seg3 eq 1 and cr.seg4 eq 0)
  type_jb,cr,w123[w3c],wonlyjb=wonlyjb2,wjb=wjb2,wonlyeinorm=wonlyeinorm2,weinorm=weinorm2,nsig=nsig
  
  print
  print,'Gold region 2-3'
  ;;compare gold 2-3 to ambiguous 2-3
  w2g=where(cr[w4].seg2 eq 1)
  w3g=where(cr[w4].seg3 eq 1)
  w4g=where(cr[w4].seg4 eq 1)
  print,'region 2'
  type_jb,cr,w4[w2g],wonlysph=wonlysph,nsig=nsig
  print,'region 3'
  type_jb,cr,w4[w3g],nsig=nsig
  
  
  silver=0
  if wonlyjb1[0] ne -1 then silver=[silver,w23[w3b[wonlyjb1]]]
  if wonlyjb2[0] ne -1 then silver=[silver,w123[w3c[wonlyjb2]]]
  if wonlyjb3[0] ne -1 then silver=[silver,w0[wonlyjb3]]
  if n_elements(silver) gt 1 then silver=silver[1:*]
  
  wsilv=0
  for i=0,n_elements(silver)-1 do begin 
     ws=where(cr.grb eq cr[silver[i]].grb)
     wsilv=[wsilv,ws]
  endfor 
  wsilv=wsilv[1:*]
  ;;MAKE II-III/III-IV PLOTS
;  plothist,[-1,cr[w23[w3b]].alpha],bin=0.1,xrange=[0,4],xtitle=!tsym.alpha,ytitle='N'
;  plothist,[-1,cr[w23[w3b[wonlyjb]]].alpha],bin=0.1,xrange=[0,4],/overplot,/fill,/fline,forient=45
  jb=[gold,silver]
  s=sort(jb)
  jb=jb[s]
  
  bronze=[w23[w3b[wjb1]],w0[wjb0],w123[w3c[wjb2]]]
  dont_match,bronze,jb,m1,m2
  bronze=bronze[m1]
  
  jbs=[gold,silver,bronze]
  day=86400.
  maxday=8.
  
  
                                ;  begplot,name=outdir+'alpha2v3.ps',/color
  
  ;;;USE ALPHA 2-3 & 3-4 CLUSTERING TO GROUP AMBIGUOUS AS JBS OR NO
  begplot,name=outdir+'alpha_alpha_corr.ps',/color,/land
  !p.charsize=1.5
  !x.margin=[8,2]
  !p.multi=[0,2,1]
  symsize=0.7
;  !p.multi=0
  alpha=cr.alpha
  alphaerr=abs(cr.alphaerr)
  alphaerr0=alpha-abs(cr.alphaerr[0])
  alphaerr1=alpha+abs(cr.alphaerr[1])
  malphaerr=alphaerr0
  for i=0,n_elements(cr)-1 do malphaerr[i]=mean(cr[i].alphaerr)
       
  wa=w23[w2] &  wb=w23[w3b]
  ;;no naked bursts
  wnaked=where(cr[wb].highlat1 lt nsig and cr[wb].tbreak lt 1e3 and cr[wb].seg3 eq 1,nwnak)
  if nwnak gt 0 then begin 
     wb[wnaked]=-1
     wp=where(wb ne -1)
     wb=wb[wp]
     wa=wa[wp]
  endif 
  plot,alpha[wa],alpha[wb],psym=5,yrange=[0,4],xtitle=!tsym.alpha+'!LII or III!N',ytitle=!tsym.alpha+'!LIII or IV!N',symsize=symsize,/iso,/nodata,xrange=[-0.5,2]
  oplot,alpha[wa],alpha[wb],psym=5,symsize=symsize,color=!grey70
;  goto,skipnow
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!grey70
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!grey70
  endfor 
  match,wb,silver,m1,m2
  wa2=wa[m1] &  wb2=wb[m1]
  oplot,alpha[wa2],alpha[wb2],psym=5,color=!blue,symsize=symsize
  for i=0,n_elements(wa2)-1 do begin
     oplot,[alphaerr0[wa2[i]],alphaerr1[wa2[i]]],[alpha[wb2[i]],alpha[wb2[i]]],color=!blue
     oplot,[alpha[wa2[i]],alpha[wa2[i]]],[alphaerr0[wb2[i]],alphaerr1[wb2[i]]],color=!blue
  endfor 
  
  wa=w123[w2c] &  wb=w123[w3c]
  ;;no naked bursts
  wnaked=where(cr[wb].highlat1 lt nsig and cr[wb].tbreak lt 1e3 and cr[wb].seg3 eq 1,nwnak)
  if nwnak gt 0 then begin 
     wb[wnaked]=-1
     wp=where(wb ne -1)
     wb=wb[wp]
     wa=wa[wp]
  endif 
  oplot,alpha[wa],alpha[wb],psym=4,symsize=symsize,color=!grey70
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!grey70 ;,color=!purple
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!grey70 ;,color=!purple
  endfor 
  match,wb,silver,m1,m2
  wa2=wa[m1] &  wb2=wb[m1]
  oplot,alpha[wa2],alpha[wb2],psym=4,color=!blue,symsize=symsize
  for i=0,n_elements(wa2)-1 do begin
     oplot,[alphaerr0[wa2[i]],alphaerr1[wa2[i]]],[alpha[wb2[i]],alpha[wb2[i]]],color=!blue
     oplot,[alpha[wa2[i]],alpha[wa2[i]]],[alphaerr0[wb2[i]],alphaerr1[wb2[i]]],color=!blue
  endfor 
;skipnow:
  wa=w4[w3g] & wb=w4[w4g]
  oplot,alpha[wa],alpha[wb],psym=8,color=!orange,symsize=symsize
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!orange
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!orange
  endfor 
;  histogram_2d,alpha[wa],alpha[wb],hist,[0.5,2.0],[1,3],4,4
;  contour,hist.map,hist.xbins,hist.ybins,color=!orange,xrange=[-0.5,2.0],yrange=[0,4]
;  stop
  wa=w4[w2g] & wb=w4[w3g]
  oplot,alpha[wa],alpha[wb],psym=8,color=!red,symsize=symsize
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!red
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!red
  endfor 
  wa=w4[w2g] & wb=w4[w4g]
  oplot,alpha[wa],alpha[wb],psym=8,color=!magenta,symsize=symsize
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!magenta
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!magenta
  endfor 
  xyouts,1.4,1.8,'III-IV',/data,charsize=1.5
  xyouts,-0.3,2.,'II-IV',/data,charsize=1.5
  xyouts,-0.3,0.85,'II-III',/data,charsize=1.5
  
  match,silver,w23[w3b],m1,m2s
  match,silver,w123[w3c],m1,m2sb
  xind=[w23[w2],w123[w2c],w4[w3g],w4[w2g]]
;  cxind=[w23[w2[m2s]],w123[w2c[m2sb]],w4[w3g],w4[w2g]]
  cxind=[w4[w3g],w4[w2g]]
  x=alpha[xind]
  xerr=malphaerr[xind]
  cx=alpha[cxind]
  yind=[w23[w3b],w123[w3c],w4[w4g],w4[w3g]]
;  cyind=[w23[w3b[m2s]],w123[w3c[m2sb]],w4[w4g],w4[w3g]]
  cyind=[w4[w4g],w4[w3g]]
  y=alpha[yind]
  yerr=malphaerr[yind]
  cy=alpha[cyind]
  data=rotate([[x],[y]],4)
  cdata=rotate([[cx],[cy]],4)
  
;  wts=clust_wts(cdata,n_clust=3)
;  c=cluster(data,wts,n_clust=3)
;;  wts=nn_learn(cdata,[2,4],n_clust=2)
;;  c=nn_clust(data,wts,n_clust=2)
;  wc0=where(c eq 0,nwc0)
;  wc1=where(c eq 1,nwc1)
;  wc2=where(c eq 2,nwc2)  

;  match,yind,cyind,m1,m2
;  fitexy,cx,cy,a,b,x_sig=malphaerr[cxind],y_sig=malphaerr[cyind],sig,chisq
;  diff=max(x)-min(x)
;  xx=findgen(1000)/100.*diff-diff*5
;;  oplot,xx,a+b*xx
;;  oplot,xx,a-xx/b-1
;;  oplot,xx,a-xx/b+1.4

;  yy=a+b*xx-1
;  yyp=a-xx/b-1
;;  yyp=a+b*xx+2
;  n=n_elements(x)
;  nc=n_elements(cx)
;  dy=fltarr(n) & dyerr=dy & dx=dy
;  for i=0,n-1 do begin 
;;     dx[i]=min(sqrt((x[i]-(xx+2.))^2+(y[i]-(b*(xx+2.)))^2))
;     dx[i]=min(sqrt((x[i]-xx)^2+(y[i]-yy)^2))
;     dy[i]=min(sqrt((x[i]-xx)^2+(y[i]-yyp)^2))
;     dyerr[i]=min(sqrt((x[i]+alphaerr[1,xind[i]]-xx)^2+(y[i]+alphaerr[1,yind[i]]-yyp)^2))
;  endfor 
;  d=dy[m1]
;  wa=where(m2 lt n_elements(gold))
;  wb=where(m2 ge n_elements(gold))
;  gold34=wa
;  gold23=wb
  
  
  ;;;use gold 2,3,4 and silver sure 34(w23) and 24(w123) to make parameter space for 23,34,24
  cn4=n_elements(w3g)
  cn23=n_elements(m2s)
  cn123=n_elements(m2sb)
  xind=[w23[w2],w123[w2c]]
  yind=[w23[w3b],w123[w3c]]
  ;;no silver
  dont_match,silver,yind,dm1,dm2
  yind=yind[dm2]
  xind=xind[dm2]
  ;;no naked bursts
  wnaked=where(cr[yind].highlat1 lt nsig and cr[yind].tbreak lt 1e3 and cr[yind].seg3 eq 1,nwnak)
  if nwnak gt 0 then begin 
     yind[wnaked]=-1
     wp=where(yind ne -1)
     yind=yind[wp]
     xind=xind[wp]
  endif 
  cxind=[w4[w2g],w4[w3g],w4[w2g]];,w23[w2[m2s]],w123[w2c[m2sb]]]
  cyind=[w4[w3g],w4[w4g],w4[w4g]];,w23[w3b[m2s]],w123[w3c[m2sb]]]
  c2=[w4[w2g]];,w123[w2c[m2sb]]]
  c3=[w4[w3g]];,w23[w2[m2s]]]
  c4=[w4[w4g]];,w23[w3b[m2s]],w123[w3c[m2sb]]]
  
  xseg=[replicate(2,cn4),replicate(3,cn4),replicate(2,cn4)];,replicate(3,cn23),replicate(2,cn123)]
  yseg=[replicate(3,cn4),replicate(4,cn4),replicate(4,cn4)];,replicate(4,cn23),replicate(4,cn123)]
  cw23=where(xseg eq 2 and yseg eq 3)
  cw34=where(xseg eq 3 and yseg eq 4)
  cw24=where(xseg eq 2 and yseg eq 4)
  
;  cen2=weighted_mean(alpha[c2],malphaerr[c2])
;  cen3=weighted_mean(alpha[c3],malphaerr[c3])
;  cen4=weighted_mean(alpha[c4],malphaerr[c4])
  cen2=mean(alpha[c2])
  cen3=mean(alpha[c3])
  cen4=mean(alpha[c4])
  xsd23=stddev(alpha[cxind[cw23]])
  ysd23=stddev(alpha[cyind[cw23]])
  xsd34=stddev(alpha[cxind[cw34]])
  ysd34=stddev(alpha[cyind[cw34]])
  xsd24=stddev(alpha[cxind[cw24]])
  ysd24=stddev(alpha[cyind[cw24]])
  dcen23=sqrt(((alpha[xind]-cen2)/xsd23)^2+((alpha[yind]-cen3)/ysd23)^2)
  dcen34=sqrt(((alpha[xind]-cen3)/xsd34)^2+((alpha[yind]-cen4)/ysd34)^2)
  dcen24=sqrt(((alpha[xind]-cen2)/xsd24)^2+((alpha[yind]-cen4)/ysd24)^2)
;  dcen23=sqrt((alpha[xind]-cen2)^2+(alpha[yind]-cen3)^2)  
;  dcen34=sqrt((alpha[xind]-cen3)^2+(alpha[yind]-cen4)^2)
;  dcen24=sqrt((alpha[xind]-cen2)^2+(alpha[yind]-cen4)^2)
  cdcen23=sqrt(((alpha[cxind]-cen2)/xsd23)^2+((alpha[cyind]-cen3)/ysd23)^2)
  cdcen34=sqrt(((alpha[cxind]-cen3)/xsd34)^2+((alpha[cyind]-cen4)/ysd34)^2)
  cdcen24=sqrt(((alpha[cxind]-cen2)/xsd24)^2+((alpha[cyind]-cen4)/ysd24)^2)
;  cdcen23=sqrt((alpha[cxind]-cen2)^2+(alpha[cyind]-cen3)^2)
;  cdcen34=sqrt((alpha[cxind]-cen3)^2+(alpha[cyind]-cen4)^2)
;  cdcen24=sqrt((alpha[cxind]-cen2)^2+(alpha[cyind]-cen4)^2)
  
  ans=intarr(n_elements(xind))
  for i=0,n_elements(xind)-1 do begin
     mm=min([dcen23[i],dcen34[i],dcen24[i]],c)
     ans[i]=c
  endfor 
  
  cans=intarr(n_elements(cxind))
  for i=0,n_elements(cxind)-1 do begin
     mm=min([cdcen23[i],cdcen34[i],cdcen24[i]],c)
     cans[i]=c
  endfor 
  cw0=where(cans[cw23] eq 0,ncw0)
  cw1=where(cans[cw34] eq 1,ncw1)
  cw2=where(cans[cw24] eq 2,ncw2)
  help,cw0,cw1,cw2,cw23,cw34,cw24
  oplot,[cen2,cen3,cen2],[cen3,cen4,cen4],psym=7,color=!green,thick=10,symsize=1.5
;  ellipse,xsd23,ysd23,0.,0.,360.,cen2,cen3
;  ellipse,xsd34,ysd34,0.,0.,360.,cen3,cen4
;  ellipse,xsd24,ysd24,0.,0.,360.,cen2,cen4

  ;;no silver
;  dont_match,silver,yind,dm1,dm2
;  ans=ans[dm2]
;  yind=yind[dm2]
;  xind=xind[dm2]

  dw0=where(ans eq 0)
  dw1=where(ans eq 1)
  dw2=where(ans eq 2)
  help,dw0,dw1,dw2
  
  ;;is defining this new criteria (distance from gold/silver 23,34,24) any better?
  wn23=dw0
  wn34=dw1;[dw1,dw2]  ;;;probably grabbing too much, hmmmm.....
  wn24=dw2
  
  goto,skiphist1
  plothist,[-1,dy],bin=0.1,xrange=[0,3],xstyle=1,x1,y1
;  plothist,dx,bin=0.1,xrange=[-0.5,2.5],xstyle=1,x1,y1,/noplot ;over,color=!red

  plothist,[-1,d[wa]],x0,y0,bin=0.2,xrange=[0,3],xstyle=1,/over,color=!orange
  
  g=gaussfit(x0,y0,g1,estimates=[max(y0),mean(d[wa]),stddev(d[wa])],nterm=3)
  g=gaussian(x1,g1)
  oplot,x1,g,color=!green
  sig=1.645
;  sig=2.
  oplot,[g1[1]-g1[2]*sig,g1[1]-g1[2]*sig],[0,100],color=!cyan,line=2
  plothist,[-1,d[wb]],x0,y0,bin=0.1,xrange=[0,3],xstyle=1,/over,color=!red
  g=gaussfit(x0,y0,g2,estimates=[max(y0),mean(d[wb]),stddev(d[wb])],nterm=3)
  g=gaussian(x1,g2)
  oplot,x1,g,color=!green
  oplot,[g2[1]+g2[2]*sig,g2[1]+g2[2]*sig],[0,100],color=!purple,line=2
  
;  plothist,dyerr-dy,xerr,yerr,bin=0.1,xrange=[-0.5,2.5],xstyle=1,/over,color=!blue

;  match,yind,w123[w3c],mm1,mm2
;  plothist,dy[mm1],bin=0.1,xrange=[-0.5,2.5],xstyle=1,/over,color=!purple
;  match,yind,w23[w3b],mm1,mm2
;  plothist,dy[mm1],bin=0.1,xrange=[-0.5,2.5],xstyle=1,/over,color=!darkgreen
  
  oplot,[-1,3],[0,0]
  yerr=y1*0.1
  p=[g2,g1]
;  newp=mpfitfun('double_gauss',x1,y1,yerr,p,weights=1.,yfit=yfit)
;  oplot,x1,yfit,color=!magenta
;  g=gaussian(x1,newp[0:2])
;  oplot,x1,g,color=!cyan
;  g=gaussian(x1,newp[3:*])
;  oplot,x1,g,color=!cyan
  
;  oplot,[newp[1]+newp[2],newp[1]+newp[2]],[0,100],color=!blue,line=2
;  oplot,[newp[4]-abs(newp[5]),newp[4]-abs(newp[5])],[0,100],color=!purple,line=2
  goto,skipfornow
  dont_match,xind,cxind,dm1,dm2
  
;  wn23=where(dy[dm1] lt newp[1]+newp[2])
;  wn34=where(dy[dm1] gt newp[4]-abs(newp[5]))
  wn23=where(dy[dm1] lt g2[1]+g2[2]*2.);1.645)
  wn34=where(dy[dm1] gt g1[1]-g1[2]*2.);1.645)
;  wn34=where(dy[dm1] gt g2[1]+g2[2]*1.645)
;  wneither=where(dy[dm1] gt g2[1]+g2[2]*1.645 and dy[dm1] lt g1[1]-g1[2]*1.645)
  wn23=dm1[wn23]
  wn34=dm1[wn34]
;  wneither=yind[dm1[wneither]]
  help,wn23,wn34
  skiphist1:
  skipfornow:

;  dont_match,yind[wn34],silver,dm1,dm2
;  pewter=yind[wn34[dm1]]
  pewter=yind[wn34]
;  wn34=wn34[dm1]
;  pewter=[pewter,wneither]
  alsopew=where((cr[w0[wjb0]].tstart gt 0.1*day or (cr[w0[wjb0]].tstart lt 0.1*day and cr[w0[wjb0]].tlastdet gt maxday*day)) and cr[w0[wjb0]].alpha gt 1.5)
  pewter=[pewter,w0[wjb0[alsopew]]]
  dont_match,bronze,pewter,dm1,dm2
  bronze=bronze[dm1]
  wnaked=where(cr[bronze].highlat1 lt nsig and (cr[bronze].tbreak lt 1e3 and cr[bronze].seg3 eq 1) or (cr[bronze].seg0 eq 1 and cr[bronze].alpha gt 3 and cr[bronze].tlastdet lt 3000),nwnak)
  if nwnak gt 0 then begin 
     bronze[wnaked]=-1
     wp=where(bronze ne -1)
     bronze=bronze[wp]
  endif 

;  wnaked=where(cr[pewter].highlat1 lt nsig and cr[pewter].tbreak lt 1e3 and cr[pewter].seg3 eq 1,nwnak)
;  if nwnak gt 0 then begin 
;     pewter[wnaked]=-1
;     wp=where(pewter ne -1)
;     pewter=pewter[wp]
;  endif 
  
;  dont_match,yind[wn24],silver,dm1,dm2
;  iron=yind[wn24[dm1]]
  iron=yind[wn24]
  dont_match,bronze,iron,dm1,dm2
  bronze=bronze[dm1]
;  wn24=wn24[dm1]
;;  wn24=wn24[dm1]
;  wnaked=where(cr[iron].highlat1 lt nsig and cr[iron].tbreak lt 1e3 and cr[iron].seg3 eq 1,nwnak)
;  if nwnak gt 0 then begin 
;     iron[wnaked]=-1
;     wp=where(iron ne -1)
;     iron=iron[wp]
;;     wn24=wn24[wp]
;  endif 
;  type_jb,cr,pewter,wjb=wjbp,/silent,nsig=nsig
;  pewter=pewter[wjbp]
  
  wa=xind & wb=yind
  plot,alpha[wa],alpha[wb],psym=3,yrange=[0,4],xtitle=!tsym.alpha+'!LII or III!N',ytitle=!tsym.alpha+'!LIII or IV!N',symsize=symsize,/iso,/nodata,xrange=[-0.5,2]
;  goto,skipnow
;  for i=0,n_elements(wa)-1 do begin
;     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]]
;     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]]
;  endfor 
  
  ;;checking for unaccounted for grey points (silver & naked)
;  wa=w123[w2c] &  wb=w123[w3c]
;  oplot,alpha[wa],alpha[wb],psym=4,symsize=symsize,color=!grey70
;  wa=w23[w2] &  wb=w23[w3b]
;  oplot,alpha[wa],alpha[wb],psym=5,symsize=symsize,color=!grey70
  
  wa=xind[wn23] & wb=yind[wn23]
  match,w23[w2],wa,m1,m2
  oplot,alpha[wa[m2]],alpha[wb[m2]],psym=5,color=!purple,symsize=symsize
  match,w123[w2c],wa,m1,m2
  oplot,alpha[wa[m2]],alpha[wb[m2]],psym=5,color=!purple,symsize=symsize
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!purple
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!purple
  endfor 
  
  wa=xind[wn34] & wb=yind[wn34]
  match,w23[w2],wa,m1,m2
  oplot,alpha[wa[m2]],alpha[wb[m2]],psym=5,color=!cyan,symsize=symsize
  match,w123[w2c],wa,m1,m2
  oplot,alpha[wa[m2]],alpha[wb[m2]],psym=4,color=!cyan,symsize=symsize
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!cyan
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!cyan
  endfor 

  wa=xind[wn24] & wb=yind[wn24]
  match,w23[w2],wa,m1,m2
  oplot,alpha[wa[m2]],alpha[wb[m2]],psym=5,color=!yellow,symsize=symsize
  match,w123[w2c],wa,m1,m2
  oplot,alpha[wa[m2]],alpha[wb[m2]],psym=4,color=!yellow,symsize=symsize
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!yellow
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!yellow
  endfor 
  
;  wa=w4[w3g] & wb=w4[w4g]
;  oplot,alpha[wa],alpha[wb],psym=8,color=!orange,symsize=symsize
;  for i=0,n_elements(wa)-1 do begin
;     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!orange
;     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!orange
;  endfor 
  
;  wa=[w123[w2c],w23[w2]] & wb=[w123[w3c],w23[w3b]]
;  match,wb,silver,m1,m2
;  wa2=wa[m1] &  wb2=wb[m1]
;  oplot,alpha[wa2],alpha[wb2],psym=5,color=!blue,symsize=symsize
;  for i=0,n_elements(wa2)-1 do begin
;     oplot,[alphaerr0[wa2[i]],alphaerr1[wa2[i]]],[alpha[wb2[i]],alpha[wb2[i]]],color=!blue
;     oplot,[alpha[wa2[i]],alpha[wa2[i]]],[alphaerr0[wb2[i]],alphaerr1[wb2[i]]],color=!blue
;  endfor 
;  wa=w4[w2g] & wb=w4[w3g]
;  oplot,alpha[wa],alpha[wb],psym=8,color=!red,symsize=symsize
;  for i=0,n_elements(wa)-1 do begin
;     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!red
;     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!red
;  endfor 
;  oplot,xx,a+b*xx
;  oplot,xx,a-xx/b-1
;  oplot,xx,a-xx/b+1.4
  oplot,[cen2,cen3,cen2],[cen3,cen4,cen4],psym=7,color=!green,thick=10,symsize=1.5
;  ellipse,xsd23,ysd23,0.,0.,360.,cen2,cen3
;  ellipse,xsd34,ysd34,0.,0.,360.,cen3,cen4
;  ellipse,xsd24,ysd24,0.,0.,360.,cen2,cen4
  xyouts,1.4,1.8,'III-IV',/data,charsize=1.5
  xyouts,-0.3,2.,'II-IV',/data,charsize=1.5
  xyouts,-0.3,0.85,'II-III',/data,charsize=1.5
  
  goto,skiphist2
  plothist,[-1,dy],bin=0.1,xrange=[0,3],xstyle=1,x1,y1
  plothist,[-1,d[gold34]],x0,y0,bin=0.1,xrange=[0,3],xstyle=1,/over,color=!orange
  plothist,[-1,d[gold23]],x0,y0,bin=0.1,xrange=[0,3],xstyle=1,/over,color=!red
  plothist,[-1,dy[wn34]],bin=0.1,xrange=[0,3],xstyle=1,/over,color=!cyan
  plothist,[-1,dy[wn24]],bin=0.1,xrange=[0,3],xstyle=1,/over,color=!yellow
  plothist,[-1,dy[wn23]],bin=0.1,xrange=[0,3],xstyle=1,/over,color=!purple
  oplot,[-1,3],[0,0]
  skiphist2:
  endplot

  goto,skipthis
  help,wc0,wc1,wc2
  plot,[-0.5,2],[0,4],psym=5,/iso,yrange=[0,4],xtitle=!tsym.alpha+'!LII or III!N',ytitle=!tsym.alpha+'!LIII or IV!N',/nodata
  
  wa=xind[wc0] & wb=yind[wc0]
  oplot,alpha[wa],alpha[wb],psym=2,color=!magenta
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!magenta
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!magenta
  endfor 
  
  wa=xind[wc1] & wb=yind[wc1]
  oplot,alpha[wa],alpha[wb],psym=2,color=!cyan
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!cyan
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!cyan
  endfor 
  
  wa=xind[wc2] & wb=yind[wc2]
  oplot,alpha[wa],alpha[wb],psym=2,color=!green
  for i=0,n_elements(wa)-1 do begin
     oplot,[alphaerr0[wa[i]],alphaerr1[wa[i]]],[alpha[wb[i]],alpha[wb[i]]],color=!green
     oplot,[alpha[wa[i]],alpha[wa[i]]],[alphaerr0[wb[i]],alphaerr1[wb[i]]],color=!green
  endfor 
  
  
  num=[nwc0,nwc1,nwc2]
  list=['wc0','wc1','wc2']
  s=sort(num)
;  print,list[s[2]]
  tmp=execute('wlist2='+list[s[2]])
  tmp=execute('wlist1='+list[s[1]])
  tmp=execute('wlist0='+list[s[0]])
  
  
  match,[w23[w3b[m2]],w123[w3c[m2b]],w4[w4g]],yind[w],m1,m2 & help,m2

;  match,[w4[w4g]],yind[w],m1,m2 & help,m2

  !p.multi=0
  
  stop
  skipthis:
  
;  begplot,name='~/papers/jetbreaks1/class_stats.ps',/land
  plotsym,0,/fill
  w=where(cr[last].tstart lt 0.1*day and cr[last].tstop gt maxday*day,nw)
  wg=where(cr[gold].tstart lt 0.1*day and cr[gold].tstop gt maxday*day,nwg)
  ws=where(cr[silver].tstart lt 0.1*day and cr[silver].tstop gt maxday*day,nws)
  wb=where(cr[bronze].tstart lt 0.1*day and cr[bronze].tstop gt maxday*day,nwb)
  goto,skip0
  !p.multi=[0,2,2]
  plot,cr[jb].alpha,cr[jb].tbreak,psym=3,/ylog,/yno,xtitle=!tsym.alpha,ytitle='t!Lbreak!N'
;  oplot,cr[gold].alpha,cr[gold].tbreak,psym=8 ;,color=!red
  if nwg gt 0 then oplot,cr[gold[wg]].alpha,cr[gold[wg]].tbreak,psym=8 ;,color=!red
;  oplot,cr[silver].alpha,cr[silver].tbreak,psym=1 ;,color=!blue
  if nws gt 0 then oplot,cr[silver[ws]].alpha,cr[silver[ws]].tbreak,psym=1 ;,color=!red
;  oplot,cr[bronze].alpha,cr[bronze].tbreak,psym=5 ;,color=!yellow
  if nwb gt 0 then oplot,cr[bronze[wb]].alpha,cr[bronze[wb]].tbreak,psym=5 ;,color=!red ;,color=!yellow
;  oplot,cr[jbs[w]].alpha,cr[jbs[w]].tbreak,psym=5
  
  plot,cr[jb].beta,cr[jb].tbreak,psym=3,/ylog,/yno,xtitle=!tsym.beta,ytitle='t!Lbreak!N'
;  oplot,cr[gold].beta,cr[gold].tbreak,psym=8 ;,color=!red
  if nwg gt 0 then oplot,cr[gold[wg]].beta,cr[gold[wg]].tbreak,psym=8 ;,color=!red
;  oplot,cr[silver].beta,cr[silver].tbreak,psym=1;;,color=!blue
  if nws gt 0 then oplot,cr[silver[ws]].beta,cr[silver[ws]].tbreak,psym=1 ;,color=!red
;  oplot,cr[bronze].beta,cr[bronze].tbreak,psym=5;,color=!yellow
  if nwb gt 0 then oplot,cr[bronze[wb]].beta,cr[bronze[wb]].tbreak,psym=5 ;,color=!red ;,color=!yellowq
;  oplot,cr[jbs[w]].beta,cr[jbs[w]].tbreak,psym=5
  
  plot,cr[jb].alpha,cr[jb].beta,psym=3,xtitle=!tsym.alpha,ytitle=!tsym.beta
;  oplot,cr[gold].alpha,cr[gold].beta,psym=8 ;,color=!red
  if nwg gt 0 then oplot,cr[gold[wg]].alpha,cr[gold[wg]].beta,psym=8 ;,color=!red
;  oplot,cr[silver].alpha,cr[silver].beta,psym=1;,color=!blue
  if nws gt 0 then oplot,cr[silver[ws]].alpha,cr[silver[ws]].beta,psym=1 ;,color=!red
;  oplot,cr[bronze].alpha,cr[bronze].beta,psym=5;,color=!yellow
  if nwb gt 0 then oplot,cr[bronze[wb]].alpha,cr[bronze[wb]].beta,psym=5 ;,color=!red ;,color=!yellow
;  oplot,cr[jbs[w]].alpha,cr[jbs[w]].beta,psym=5
  legend,['Gold','Silver','Bronze'],psym=[8,1,5],box=0,/top,/right
  
  !p.multi=0
;  endplot
  skip0:
  
;  tagnames=tag_names(cr)
;  wc=where(tagnames eq 'COMPLETE',nwc)
;;  if nwc eq 0 then begin 
;     add_tags,cr,['COMPLETE','CLASS'],['0','0'],newcr
;     cr=newcr & newcr=0
;  endif 
  
  cr[last[w]].complete=1
  cr[gold].class=1
  cr[silver].class=2
  cr[bronze].class=3
  for i=0,n_elements(last)-1 do begin
     l=where(cr.grb eq cr[last[i]].grb)
     c=where(cr[l].complete eq 1,nc)
     if nc gt 0 then cr[l].complete=1
     g=where(cr[l].class eq 1,ng)
     if ng gt 0 then cr[l].class=1
     s=where(cr[l].class eq 2,ns)
     if ns gt 0 then cr[l].class=2
     b=where(cr[l].class eq 3,nb)
     if nb gt 0 then cr[l].class=3
  endfor 
  
  
  goto,skip
  jb=[gold,silver,bronze]
;  w=where(cr[jb].theta gt 0)
;  wb=where(cr[bronze].theta gt 0)
  
  w=where(cr[jb].theta gt 0 and cr[jb].z gt 0)
  wb=where(cr[bronze].theta gt 0 and cr[bronze].z gt 0)
  l=where(cr[last].z gt 0)
  dont_match,jb,last[l],m1,m2
  m2=l[m2]
  begplot,name='~/papers/jetbreaks1/theta_dist_wz.ps',/land,/color
;  begplot,name='~/papers/jetbreaks1/theta_dist_wz_liang.ps',/land,/color
;  dont_match,jb,last,m1,m2
;  begplot,name='~/papers/jetbreaks1/theta_dist.ps',/land,/color
  bin=1.
  plothist,[-1,cr[jb[w]].theta],bin=bin,xrange=[0,40],xtitle=!tsym.theta+'!Lj!N',ytitle='N'
  plothist,[-1,cr[last[m2]].theta_end],bin=bin,xrange=[0,40],/over,color=!green            
  plothist,[-1,cr[bronze[wb]].theta],bin=bin,xrange=[0,40],/over,color=!red
  plothist,[-1,cr[[gold,silver]].theta],bin=bin,xrange=[0,40],/over,color=!blue
  plothist,[-1,cr[bronze[wb]].theta_end],bin=bin,xrange=[0,40],/over,color=!magenta        
  legend,['All JB candidates','Gold,Silver','Bronze','Non-JB last obs lower limit','Bronze last obs lower limit'],color=[!p.color,!blue,!red,!green,!magenta],line=[0,0,0,0,0],/top,/rig,box=0
  endplot
  skip:
  
  ;;;explore Tstop or Tlastdet and why we don't see jet breaks
  jb=[gold,silver,bronze]
  jb0=[gold,silver]
  wjb=where(cr[jb].z gt 0)
  wl=where(cr[last].z gt 0)
  wg=where(cr[gold].z gt 0)
  ws=where(cr[silver].z gt 0)
  wb=where(cr[bronze].z gt 0)
  wp=where(cr[pewter].z gt 0)
  z1=1.+cr.z
  wzz=where(cr.z eq 0.)
  z1[wzz]=1e12
  dont_match,last,jb,m1,m2
  nojb=last[m1[where(cr[last[m1]].z gt 0)]]
  goto,skip1
  begplot,name='~/papers/jetbreaks1/tstop_tbreak.ps',/land,/color
  plot,cr[last[wl]].tstop/z1[last[wl]],cr[last[wl]].tbreak/z1[last[wl]],/xlog,/ylog,yrange=[1e2,1e6],xrange=[1e4,1e8],xtitle='T!Lstop!N',ytitle='T!Lbreak!N',/nodata
  oplot,cr[gold[wg]].tstop/z1[gold[wg]],cr[gold[wg]].tbreak/z1[gold[wg]],psym=8,color=!yellow
  oplot,cr[silver[ws]].tstop/z1[silver[ws]],cr[silver[ws]].tbreak/z1[silver[ws]],psym=1,color=!blue
  oplot,cr[bronze[wb]].tstop/z1[bronze[wb]],cr[bronze[wb]].tbreak/z1[bronze[wb]],psym=5,color=!red
  oplot,cr[nojb].tstop/z1[nojb],cr[nojb].tbreak/z1[nojb],psym=4,color=!green
  legend,['Gold','Silver','Bronze','No JB'],box=0,/top,/left,color=[!yellow,!blue,!red,!green],psym=[8,1,5,4]
  oplot,[7.*day,7.*day]/(1.+2.5),[1e2,1e7],line=2
  endplot
  skip1:
  
  fluxrat=cr.flux/cr.rate
  tlastdet=cr.tlastdet
  tlastdet_rest=cr.tlastdet/z1
  tlastpos=cr.tlastpos
  ctr_lastdet=cr.ctr_tlastdet
  ctr_lastpos=cr.ctr_tlastpos
  
  w=where(tlastpos eq 0.)
  tlastpos[w]=tlastdet[w]
  tlastpos_rest=tlastpos/z1
  ctr_lastpos[w]=ctr_lastdet[w]
  tbreak=cr.tbreak
  tbreak[w4[w4g[wonlyeinorm1]]]=cr[w4[w3g[wonlyeinorm1]]].tbreak
  tbreak_rest=tbreak/z1
  tbreakerr=fltarr(2,n_elements(cr))
  tbreakerr[0,*]=cr.tbreakerr[0]
  tbreakerr[1,*]=cr.tbreakerr[1]
  
  ctr_break=cr.ctr_tbreak
  
  flux_lastdet=ctr_lastdet*fluxrat
  flux_break=ctr_break*fluxrat
  
  dl=lumdist(cr.z,h0=71,lambda=0.7)*1d6*3.08568025d18 ;;lumdist in cm
  lum_lastdet=4.*!pi*dl^2.*flux_lastdet*(1.+cr.z)^(-cr.alpha+cr.beta-1.)
  lum_break=4.*!pi*dl^2.*flux_break*(1.+cr.z)^(-cr.alpha+cr.beta-1.)
  lum_break_gam=lum_break*(1.-cos(cr.theta*!dtor))
  lum_lastdet_gam=lum_lastdet*(1.-cos(cr.theta_lastdet*!dtor))
  
;  !p.multi=[0,2,4]
;  erase
  goto,skip2a
  legsize=1
  charsize=1
  begplot,name=outdir+'t_flux_lum.ps',/color
  multiplot,/init,[2,4]
  multiplot
  plot,tlastdet_rest[last],ctr_lastdet[last],/xlog,/ylog,/nodata,ytitle='Count Rate (t)  (s!U-1!N)',xrange=[1e2,1e8],yrange=[1e-5,100],charsize=charsize
  oplot,tbreak_rest[gold],ctr_break[gold],psym=8,color=!orange
  oplot,tbreak_rest[silver],ctr_break[silver],symsize=symsize,psym=1,color=!blue
  oplot,tbreak_rest[bronze],ctr_break[bronze],symsize=symsize,psym=5,color=!red
;  legend,['Prominent','Hidden','Feasible','No Jet Break'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  multiplot
  plot,tlastdet_rest[last],ctr_lastdet[last],/xlog,/ylog,/nodata,xrange=[1e2,1e8],yrange=[1e-5,100]
  oplot,tlastdet_rest[gold],ctr_lastdet[gold],symsize=symsize,psym=8,color=!orange
  oplot,tlastdet_rest[silver],ctr_lastdet[silver],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet_rest[bronze],ctr_lastdet[bronze],symsize=symsize,psym=5,color=!red
  oplot,tlastdet_rest[last[m1]],ctr_lastdet[last[m1]],symsize=symsize,psym=4,color=!green
  legend,['Prominent','Hidden','Feasible','No Jet Break'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  multiplot
  plot,tlastdet_rest[last],flux_lastdet[last],/xlog,/ylog,/nodata,ytitle='Flux (t)  (erg cm!U-2!N s!U-1!N)',xrange=[1e2,1e8],yrange=[1e-15,1e-9],charsize=charsize
  oplot,tbreak_rest[gold],flux_break[gold],psym=8,color=!orange
  oplot,tbreak_rest[silver],flux_break[silver],symsize=symsize,psym=1,color=!blue
  oplot,tbreak_rest[bronze],flux_break[bronze],symsize=symsize,psym=5,color=!red
;  legend,['Prominent','Hidden','Feasible','No Jet Break'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  multiplot
  plot,tlastdet_rest[last],flux_lastdet[last],/xlog,/ylog,/nodata,xrange=[1e2,1e8],yrange=[1e-15,1e-9]
  oplot,tlastdet_rest[gold],flux_lastdet[gold],symsize=symsize,psym=8,color=!orange
  oplot,tlastdet_rest[silver],flux_lastdet[silver],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet_rest[bronze],flux_lastdet[bronze],symsize=symsize,psym=5,color=!red
  oplot,tlastdet_rest[last[m1]],flux_lastdet[last[m1]],symsize=symsize,psym=4,color=!green
;  legend,['Prominent','Hidden','Feasible','No Jet Break'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  multiplot
  plot,tlastdet_rest[last],lum_lastdet[last],/xlog,/ylog,/nodata,ytitle='L!Lx,iso!N (t)  (erg s!U-1!N)',xrange=[1e2,1e8],yrange=[1d40,1d49],charsize=charsize
  oplot,tbreak_rest[gold],lum_break[gold],psym=8,color=!orange
  oplot,tbreak_rest[silver],lum_break[silver],symsize=symsize,psym=1,color=!blue
  oplot,tbreak_rest[bronze],lum_break[bronze],symsize=symsize,psym=5,color=!red
;  legend,['Prominent','Hidden','Feasible','No Jet Break'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  multiplot
  plot,tlastdet_rest[last],lum_lastdet[last],/xlog,/ylog,/nodata,xrange=[1e2,1e8],yrange=[1d40,1d49]
  oplot,tlastdet_rest[gold],lum_lastdet[gold],symsize=symsize,psym=8,color=!orange
  oplot,tlastdet_rest[silver],lum_lastdet[silver],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet_rest[bronze],lum_lastdet[bronze],symsize=symsize,psym=5,color=!red
  oplot,tlastdet_rest[last[m1]],lum_lastdet[last[m1]],symsize=symsize,psym=4,color=!green
;  legend,['Prominent','Hidden','Feasible','No Jet Break'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  multiplot
  plot,tlastdet_rest[last],lum_lastdet_gam[last],/xlog,/ylog,/nodata,xtitle='t!Lbreak!N/(1+z) (s)',ytitle='L!Lx,'+!tsym.gamma+'!N (t) (erg s!U-1!N)',xrange=[1e2,1e8],yrange=[1d39,1d45],charsize=charsize
  oplot,tbreak_rest[gold],lum_break_gam[gold],psym=8,color=!orange
  oplot,tbreak_rest[silver],lum_break_gam[silver],symsize=symsize,psym=1,color=!blue
  oplot,tbreak_rest[bronze],lum_break_gam[bronze],symsize=symsize,psym=5,color=!red
;  legend,['Prominent','Hidden','Feasible','No Jet Break'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  multiplot
  plot,tlastdet_rest[last],lum_lastdet_gam[last],/xlog,/ylog,/nodata,xtitle='t!Llast detection!N/(1+z) (s)',xrange=[1e2,1e8],yrange=[1d39,1d45],charsize=charsize
  oplot,tlastdet_rest[gold],lum_lastdet_gam[gold],symsize=symsize,psym=8,color=!orange
  oplot,tlastdet_rest[silver],lum_lastdet_gam[silver],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet_rest[bronze],lum_lastdet_gam[bronze],symsize=symsize,psym=5,color=!red
  oplot,tlastdet_rest[last[m1]],lum_lastdet_gam[last[m1]],symsize=symsize,psym=4,color=!green
;  legend,['Prominent','Hidden','Feasible','No Jet Break'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  multiplot,/reset
  endplot
  skip2a:
;  !p.multi=0
;  erase
;  goto,skip5a
;  stop
  bin=0.5
  cs=1.5
  legsize=1.5
  xr=[2,8]
;  erase
  jbs=[gold,silver,pewter]
  w=where(tbreak eq 0)
  tbreak[w]=1.                  ;cr[w].tstart
  tbreak_rest[w]=1.             ;cr[w].tstart/z1
  erase
;  begplot,name=outdir+'tlastdet_dist.ps',/color
  multiplot,[2,3],/init
  
  ;;;gold obs
  yr=[0,20]
  multiplot
;  plothist,[0.,alog10(tlastdet[gold])],bin=bin,xrange=xr,yrange=yr,charsize=cs
  plot,xr,yr,/nodata
  plothist,[0.,alog10(tbreak[gold])],bin=bin,xrange=xr,yrange=yr,/over,color=!red,charsize=cs
;  plothist,[0.,alog10(tlastpos[gold])],bin=bin,xrange=xr,yrange=yr,/over,color=!orange
  oplot,xr,[0,0]
  legend,['Prominent'],box=0,/top,/left,charsize=legsize
  ;;;gold rest
  multiplot
  wz=where(cr[gold].z gt 0,nwz)
  plot,xr,yr,/nodata
;  plothist,[0.,alog10(tlastdet_rest[gold[wz]])],bin=bin,xrange=xr,yrange=yr,charsize=cs
  plothist,[0.,alog10(tbreak_rest[gold[wz]])],xg,yg,bin=bin,xrange=xr,yrange=yr,/over,color=!red
;  plothist,[0.,alog10(tbreak_rest[gold[wz]])],x,y,bin=1,xrange=xr,yrange=yr,/noplot
  limsamp=alog10(tbreak_rest[gold[wz]])

;  plothist,[0.,alog10(tlastpos_rest[gold[wz]])],bin=bin,xrange=xr,yrange=yr,/over,color=!orange
  oplot,xr,[0,0]
  legend,['t!Lbreak!N','t!Llast det!N','t!Llast possible break!N'],line=[0,0,0],color=[!red,!p.color,!orange],box=0,/top,/right,charsize=legsize
  
  ;;;silver & pewter & iron obs
  yr=[0,20]
  sp=[silver,pewter,iron]
  multiplot
  plothist,[0.,alog10(tlastdet[sp])],bin=bin,xrange=xr,yrange=yr,charsize=cs
  plothist,[0.,alog10(tbreak[sp])],bin=bin,xrange=xr,yrange=yr,/over,color=!red
  plothist,[0.,alog10(tlastpos[sp])],bin=bin,xrange=xr,yrange=yr,/over,color=!orange
  oplot,xr,[0,0]
  legend,['Hidden & Probable'],box=0,/top,/left,charsize=legsize
  ;;;silver & pewter rest
  multiplot
  wz=where(cr[sp].z gt 0,nwz)
  plothist,[0.,alog10(tlastdet_rest[sp[wz]])],bin=bin,xrange=xr,yrange=yr,charsize=cs
  plothist,[0.,alog10(tbreak_rest[sp[wz]])],bin=bin,xrange=xr,yrange=yr,/over,color=!red
  plothist,[0.,alog10(tlastpos_rest[sp[wz]])],x,y,bin=bin,xrange=xr,yrange=yr,/over,color=!orange
  
  limsamp=[limsamp,alog10(tbreak_rest[sp[wz]])]
  w=where(limsamp gt 0)
  limsamp=limsamp[w]
  meantr=mean(limsamp)
  stdtr=stddev(limsamp)
  lim=meantr+stdtr*1.645
  lim=alog10(max(tbreak_rest[gold]))
;  ag=[1.,meantr,stdtr,1.]
;  g=gaussfit(xg,yg,ag,nterm=4)
;  lim=meantr+ag[2]*1.645
;  oplot,xg,g,color=!green
  oplot,[lim,lim],[0,100],color=!green,line=1
  
  wlim=where(alog10(tlastpos_rest[sp[wz]]) lt lim,nlim)
  print,'last pos',nwz,nlim,nlim*1./nwz*1.
  wlim=where(alog10(tlastdet_rest[sp[wz]]) lt lim,nlim)
  print,'last det',nwz,nlim,nlim*1./nwz*1.

  oplot,xr,[0,0]
  
  ;;;bronze obs
;  yr=[0,45]
;  multiplot
;  plothist,[0.,alog10(tlastdet[bronze])],bin=bin,xrange=xr,yrange=yr,charsize=cs
;  plothist,[0.,alog10(tbreak[bronze])],bin=bin,xrange=xr,yrange=yr,/over,color=!red
;  plothist,[0.,alog10(tlastpos[bronze])],bin=bin,xrange=xr,yrange=yr,/over,color=!orange
;  oplot,xr,[0,0]
;  legend,['Feasible'],box=0,/top,/left,charsize=legsize
;  ;;;bronze rest
;  multiplot
;  wz=where(cr[bronze].z gt 0,nwz)
;  plothist,[0.,alog10(tlastdet_rest[bronze[wz]])],bin=bin,xrange=xr,yrange=yr,charsize=cs
;  plothist,[0.,alog10(tbreak_rest[bronze[wz]])],bin=bin,xrange=xr,yrange=yr,/over,color=!red
;  plothist,[0.,alog10(tlastpos_rest[bronze[wz]])],x,y,bin=bin,xrange=xr,yrange=yr,/over,color=!orange
;  wlim=where(alog10(tlastpos_rest[bronze[wz]]) lt lim,nlim)
;  print,'last pos',nwz,nlim,nlim*1./nwz*1.
;  wlim=where(alog10(tlastdet_rest[bronze[wz]]) lt lim,nlim)
;  print,'last det',nwz,nlim,nlim*1./nwz*1.

;  oplot,xr,[0,0]
  
  ;;;Non-JB obs
  dont_match,[gold,silver,iron,pewter],last,dm1,dm2
  nojb=last[dm2]
  yr=[0,20]
  multiplot
  plothist,[0.,alog10(tlastdet[nojb])],bin=bin,xrange=xr,yrange=yr,charsize=cs,xtitle='log t!Lobs!N (s)'
;  plothist,[0.,alog10(tbreak[nojb])],bin=bin,xrange=xr,yrange=yr,/over,color=!red
  plothist,[0.,alog10(tlastpos[nojb])],bin=bin,xrange=xr,yrange=yr,/over,color=!orange
  oplot,xr,[0,0]
  legend,['Non-Jet Break'],box=0,/top,/left,charsize=legsize
  ;;;Non-JB rest
  multiplot
  wz=where(cr[nojb].z gt 0,nwz)
  plothist,[0.,alog10(tlastdet_rest[nojb[wz]])],bin=bin,xrange=xr,yrange=yr,charsize=cs,xtitle='log t!Lobs!N/(1+z) (s)'
;  plothist,[1,alog10(tbreak_rest[nojb[wz]])],bin=bin,xrange=xr,yrange=yr,/over,color=!red
  plothist,[0.,alog10(tlastpos_rest[nojb[wz]])],x,y,bin=bin,xrange=xr,yrange=yr,/over,color=!orange
  wlim=where(alog10(tlastpos_rest[nojb[wz]]) lt lim,nlim)
  print,'last pos',nwz,nlim,nlim*1./nwz*1.
  wlim=where(alog10(tlastdet_rest[nojb[wz]]) lt lim,nlim)
  print,'last det',nwz,nlim,nlim*1./nwz*1.

  oplot,xr,[0,0]  
  
  multiplot,/reset
;  endplot  
  stop
  
  ;;;PROBE EISO
;  !p.multi=0
;  bin=0.2
;  w=where(cr[last].eiso gt 0)
;  plothist,[1,alog10(cr[last[w]].eiso*1d52)],bin=bin,xrange=[48,55],xtitle='E!Liso!N'
;  jbs=[gold,silver,pewter,iron]
;  w=where(cr[jbs].eiso gt 0)
;  plothist,[1,alog10(cr[jbs[w]].eiso*1d52)],bin=bin,xrange=[48,55],/over,color=!red;,line=2
;  w=where(cr[nojb].eiso gt 0)
;  plothist,[1,alog10(cr[nojb[w]].eiso*1d52)],bin=bin,xrange=[48,55],/over,color=!green;,line=2

  
  filter_jb_properties,cr,pewter,iron,nsig=nsig

  stop
  

;  skip5a:
  
;;   plot,tlastdet[last],tbreak[last],psym=3,/xlog,/ylog,yrange=[1e2,1e6],xtitle='t!Llast det!N',ytitle='t!Lbreak!N'
;;   for i=0,n_elements(last)-1 do oplot,[tlastdet[last[i]],tlastdet[last[i]]],[tbreak[last[i]]-tbreakerr[0,last[i]],tbreak[last[i]]+tbreakerr[1,last[i]]]
;;   oplot,tlastdet[gold],tbreak[gold],psym=8,color=!orange
;;   for i=0,n_elements(gold)-1 do oplot,[tlastdet[gold[i]],tlastdet[gold[i]]],[tbreak[gold[i]]-tbreakerr[0,gold[i]],tbreak[gold[i]]+tbreakerr[1,gold[i]]],color=!orange
;;   oplot,tlastdet[silver],tbreak[silver],psym=8,color=!blue
;;   for i=0,n_elements(silver)-1 do oplot,[tlastdet[silver[i]],tlastdet[silver[i]]],[tbreak[silver[i]]-tbreakerr[0,silver[i]],tbreak[silver[i]]+tbreakerr[1,silver[i]]],color=!blue
;;   oplot,tlastdet[pewter],tbreak[pewter],psym=8,color=!purple
;;   for i=0,n_elements(pewter)-1 do oplot,[tlastdet[pewter[i]],tlastdet[pewter[i]]],[tbreak[pewter[i]]-tbreakerr[0,pewter[i]],tbreak[pewter[i]]+tbreakerr[1,pewter[i]]],color=!purple
;;   oplot,tlastdet[bronze],tbreak[bronze],psym=8,color=!red
;;   for i=0,n_elements(bronze)-1 do oplot,[tlastdet[bronze[i]],tlastdet[bronze[i]]],[tbreak[bronze[i]]-tbreakerr[0,bronze[i]],tbreak[bronze[i]]+tbreakerr[1,bronze[i]]],color=!red
;;   dont_match,last,[gold,silver,pewter,bronze],m1,m2
;;   nojb=last[m1]
;;   oplot,tlastdet[nojb],tbreak[nojb],psym=8,color=!green
;;   for i=0,n_elements(nojb)-1 do oplot,[tlastdet[nojb[i]],tlastdet[nojb[i]]],[tbreak[nojb[i]]-tbreakerr[0,nojb[i]],tbreak[nojb[i]]+tbreakerr[1,nojb[i]]],color=!green
  
  
  
  goto,skip2
  begplot,name='~/papers/jetbreaks1/tstop_confusion.ps',/color
  !p.charsize=1.5
  symsize=0.5
  legsize=0.8
  !p.multi=[0,2,3]
  ;;IN THE OBSERVED FRAME, DO WE OBSERVED JB'S LONGER THAN NON-JB'S?
  plot,tlastdet[last],ctr_lastdet[last],/xlog,/ylog,/nodata,xtitle='T!Llast det!N (s)',ytitle='Count Rate @ T!Llast det!N (counts s!U-1!N)',xrange=[1e3,1e8],yrange=[1e-5,1]
  oplot,tbreak[gold],ctr_break[gold],psym=8,color=!orange
  oplot,tbreak[silver],ctr_break[silver],symsize=symsize,psym=1,color=!blue
;  oplot,tbreak[bronze],ctr_break[bronze],symsize=symsize,psym=5,color=!red
;  oplot,tlastdet[silver],ctr_lastdet[silver],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet[bronze],ctr_lastdet[bronze],symsize=symsize,psym=5,color=!red
  oplot,tlastdet[last[m1]],ctr_lastdet[last[m1]],symsize=symsize,psym=4,color=!green
  legend,['Gold','Silver','Bronze','No JB'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  ;;IN THE REST FRAME, DO WE OBSERVED JB'S LONGER THAN NON-JB'S?
  plot,tlastdet_rest[last[wl]],ctr_lastdet[last[wl]],/xlog,/ylog,/nodata,xtitle='T!Llast det!N/(1+z)  (s)',ytitle='Count Rate @ T!Llast det!N (counts s!U-1!N)',xrange=[1e3,1e8],yrange=[1e-5,1]
  oplot,tbreak_rest[gold[wg]],ctr_break[gold[wg]],psym=8,color=!orange
  oplot,tbreak_rest[silver[ws]],ctr_break[silver[ws]],symsize=symsize,psym=1,color=!blue
;  oplot,tbreak_rest[bronze[wb]],ctr_break[bronze[wb]],symsize=symsize,psym=5,color=!red
;  oplot,tlastdet_rest[silver[ws]],ctr_lastdet[silver[ws]],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet_rest[bronze[wb]],ctr_lastdet[bronze[wb]],symsize=symsize,psym=5,color=!red
  oplot,tlastdet_rest[nojb],ctr_lastdet[last[m1]],symsize=symsize,psym=4,color=!green
  legend,['Gold','Silver','Bronze','No JB'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  ;;IN REST FRAME, DOES FLUX CHANGE ANYTHING?
  plot,tlastdet[last],flux_lastdet[last],/xlog,/ylog,/nodata,xtitle='T!Llast det!N (s)',ytitle='Flux @ T!Llast det!N (erg cm!U-2!N s!U-1!N)',yrange=[1e-15,1e-10],xrange=[1e3,1e8]
  oplot,tbreak[gold],flux_break[gold],psym=8,color=!orange
  oplot,tbreak[silver],flux_break[silver],symsize=symsize,psym=1,color=!blue
;  oplot,tbreak[bronze],flux_break[bronze],symsize=symsize,psym=5,color=!red
;  oplot,tlastdet[silver],flux_lastdet[silver],symsize=symsize,psym=1,color=!balue
  oplot,tlastdet[bronze],flux_lastdet[bronze],symsize=symsize,psym=5,color=!red
  oplot,tlastdet[last[m1]],flux_lastdet[last[m1]],symsize=symsize,psym=4,color=!green
  legend,['Gold','Silver','Bronze','No JB'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  plot,tlastdet_rest[last[wl]],flux_lastdet[last[wl]],/xlog,/ylog,/nodata,xtitle='T!Llast det!N/(1+z)  (s)',ytitle='Flux @ T!Llast det!N (erg cm!U-2!N s!U-1!N)',xrange=[1e3,1e8],yrange=[1e-15,1e-10]
  oplot,tbreak_rest[gold[wg]],flux_break[gold[wg]],psym=8,color=!orange
  oplot,tbreak_rest[silver[ws]],flux_break[silver[ws]],symsize=symsize,psym=1,color=!blue
;  oplot,tbreak_rest[bronze[wb]],flux_break[bronze[wb]],symsize=symsize,psym=5,color=!red
;  oplot,tlastdet_rest[silver[ws]],flux_lastdet[silver[ws]],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet_rest[bronze[wb]],flux_lastdet[bronze[wb]],symsize=symsize,psym=5,color=!red
  oplot,tlastdet_rest[nojb],flux_lastdet[nojb],symsize=symsize,psym=4,color=!green
  legend,['Gold','Silver','Bronze','No JB'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  ;;HOW ABOUT LUM_ISO?
  plot,tlastdet_rest[last[wl]],lum_lastdet[last[wl]],/xlog,/ylog,/nodata,xtitle='T!Llast det!N/(1+z)  (s)',ytitle='L!Lx,ISO!N (erg s!U-1!N)',xrange=[1e3,1e8],yrange=[1d40,1d48]
  oplot,tbreak_rest[gold[wg]],lum_break[gold[wg]],psym=8,color=!orange
  oplot,tbreak_rest[silver[ws]],lum_break[silver[ws]],symsize=symsize,psym=1,color=!blue
;  oplot,tbreak_rest[bronze[wb]],lum_break[bronze[wb]],symsize=symsize,psym=5,color=!red
;  oplot,tlastdet_rest[silver[ws]],lum_lastdet[silver[ws]],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet_rest[bronze[wb]],lum_lastdet[bronze[wb]],symsize=symsize,psym=5,color=!red
  oplot,tlastdet_rest[nojb],lum_lastdet[nojb],symsize=symsize,psym=4,color=!green
  legend,['Gold','Silver','Bronze','No JB'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  ;;HOW ABOUT LUM_GAMMA?
  plot,tlastdet_rest[last[wl]],lum_lastdet_gam[last[wl]],/xlog,/ylog,/nodata,xtitle='T!Llast det!N/(1+z)  (s)',ytitle='L!Lx'+!tsym.gamma+'!N (erg s!U-1!N)',xrange=[1e3,1e8],yrange=[1d39,1d45]
  oplot,tbreak_rest[gold[wg]],lum_break_gam[gold[wg]],psym=8,color=!orange
  oplot,tbreak_rest[silver[ws]],lum_break_gam[silver[ws]],symsize=symsize,psym=1,color=!blue
;  oplot,tbreak_rest[bronze[wb]],lum_break_gam[bronze[wb]],symsize=symsize,psym=5,color=!red
;  oplot,tlastdet_rest[silver[ws]],lum_lastdet_gam[silver[ws]],symsize=symsize,psym=1,color=!blue
  oplot,tlastdet_rest[bronze[wb]],lum_lastdet_gam[bronze[wb]],symsize=symsize,psym=5,color=!red
  oplot,tlastdet_rest[nojb],lum_lastdet_gam[nojb],symsize=symsize,psym=4,color=!green
  legend,['Gold','Silver','Bronze','No JB'],box=0,/top,/right,color=[!orange,!blue,!red,!green],psym=[8,1,5,4],charsize=legsize
  
  !p.multi=0
  
  endplot
  skip2:
  
  goto,skip3
  ;;; looking at differences in redshift distributions - doesn't say much
  erase
  multiplot,[1,4],/init
  dont_match,[gold,silver,bronze,pewter],last,dm1,dm2
  nojb=last[dm2]
  wl=where(cr[nojb].z gt 0)
  bin=0.2
  multiplot & plothist,[-1.,cr[gold[wg]].z],bin=bin,xrange=[0,6]
  legend,'Prominent jet break',/top,/right,box=0
  multiplot & plothist,[-1.,cr[[pewter[wp],silver[ws]]].z],bin=bin,xrange=[0,6]
  legend,'Hidden & Probable jet break',/top,/right,box=0
  multiplot & plothist,[-1.,cr[bronze[wb]].z],bin=bin,xrange=[0,6]
  legend,'Feasible jet break',/top,/right,box=0
  multiplot & plothist,[-1.,cr[nojb[wl]].z],bin=bin,xrange=[0,6],xtitle='z'
  legend,'Non - jet break',/top,/right,box=0
  multiplot,/reset
  
  

;  begplot,name='~/papers/jetbreaks1/tlastdet_z.ps',/color,/land
  plot,tlastdet_rest[last[wl]],z1[last[wl]],/xlog,/nodata,xtitle='T!Llast det!N/(1+z)  (s)',ytitle='1+z',xrange=[1e3,1e8]
  oplot,tlastdet_rest[gold[wg]],z1[gold[wg]],psym=8,color=!orange
  oplot,tlastdet_rest[silver[ws]],z1[silver[ws]],psym=6,color=!blue
  oplot,tlastdet_rest[pewter[wp]],z1[pewter[wp]],psym=4,color=!purple
  oplot,tlastdet_rest[bronze[wb]],z1[bronze[wb]],psym=5,color=!red
  oplot,tlastdet_rest[nojb],z1[nojb],psym=1,color=!green
  legend,['Prominent','Hidden','Probable','Feasible','Non-Jet Break'],box=0,/top,/right,color=[!orange,!blue,!purple,!red,!green],psym=[8,6,4,5,1]
;  endplot
  skip3:
  
;;;LETS EXPLORE JB+EI

  if wonlyeinorm1[0] ne -1 then jbei1=w4[w3g[wonlyeinorm1]]
  if wonlyeinorm2[0] ne -1 then jbei2=w123[w3c[wonlyeinorm2]]
  if wonlyeinorm3[0] ne -1 then jbei3=w23[w3b[wonlyeinorm3]]
  if wonlyeinorm3a[0] ne -1 then jbei3a=w23[w2[wonlyeinorm3a]]
  if wonlyeinorm4[0] ne -1 then jbei4=w0[wonlyeinorm4]
  
  njbei1=n_elements(jbei1)
  njbei2=n_elements(jbei2)
  njbei3=n_elements(jbei3)
  njbei3a=n_elements(jbei3a)
  njbei4=n_elements(jbei4)
;  jbei=[jbei1,jbei2];,jbei3]
  help,njbei1,njbei2,njbei3,njbei3a,njbei4
  
  
  ks=1e3
  day=86400.

  goto,skip4
  print
  ;;MAKE CR RESULTS TABLE
  s=' & '
  m='$'
  sm=m+s+m
  jbei1=w4[w3g[weinorm]]
  jbei3a=[w23[w2[weinorm1a]]]
  jbei2=[w123[w3c[weinorm2]]]
  jbnorm3=[w23[w3b[wnorm]]]
;  jbei0=w0[weinorm0]
  for b=0,3 do begin 
     case b of
        0: begin
           list=gold
           file='jb_gold.tex'
        end
        1: begin
           list=silver[sort(silver)]
           file='jb_silver.tex'
        end 
        2: begin
           list=pewter[sort(pewter)]
           file='jb_pewter.txt'
        end 
        3: begin
           list=bronze[sort(bronze)]
           file='jb_bronze.tex'
        end 
     endcase 
     openw,lun,'~/papers/jetbreaks1/'+file,/get_lun

     for i=0,n_elements(list)-1 do begin
        bold=0
        only=0
        g=list[i]
        w=where(cr[jbei1].grb eq cr[g].grb,nw)
        w2a=where(cr[jbei3a].grb eq cr[g].grb,nw2)
        w3=where(cr[jbei2].grb eq cr[g].grb,nw3)
        w3b=where(cr[jbnorm3].grb eq cr[g].grb,nw3a)
;        w0a=where(cr[jbei0].grb eq cr[g].grb,nw0)
        wg=where(cr.grb eq cr[g].grb,nwg)
        theta=cr[g].theta
        if nwg eq 1 then theta=cr[g].theta_lastdet
        grb=cr[g].grb
        reg='$t_{b}$'

        ;;which region
        isareg=where(g eq w1234,nreg)
        if nreg gt 0 then class='I-II-III-IV'
        isareg=where(g eq w234,nreg)
        if nreg gt 0 then class='II-III-IV'
        isareg=where(g eq w123,nreg)
        if nreg gt 0 then class='I-II-III'
        isareg=where(g eq w23,nreg)
        if nreg gt 0 then class='II-III/III-IV'
        isareg=where(g eq w0,nreg)
        if nreg gt 0 then class='Single PL'
        
        doagain:
        if cr[g].z gt 0. then begin
           z=m+numdec(cr[g].z,2)+m 
           if cr[g].eiso gt 0 then begin 
              eiso=m+numdec(alog10(cr[g].eiso*1d52),2)+m
              egam=m+numdec(alog10(cr[g].eiso*1d52*(1.-cos(theta*!dtor))),2)+m
           endif else begin 
              eiso=' -- '
              egam=eiso
           endelse 
        endif else begin
           z=' -- '
           eiso=z
           egam=z
        endelse
        

        theta=numdec(theta,1)
        if nwg eq 1 then begin ;;if w0
           if only then begin  ;; if 2nd list
              theta='<'+theta
              tbreak=m+'<'+numdec(cr[g].tstart/ks,2)+m
              reg='$t_{start}$'
              if cr[g].z gt 0 then egam=m+'<'+egam+m
           endif else begin ;;if 1st list
              tbreak=m+'>'+numdec(cr[g].tlastdet/ks,2)+m
              theta='>'+theta
              reg='$t_{stop}$'
              if cr[g].z gt 0 then egam=m+'>'+egam+m
           endelse 
        endif 
        if nwg ne 1 then tbreak=m+numdec(cr[g].tbreak/ks,1)+'^{+'+numdec(cr[g].tbreakerr[1]/ks,1)+'}_{-'+numdec(cr[g].tbreakerr[0]/ks,1)+'}'+m
        if nwg ge 2 and b gt 0 and only eq 1 then begin ;;if 23 or 123 2nd list lastdet
           tbreak=m+'>'+numdec(cr[g].tlastdet/ks,2)+m
           theta='>'+theta
           if cr[g].z gt 0 then egam=m+'>'+egam+m
           reg='$t_{stop}$'
        endif 
        if nw2 gt 0 and nwg eq 2 and ((b eq 2 or b eq 3) or (b eq 1 and nw3a gt 0)) and only eq 2 then begin
           theta='<'+theta
           tbreak=m+'<'+numdec(cr[g].tstart/ks,2)+m
           reg='$t_{start}$'
           if cr[g].z gt 0 then egam=m+'<'+egam+m
        endif 
        if cr[g].z gt 0 and only gt 0 then begin
           z='' & eiso=''
        endif 

;        if (nwg eq 2 and nw2 gt 0) or (nwg eq 3 and nw3 gt 0) and b eq 1 then $
;           reg='$t_{b,EI}$'
;        if nwg eq 2
        
        
        if only eq 0 then begin 
           alpha=m+numdec(cr[g].alpha,2)+'^{+'+numdec(cr[g].alphaerr[1],2)+'}_{-'+numdec(cr[g].alphaerr[0],2)+'}'+m
           beta=m+numdec(cr[g].beta,2)+'^{+'+numdec(cr[g].betaerr[1],2)+'}_{-'+numdec(cr[g].betaerr[0],2)+'}'+m
        endif else begin
           alpha=''
           beta=''
           class=''
        endelse 
        type_jb,cr,g,wjb=wjb,wonlyspread=wonlyspread,wonlynospread=wonlynospread,wonlynorm=wonlynorm,wonlyeinorm=wonlyeinorm,wonlystruc=wonlystruc,wonlyjb=wonlyjb,wonlyism=wonlyism,wonlywind=wonlywind,wonlypg2=wonlypg2,wonlyp12=wonlyp12,wonlynu2=wonlynu2,wonlynu3=wonlynu3,/silent,nsig=nsig
        res=''
        if wonlyspread[0] ne -1 then res=res+' Spreading'
        if wonlynospread[0] ne -1 then res=res+' Non-spreading' 
        if wonlynorm[0] ne -1 then res=res+' Uniform'
        if wonlyeinorm[0] ne -1 then res=res+'\textbf{Energy Injection}'
        if wonlystruc[0] ne -1 then res=res+' Structured'
        if wonlyism[0] ne -1 then res=res+' ISM'
        if wonlywind[0] ne -1 then res=res+' Wind'
        if wonlynu2[0] ne -1 then res=res+' $\nu<\nu_c$'
        if wonlynu3[0] ne -1 then res=res+' $\nu>\nu_c$'
        if wonlyp12[0] ne -1 then res=res+' $1<p<2$'
        if wonlypg2[0] ne -1 then res=res+' $p>2$'
        
        if cr[g].z eq 0 then xi=' '+' \xi' else xi=''
        printf,lun,grb+s+class+s+reg+s+alpha+s+beta+s+tbreak+s+z+s+eiso+s+m+theta+xi+m+s+egam+s+res+' \\'
        
        ;;if 3+EI or w0 or (23 or 123 and bronze) and first round 
        if nw gt 0 or (nwg ge 2 and (b eq 2 or b eq 3)) and only eq 0 then begin 
           if nw gt 0 then begin
              g=jbei1[w]
              theta=cr[g].theta
;              if bold then reg='\boldmath{$t_{b,EI}$}' else 
              reg='$t_{b,EI}$'
           endif 
           if nwg ge 2 and (b eq 2 or b eq 3) then theta=cr[g].theta_lastdet
           only=1
           grb='          '
           goto,doagain
        endif
        if nwg eq 1 and wjb[0] ne -1 and only eq 0 then begin
           theta=cr[g].theta_tstart
           only=1
           grb='          '
           goto,doagain
        endif 
        ;;if 2 of w23 and w23 and bronze and second round then
        if nw2 gt 0 and nwg eq 2 and (b eq 2 or b eq 3) and only eq 1 then begin
           only=2
           g=jbei3a[w2a]
           theta=cr[g].theta_tstart
           grb='          '
           goto,doagain
        endif
        if b eq 1 and only eq 0 then begin
           only=1
           theta=cr[g].theta_lastdet
           grb='          '
           goto,doagain
        endif 
        if nwg eq 2 and nw2 gt 0 and nw3a gt 0 and b eq 1 and only eq 1 then begin 
           only=2
           theta=cr[g].theta_tstart
           grb='          '
           goto,doagain
        endif 
        
;; if 2 of w23 or 3 of w123 and EI consistent then  second round then
;        if (nwg eq 2 and nw2 gt 0) or (nwg eq 3 and nw3 gt 0) and b eq 1 then begin 
;           reg='$t_{b,EI}$'
        
        
     endfor 
     close,lun
     free_lun,lun
  endfor 
  stop
skip4:     
  
;  goto,skip4
  ;;LETS STUDY THE DIFFERENCE BETWEEN II-III/III-IV AND GOLD II-III
  
  wjb23=where(cr[w23[w2]].alpha gt 0.7)
  wjb123=where(cr[w123[w2c]].alpha gt 0.7)
  bin=0.1
  charsize=1
  begplot,name=outdir+'compare23.ps',/color
  !p.multi=[0,2,3]
  xrange=[-0.5,2.5]
  plothist,[-1,cr[w4[[w2g,w3g]]].alpha],bin=bin,xrange=xrange,xstyle=1,xtitle=!tsym.alpha,ytitle='N',title='Prominent Sample II-III',/nodata,charsize=charsize
  plothist,[-1,cr[w4[w2g]].alpha],bin=bin,/over,color=!red,xrange=xrange,xstyle=1
  plothist,[-1,cr[w4[w3g]].alpha],bin=bin,/over,color=!blue,xrange=xrange,xstyle=1
  plothist,[-1,cr[w4[w4g]].alpha],bin=bin,/over,color=!green,xrange=xrange,xstyle=1
  oplot,xrange,[0,0]
  legend,[!tsym.alpha+'!LII!N',!tsym.alpha+'!LIII!N',!tsym.alpha+'!LIV!N'],/top,/right,box=0,textcolor=[!red,!blue,!green],charsize=charsize;,margin=-0.8
  
  plothist,[-1,alog10(cr[w4[w3g]].tbreak)],bin=.1,xtitle='log t!Lbreak!N (s)',xrange=[2,6],title='Prominent Sample II-III',ytitle='N',charsize=charsize
  plothist,[-1,alog10(cr[w4[w4g]].tbreak)],bin=.1,xrange=[2,6],/over,color=!green,line=2
  
  plothist,[-1,cr[w23[w2]].alpha],bin=bin ,xrange=xrange,xstyle=1,xtitle=!tsym.alpha,ytitle='N',title='Ambiguous II-III/III-IV',charsize=charsize
  plothist,[-1,cr[w23[w2]].alpha],bin=bin,/over,color=!red,xrange=xrange,xstyle=1
  plothist,[-1,cr[w23[w3b]].alpha],bin=bin,/over,color=!blue,xrange=xrange,xstyle=1
;  match,w23[w3b],silver,m1,m2
;  plothist,[-1,cr[w23[w3b[m1]]].alpha],bin=bin,/over,color=!blue,line=1,xrange=xrange,xstyle=1
;  plothist,[-1,cr[w23[w2[m1]]].alpha],bin=bin,/over,color=!red,line=1,xrange=xrange,xstyle=1
  
;  match,w23,yind[wn34],m1,m2
;  match,w23,xind[wn34],m1x,m2x  
;  plothist,[-1,cr[w23[m1x]].alpha],bin=bin,/over,color=!cyan,xrange=xrange,xstyle=1
;  plothist,[-1,cr[w23[m1]].alpha],bin=bin,/over,color=!green,xrange=xrange,xstyle=1

  oplot,xrange,[0,0]
  legend,[!tsym.alpha+'!LII!N',!tsym.alpha+'!LIII!N'],/top,/right,box=0,textcolor=[!red,!blue],charsize=charsize;,margin=-0.8
  
  plothist,[-1,alog10(cr[w23[w3b]].tbreak)],bin=.1,xtitle='log t!Lbreak!N (s)',xrange=[2,6],title='Ambiguous II-III/III-IV',ytitle='N',charsize=charsize

;  plothist,[-1,alog10(cr[w23[m1]].tbreak)],bin=.1,xrange=[2,6],/over,color=!green,line=2
;  plothist,[-1,alog10(cr[w23[w3b[wjb23]]].tbreak)],bin=.1,xrange=[2,6],/over,color=!green
  
  
  plothist,[-1,cr[w123[w2c]].alpha],bin=bin,xrange=xrange,xstyle=1,xtitle=!tsym.alpha,ytitle='N',title='I-II-III Sample',charsize=charsize
  plothist,[-1,cr[w123[w2c]].alpha],bin=bin,/over,color=!red,xrange=xrange,xstyle=1
  plothist,[-1,cr[w123[w3c]].alpha],bin=bin,/over,color=!blue,xrange=xrange,xstyle=1
  
;  match,w123,yind[wn34],m1,m2
;  match,w123,xind[wn34],m1x,m2x  
;  plothist,[-1,cr[w123[m1x]].alpha],bin=bin,/over,color=!cyan,xrange=xrange,xstyle=1
;  plothist,[-1,cr[w123[m1]].alpha],bin=bin,/over,color=!green,xrange=xrange,xstyle=1
;  plothist,[-1,cr[w123[w2c[wjb123]]].alpha],bin=bin,/over,color=!cyan,xrange=xrange,xstyle=1
;  plothist,[-1,cr[w123[w3c[wjb123]]].alpha],bin=bin,/over,color=!green,xrange=xrange,xstyle=1
  
  oplot,xrange,[0,0]
  legend,[!tsym.alpha+'!LII!N',!tsym.alpha+'!LIII!N'],/top,/right,box=0,textcolor=[!red,!blue],charsize=charsize;,margin=-0.8

  plothist,[-1,alog10(cr[w123[w3c]].tbreak)],bin=.1,xtitle='log t!Lbreak!N (s)',xrange=[2,6],title='I-II-III Sample',ytitle='N',charsize=charsize
  
;  match,w123,yind[wn34],m1,m2
;  plothist,[-1,alog10(cr[w123[m1]].tbreak)],bin=.1,xrange=[2,6],/over,color=!green,line=2

;  plothist,[-1,alog10(cr[w123[w3c[wjb123]]].tbreak)],bin=.1,xrange=[2,6],/over,color=!green
  endplot  
  
  begplot,name=outdir+'ks_compare23.ps' ;,/land
  !p.multi=[0,2,3]
  kstwop,cr[w23[w2]].alpha,cr[w4[w2g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test II (Prominent vs. II-III/III-IV)'
  kstwop,cr[w123[w2c]].alpha,cr[w4[w2g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test II (Prominent vs. I-II-III)'
  kstwop,cr[w23[w3b]].alpha,cr[w4[w3g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LIII!N',title='KS test III (Prominent vs. II-III/III-IV)'
  kstwop,cr[w123[w3c]].alpha,cr[w4[w3g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LIII!N',title='KS test III (Prominent vs. I-II-III)'
  kstwop,cr[w23[w3b]].tbreak,cr[w4[w3g]].tbreak,d,prob,/plot,xtitle=!tsym.alpha+'!LIII!N',title='KS test t!Lbreak!N (Prominent vs. II-III/III-IV)',/xlog,xrange=[1e2,1e6]
  kstwop,cr[w123[w3c]].tbreak,cr[w4[w3g]].tbreak,d,prob,/plot,xtitle=!tsym.alpha+'!LIII!N',title='KS test t!Lbreak!N (Prominent vs. I-II-III)',/xlog,xrange=[1e2,1e6]
  
  !p.multi=0   
  endplot
  !p.multi=[0,2,4]
  match,w23[w3b],yind[wn23],m1,m2
  match,w23[w2],xind[wn23],m1x,m2x
  kstwop,cr[w23[w2[m1x]]].alpha,cr[w4[w2g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test II (Prominent vs. II-III/III-IV)'
  kstwop,cr[w23[w3b[m1]]].alpha,cr[w4[w3g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test III (Prominent vs. II-III/III-IV)'
  kstwop,cr[w23[w2[m1x]]].alpha,cr[w4[w3g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test III (Prominent vs. II-III/III-IV)'
  kstwop,cr[w23[w3b[m1]]].alpha,cr[w4[w4g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test IV (Prominent vs. II-III/III-IV)'
  
  match,w23[w3b],yind[wn34],m1,m2
  match,w23[w2],xind[wn34],m1x,m2x
  kstwop,cr[w23[w2[m1x]]].alpha,cr[w4[w2g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test II (Prominent vs. II-III/III-IV)'
  kstwop,cr[w23[w3b[m1]]].alpha,cr[w4[w3g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test III (Prominent vs. II-III/III-IV)'
  kstwop,cr[w23[w2[m1x]]].alpha,cr[w4[w3g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test III (Prominent vs. II-III/III-IV)'
  kstwop,cr[w23[w3b[m1]]].alpha,cr[w4[w4g]].alpha,d,prob,/plot,xtitle=!tsym.alpha+'!LII!N',title='KS test IV (Prominent vs. II-III/III-IV)'
;  skip4:

;  goto,skip5
  ;;NOW TIME TO COMPARE SINGLE PL TO OTHER BREAK TIMES AND STUFF
  begplot,name=outdir+'singlepl.ps',/color,/land
;  !p.multi=[0,2,1]
  !p.multi=0
  type_jb,cr,w0,wjb=wjb,nsig=nsig
  tlastpos=cr.tlastdet
  plot,cr[w0[wjb]].tstart,cr[w0[wjb]].alpha,/xlog,psym=3,xrange=[10,1e7],xstyle=1,xtitle='t!Lstart!N -> t!Llast possible break time!N (s)',ytitle=!tsym.alpha,charsize=1.5
  for i=0,n_elements(wjb)-1 do begin
     j=w0[wjb[i]]
;     lc=lcout2fits(strtrim(cr[j].grb,2)+'/lc_newout.txt',/silent)
;     nlc=n_elements(lc)
     color=!p.color
;     if nlc gt 3 then color=!red
     if (cr[j].tstart gt 0.1*day or (cr[j].tstart lt 0.1*day and cr[j].tlastdet gt maxday*day)) and cr[j].alpha gt 1.5 then color=!orange
;     if cr[j].tstart lt 0.1*day and cr[j].tlastdet gt maxday*day then color=!blue
     oplot,[cr[j].tstart,tlastpos[j]],[cr[j].alpha,cr[j].alpha],color=color
     oplot,[cr[j].tstart,cr[j].tstart],[cr[j].alpha-cr[j].alphaerr[0],cr[j].alpha+cr[j].alphaerr[1]],color=color
     
  endfor 
  oplot,[0.1*day,maxday*day],[0.1,0.1],color=!green,thick=13
  
  endplot
;  skip5:
;goto,skip5  
  !p.multi=[0,1,2]
  begplot,name=outdir+'singlepl_egam.ps',/color;,/land
  w=where(cr[w0].eiso eq 0)
  eiso=cr[w0].eiso
  eiso[w]=10.
  egamstart=alog10(eiso*1d52*(1.-cos(cr[w0].theta_tstart*!dtor)))
  egamstop=alog10(eiso*1d52*(1.-cos(cr[w0].theta_lastdet*!dtor)))
;  z1[*]=1.;

;  plot,cr[w0[wjb]].tstart/z1[w0[wjb]],egamstart[wjb],psym=8,yrange=[46,53],/xlog,/ysty,xrange=[10,1e7]
;  oplot,tlastpos[w0[wjb]]/z1[w0[wjb]],egamstop[wjb],psym=8,color=!red
;  w=where(cr[w0[wjb]].tstart gt 0.1*day and cr[w0[wjb]].alpha gt 1.5,nw)
;  oplot,cr[w0[wjb[w]]].tstart,egamstart[wjb[w]],psym=8,color=!cyan
;  oplot,cr[w0[wjb[w]]].tstop,egamstop[wjb[w]],psym=8,color=!orange
;  oplot,[0.1*day,maxday*day],[46.3,46.3],color=!green,thick=3
;  oplot,[10,1e7],[51,51],line=2

  
  plothist,[1,egamstart[wjb]],bin=0.2,xrange=[46,53],yrange=[0,10],/xstyle,xtitle='log E!L'+!tsym.gamma+'!N (ergs)' ;,charsize=1.
  plothist,[1,egamstop[wjb]],bin=0.2,/over,color=!red,xrange=[46,53],yrange=[0,10],line=2
  legend,['E!L'+!tsym.gamma+'!N (t!Lstart!N)','','E!L'+!tsym.gamma+'!N (t!Llast det!N)'],box=0,/top,/left,line=[0,-1,0],color=[!p.color,0,!red] ;,charsize=1.
  
  postjb=wjb0[alsopew]
  dont_match,wjb0[alsopew],wjb0,dm1,dm2
  prejb=wjb0[dm2]
  plothist,[1,egamstart[postjb]],bin=0.2,xrange=[46,53],yrange=[0,10],/xstyle,xtitle='log E!L'+!tsym.gamma+'!N (ergs)' ;,charsize=1.
  plothist,[1,egamstop[prejb]],bin=0.2,/over,color=!red,xrange=[46,53],yrange=[0,10],line=2
  
  endplot
  !p.multi=0
goto,skip5  
  !p.multi=0
  dont_match,last,[gold,silver,pewter,iron],dm1,dm2
  nojb=last[dm1]
  jbs=[gold,silver,pewter,iron]
  plothist,[-1,cr[last].alpha],bin=0.1,xrange=[0,4],yrange=[0,20],/nodata
  plothist,[-1,cr[jbs].alpha],bin=0.1,/over,color=!red,xrange=[0,4],yrange=[0,20]
  plothist,[-1,cr[bronze].alpha],bin=0.1,/over,xrange=[0,4],color=!blue,yrange=[0,20]
  plothist,[-1,cr[nojb].alpha],bin=0.1,/over,xrange=[0,4],color=!green,yrange=[0,20]
skip5:
  
  ;;;COMPARING RESULTS TO OTHER PEOPLE'S RESULTS
  myjbs=[gold,silver,pewter,iron];,bronze]
  myjbs=myjbs[sort(myjbs)]
  
  pan1='GRB'+['050315','050318','050319','050505','050730','050803','050814','050820A','051008','051022','051221A','060105','060109','060204B','060413','060428A','060526','060605','060607A','060614','060807','060813','060906','061201','061202','061222A','070107','070220','070306','070311']
  pan2='GRB'+['050401','050408','050525A','050603','050712','050713A','050713B','050726','050802','050826','050922B','051001','051016B','051211B','060121','060124','060210','060218','060219','060306','060707','060719','060923C','061019','061126','070125','070318']
  pan=[pan1,pan2]
  pan=pan[sort(pan)]
  
  burrows='GRB'+['050315','050814','050820A','051221A','060428A','060614']
  enwei='GRB'+['050124','050128','050315','050318','050525A','050717','050726','050730','050802','050803','050820A','050908','051006','051008','051016B','051109A','051221A','060105','060108','060124','060203','060204B','060210','060211A','060313','060319','060323','060428A','060502A','060510A','060526','060605','060614','060807','060813','060814','060906','060908','060927','061121','061201','061222A','070103']
  eclass=[2,2,2,2,3,2,2,1,1,1,3,1,2,2,2,3,2,2,1,2,1,1,2,1,2,2,1,1,1,2,3,1,3,2,2,2,1,1,2,2,1,2,1]
  class=['bronze','silver','gold']
  w=where(eclass gt 2)
;  enwei=enwei[w]
;  colprint,enwei,class[eclass-1]
  
  kocev='GRB'+['050315','050318','050319','050505','050730','050803','050814','051022','060526','060605','060614','060906','070306','050401','050408','050525A','050603','050802','051016B','060210','060218','060707','060708','070125','070318']
  
  will='GRB'+['050603','050730','050802','060413','060421','060526','060605','060614','050315','050814','060105','060607A']
  
  
  help,pan
  match,strtrim(cr[myjbs].grb,2),pan,m1,m2
  print,'In common between My JBs and Panaitescu et al.: ',n_elements(m1)
  dont_match,strtrim(cr[myjbs].grb,2),pan,dm1,dm2
  if dm2[0] ne -1 then ndm2=n_elements(dm2) else ndm2=0
  if dm1[0] ne -1 then ndm1=n_elements(dm1) else ndm1=0
  print,'Not in common between my JBs and Panaitescu et al.: ',ndm2,ndm1
  
  print
  help,burrows
  match,strtrim(cr[myjbs].grb,2),burrows,m1,m2
  print,'In common between My JBs and Burrows et al.: ',n_elements(m1)
  dont_match,strtrim(cr[myjbs].grb,2),burrows,dm1,dm2
  if dm2[0] ne -1 then ndm2=n_elements(dm2) else ndm2=0
  if dm1[0] ne -1 then ndm1=n_elements(dm1) else ndm1=0
  print,'Not in common between my JBs and Burrows et al.: ',ndm2,ndm1
  
  print
  help,enwei
;  myjbs=myjbs[sort(myjbs)]
;  my=myjbs[0:42]
  match,strtrim(cr[myjbs].grb,2),enwei,m1,m2
  print,'In common between My JBs and Liang et al.: ',n_elements(m1)
  dont_match,strtrim(cr[myjbs].grb,2),enwei,dm1,dm2
  if dm2[0] ne -1 then ndm2=n_elements(dm2) else ndm2=0
  if dm1[0] ne -1 then ndm1=n_elements(dm1) else ndm1=0
  print,'Not in common between my JBs and Liang et al.: ',ndm2,ndm1
  
  print
  help,kocev
  match,strtrim(cr[myjbs].grb,2),kocev,m1,m2
  print,'In common between My JBs and Kocev et al.: ',n_elements(m1)
  dont_match,strtrim(cr[myjbs].grb,2),kocev,dm1,dm2
  if dm2[0] ne -1 then ndm2=n_elements(dm2) else ndm2=0
  if dm1[0] ne -1 then ndm1=n_elements(dm1) else ndm1=0
  print,'Not in common between my JBs and Kocev et al.: ',ndm2,ndm1
  
  print
  help,will
  match,strtrim(cr[myjbs].grb,2),will,m1,m2
  print,'In common between My JBs and Willingale et al.: ',n_elements(m1)
  dont_match,strtrim(cr[myjbs].grb,2),will,dm1,dm2
  if dm2[0] ne -1 then ndm2=n_elements(dm2) else ndm2=0
  if dm1[0] ne -1 then ndm1=n_elements(dm1) else ndm1=0
  print,'Not in common between my JBs and Willingale et al.: ',ndm2,ndm1
  
  
  print,'GRB                 Me        Burrows    Panaitescu    Liang       Kocevski   Willingale'
;  last=gold
  smp=' '+['G','S','P','I','B']
  n=intarr(n_elements(last))
  nwme=n
  for i=0,n_elements(last)-1 do begin
     wg=where(last[i] eq gold,nwg)
     ws=where(last[i] eq silver,nws)
     wp=where(last[i] eq pewter,nwp)
     wi=where(last[i] eq iron,nwi)
     wb=where(last[i] eq bronze,nwb)
     nww=[nwg,nws,nwp,nwi,nwb]
     nwme[i]=nwg+nws+nwp+nwi
     wn=where(nww gt 0,nwn)
     if nwn gt 0 then samp=smp[wn[0]] else samp=''
     
     grb=strtrim(cr[last[i]].grb,2)
     wme=where(strtrim(cr[myjbs].grb,2) eq grb,nme)
     wdave=where(burrows eq grb,ndave)
     wpan=where(pan eq grb,npan)
     wen=where(enwei eq grb,nen)
     wkoc=where(kocev eq grb,nkoc)
     wwill=where(will eq grb,nwill)
     n[i]=ndave+npan+nen+nkoc+nwill
     if nme eq 0 and (ndave eq 1 or npan eq 1 or nen eq 1 or nkoc eq 1 or nwill eq 1) then stuff=replicate('!',n[i]) else stuff=''
     if nme ne 0 or ndave ne 0 or npan ne 0 or nen ne 0 or nkoc ne 0 or nwill ne 0 then $
        print,cr[last[i]].grb,nme,ndave,npan,nen,nkoc,nwill,'      ',samp,stuff
  endfor 
  w=where(n ge 2 and nwme eq 0)
  
  stop
  ;;PLOT GOLD LCS
;  begplot,name=outdir+'prominent_jb.ps',/color,/land
;  !p.multi=[0,5,5]
;  for i=0,n_elements(gold)-1 do begin
;     dir=strtrim(cr[gold[i]].grb)
;     cd,dir
;     print,dir
;     fit_lc,/justplot,title=cr[gold[i]].grb,arrowsize=1,/noleg,charsize=1.1,symsize=0.4
;     cd,'..'
;  endfor 
;  !p.multi=0
;  endplot
  
  ;;SHOULD MAKE SIMILAR TO W0 PLOT FOR WN23 TO SEE THOSE THAT ARE 3'S THAT DON'T BREAK AND KEEP GOING PAST JB TIME 
  !p.multi=0
;;   plot,cr[w23[w3b]].tbreak,cr[w23[w3b]].alpha,psym=3,/xlog,yrange=[0.5,4],xrange=[1e2,1e7]
;;   for i=0,n_elements(w3b)-1 do begin
;;      wa=where(yind[wn23] eq w23[w3b[i]],m1a)
;;      wb=where(yind[wn34] eq w23[w3b[i]],m1b)
;;      color=!p.color
;;      if m1a[0] ne 0 then color=!orange
;;      if m1b[0] ne 0 then color=!green

;;      j=w23[w3b[i]]
;; ;     j=yind[wn23[i]]
;;      oplot,[cr[j].tbreak,cr[j].tlastdet],[cr[j].alpha,cr[j].alpha],color=color
;;      oplot,[cr[j].tbreak,cr[j].tbreak],[cr[j].alpha-cr[j].alphaerr[0],cr[j].alpha+cr[j].alphaerr[1]],color=color
;;   endfor 
;;   oplot,[0.1*day,maxday*day],[0.1,0.1],color=!green,thick=13  
  
;  goto,skip7
  jbs=[gold,silver,pewter]
  dont_match,jbs,last,m1,m2
  w=where(cr[last[m2]].tstart lt 0.1*day and cr[last[m2]].tlastdet gt 8*day and cr[last[m2]].tlastpos gt 4.*day)
  ww=last[m2[w]]
  begplot,name=outdir+'unexplain.ps',/color
  !p.multi=[0,1,2]
  
  plot,cr[ww].tstart,cr[ww].alpha,/xlog,psym=3,xrange=[80,1e7],xtitle='t!Lstart!N -> t!Llast detection!N  (s)',ytitle=!tsym.alpha,yrange=[0.5,2.0],title='Observed Frame',charsize=2.
  for i=0,n_elements(ww)-1 do begin
     oplot,[cr[ww[i]].tstart,cr[ww[i]].tstart],[cr[ww[i]].alpha-cr[ww[i]].alphaerr[0],cr[ww[i]].alpha+cr[ww[i]].alphaerr[1]]
     oplot,[cr[ww[i]].tstart,cr[ww[i]].tlastdet],replicate(cr[ww[i]].alpha,2)
     if cr[ww[i]].tbreak gt 0 then oplot,[cr[ww[i]].tbreak,cr[ww[i]].tlastpos],replicate(cr[ww[i]].alpha,2),color=!red 
     
  endfor 
  oplot,cr[ww].tlastpos,cr[ww].alpha,color=!orange,psym=8,thick=3
  oplot,[4.*day,4.*day],[0,2],line=1
  oplot,[6.*day,6.*day],[0,2],line=1
  oplot,[8.*day,8.*day],[0,2],line=1
;  plots,cr[ww].tbreak,cr[ww].alpha,color=!red,psym=1

  oplot,[0.1*day,8*day],[0.6,0.6],color=!green,thick=13  
  
  
  wb=where(cr[ww].z gt 0)
  ww=ww[wb]
  
  plot,cr[ww].tstart/z1[ww],cr[ww].alpha,/xlog,psym=3,xrange=[80,1e7],xtitle='t!Lstart!N -> t!Llast detection!N  (s)',ytitle=!tsym.alpha,yrange=[0.5,2.0],title='Rest Frame',charsize=2
  for i=0,n_elements(ww)-1 do begin
     oplot,[cr[ww[i]].tstart,cr[ww[i]].tstart]/z1[ww[i]],[cr[ww[i]].alpha-cr[ww[i]].alphaerr[0],cr[ww[i]].alpha+cr[ww[i]].alphaerr[1]]
     oplot,[cr[ww[i]].tstart,cr[ww[i]].tlastdet]/z1[ww[i]],replicate(cr[ww[i]].alpha,2)
     if cr[ww[i]].tbreak gt 0 then oplot,[cr[ww[i]].tbreak,cr[ww[i]].tlastpos]/z1[ww[i]],replicate(cr[ww[i]].alpha,2),color=!red 
     
  endfor 
  oplot,cr[ww].tlastpos/z1[ww],cr[ww].alpha,color=!orange,psym=8
  oplot,[1.*day,1.*day],[0,2],line=1  
  oplot,[3.*day,3.*day],[0,2],line=1  
  oplot,[5.*day,5.*day],[0,2],line=1  
;  oplot,[4.*day,4.*day],[0,2],line=1
;  oplot,[6.*day,6.*day],[0,2],line=1
;  oplot,[8.*day,8.*day],[0,2],line=1
;  plots,cr[ww].tbreak,cr[ww].alpha,color=!red,psym=1

  oplot,[0.1*day,5*day],[0.6,0.6],color=!green,thick=13  
;;   colprint,cr[last[m2[w]]].grb,cr[last[m2[w]]].alpha,cr[last[m2[w]]].tlastpos/day,cr[last[m2[w]]].tlastdet/day  
  !p.multi=0
  endplot
;  skip7:
  
  ;;;LETS PLOT THETA
  ;;;only for those with z
  begplot,name=outdir+'energetics.ps',/color,/land
  !p.multi=[0,2,1]
  yrange=[0,12]
  bin=1.
  jbs=[gold,silver,pewter,iron]
  sp=[silver,pewter,iron]
  wzsp=where(cr[sp].z gt 0)
  dont_match,jbs,last,dm1,dm2
  theta=cr.theta
  type_jb,cr,w4[w3g],wonlyei=wonlyei,/silent,nsig=nsig
  theta[w4[w4g[wonlyei]]]=theta[w4[w3g[wonlyei]]]
  wz=where(cr[jbs].z gt 0)
  w=where(theta[jbs[wz]] eq 0.)
  theta[jbs[wz[w]]]=cr[jbs[wz[w]]].theta_tstart
  wno0=where(theta[jbs[wz]] ne 0.)
;  aplothist,[-1,theta[jbs[wz[wno0]]]],bin=bin,xtitle=!tsym.theta+'!Lj!N (deg)',xrange=[0,20],yrange=yrange,ytitle='N'
  aplot,1,xrange,yrange,/nodata,xtitle=!tsym.theta+'!Lj!N (deg)',xrange=[0,20],yrange=yrange,ytitle='N'
;  wno0z=where(theta[jbs] ne 0. and cr[jbs].z eq 0) ;;no z with jb
;  plothist,[-1,theta[jbs[wno0z]]],bin=bin,/over,color=!red,xrange=[0,20],yrange=yrange,line=1
  plothist,[-1,theta[w4[w4g]]],bin=bin,/over,color=!red,xrange=[0,20],yrange=yrange
  plothist,[-1,theta[sp[wzsp]]],bin=bin,/over,color=!blue,xrange=[0,20],yrange=yrange,line=2
  dont_match,pewter,w0,dm1,dm2
  wafterjb=[yind[wn23],w12[w2a],w0[dm2]]
  w=where(cr[wafterjb].eiso ne 0 and cr[wafterjb].z gt 0)
  thetalp=cr[wafterjb[w]].theta_lastpos
  wth0=where(cr[wafterjb[w]].tlastpos eq 0.)
  thetalp[wth0]=cr[wafterjb[w[wth0]]].theta_lastdet
  plothist,[-1,thetalp],bin=bin,/over,color=!green,xrange=[0,20],yrange=yrange,line=1
  oplot,[0,20],[0,0]
  
  legend,['Prominent','Hidden & Probable','Non jet break'],color=[!red,!blue,!green],/top,/right,box=0,line=[0,2,1]
  
  xrange=[47,52]  
  yrange=[0,6]
  bin=0.25
  w=where(cr[jbs[wz[wno0]]].eiso gt 0)
  egam=alog10(cr[jbs[wz[wno0[w]]]].eiso*1d52*(1.-cos(theta[jbs[wz[wno0[w]]]]*!dtor)))
;  aplothist,[1,egam],bin=bin,xtitle='log E!L'+!tsym.gamma+'!N (ergs)',xrange=xrange,yrange=yrange,ytitle='N'
;  egam=alog10(1d53*(1.-cos(theta[jbs[wno0z]]*!dtor)))
;  plothist,[1,egam],bin=bin,/over,color=!red,xrange=xrange,yrange=yrange,line=1
  aplot,1,xrange,yrange,xtitle='log E!L'+!tsym.gamma+'!N (ergs)',xrange=xrange,yrange=yrange,ytitle='N',/nodata
  w=where(cr[w4[w4g]].eiso gt 0)
  egam=alog10(cr[w4[w4g[w]]].eiso*1d52*(1.-cos(theta[w4[w4g[w]]]*!dtor)))
  plothist,[1,egam],bin=bin,/over,color=!red,xrange=xrange,yrange=yrange
  w=where(cr[sp].eiso gt 0)
  egam=alog10(cr[sp[w]].eiso*1d52*(1.-cos(theta[sp[w]]*!dtor)))
  plothist,[1,egam],bin=bin,/over,color=!blue,xrange=xrange,yrange=yrange,line=2
  
  w=where(cr[wafterjb].eiso ne 0 and cr[wafterjb].z gt 0)
  egam=alog10(cr[wafterjb[w]].eiso*1d52*(1.-cos(thetalp*!dtor)))
  plothist,[1,egam],bin=bin,/over,color=!green,xrange=xrange,yrange=yrange,line=1
  oplot,xrange,[0,0]
  !p.multi=0
  endplot
  ;;WHAT ABOUT THOSE W/O Z, ADD SOME SORT OF LIMIT (TSTOP,TLASTPOS,TLASTDET)?
  stop
  return
end 
pro maybe_jet_break,cr,w,q,display=display,nsig=nsig
  
  if n_elements(nsig) eq 0 then nsig=3.
  cd,!mdata
  nseg=n_elements(cr)
  jetbreak=intarr(nseg)
  ;;grab only cr tags
  tags=tag_names(cr)
  tags=tags[6:n_elements(tags)-33]
  ncr=n_elements(tags)
  jtmp=strpos(tags,'JET')
  wj=where(jtmp eq 0,nwj)
;  wj=wj[0:nwj-2]
  for j=0,nseg-1 do begin
     bin=intarr(ncr)
     for i=0,ncr-1 do tmp=execute('bin[i]=cr[j].('+ntostr(i+6)+')')
     jet=bin[wj]
;     w=where(jet eq 1,nw)
     w=where(jet le nsig,nw)
     if nw gt 0 then cr[j].jetbreak=1
  endfor 
  
  u=uniq(cr.grb)
  nuniq=n_elements(u)
  jetbreak=intarr(nuniq)
  q=intarr(nuniq)
;  w=where(cr[u].jetbreak gt 0,nuniq)
;  u=u[w]
  
  alpha=fltarr(nuniq)
  tbreak=alpha
  count=0
  for i=0,nuniq-1 do begin 
     w=where(cr.grb eq cr[u[i]].grb,nw)
     q[i]=w[nw-1]
;     jetbreak[i]=total(cr[w].jetbreak)
     jetbreak[i]=cr[q[i]].jetbreak
     cr[w].jetbreak=0
;     tbreak[i]=max(cr[w].tbreak)  ;;NOTHING IS EVER DONE WITH TBREAK
     alpha[i]=cr[q[i]].alpha
;     jj=where(cr[w].jetbreak eq 1,njj)
;     if njj gt 0 then alpha[i]=cr[w[jj]].alpha
     if jetbreak[i] gt 0 then begin
        print,cr[u[i]].grb+' '+ntostrarr(cr[w].alpha)+' '+ntostr(jetbreak[i])
        count=count+1
        if nw eq 4 or (nw eq 3 and cr[w[0]].seg1 eq 0) then cr[w].jetbreak=4
        if nw eq 3 and cr[w[0]].seg1 eq 1 then cr[w].jetbreak=2
        if nw eq 2 and cr[w[0]].seg2 eq 1 then cr[w].jetbreak=3
        if nw eq 1 then cr[w].jetbreak=1
     endif 
     if jetbreak[i] gt 0 and keyword_set(display) then begin 
        plot_cr,cr,w,nsig=nsig
        print,cr[w].tbreak
        k=get_kbrd(10)
       if k eq 's' then stop
     endif 
  endfor 
;  q=q[1:*]  
  
  ;;if jetbreak eq 4 then jb seg 4 (I-II-III-IV or II-III-IV)
  ;;if jetbreak eq 3 then II-III or III-IV ambiguity
  ;;if jetbreak eq 2 then jb seg 3
  ;;if jetbreak eq 1 then one seg consistent with jcr
  
  
  w=where(cr[q].jetbreak gt 3,nw)
;  stop

  
  w=q[w]
;  colprint,cr[w].grb,cr[w].alpha,cr[w].jetbreak
    
  ;;;slopes very shallow for fitting jet breaks, see which jet CRs actually fit

;  stop
  
  return
end 

pro which_cr_results,cr,grbs,nsig=nsig,ps=ps
  
  if n_elements(nsig) eq 0 then nsig=3.
  ngrb=n_elements(grbs)
  for t=0,ngrb-1 do begin
     grb=grbs[t]
     g=where(strtrim(grb,2) eq strtrim(cr.grb,2),n)
     tnames=tag_names(cr)
     ntags=n_elements(tnames)
     ncrs=ntags-6-32
     print,grb
     bin=fltarr(ncrs)
     
     for i=0,n-1 do begin
        if cr[g[i]].seg0 eq 1 then seg=0
        if cr[g[i]].seg1 eq 1 then seg=1
        if cr[g[i]].seg2 eq 1 then seg=2
        if cr[g[i]].seg3 eq 1 then seg=3
        if cr[g[i]].seg4 eq 1 then seg=4
        print,'Segment '+ntostr(seg)+' consistent with:'
        for j=0,ncrs-1 do tmp=execute('bin[j]=cr[g[i]].('+ntostr(j+6)+')')
        w=where(bin le nsig,nw)
        if nw gt 0 then print,tnames[w+6]
     endfor 
     plot_cr,cr,g,nsig=nsig,ps=ps
;     stop
     if ngrb gt 1 then begin 
        k=get_kbrd(10)
        if k eq 's' then stop
     endif 
  endfor 

  return
end 
  
pro plot_cr,crs,ind,nsig=nsig,ps=ps
  
  if n_elements(nsig) eq 0 then nsig=3.
  if n_params() eq 2 then grbs=crs[ind[uniq(crs[ind].grb)]].grb else ind=indgen(n_elements(crs))
  ngrb=n_elements(grbs)
  
  for t=0,ngrb-1 do begin
     wg=where(crs.grb eq grbs[t],nwg)
     cr=crs[wg]
  
     rlc=0
     ncrs=n_tags(cr)-6-32
     breaks=n_elements(cr)-1
     dir=cr[0].grb
     cd,strtrim(dir,2)
;     fit_lc,/justplot,pmulti=[0,1,breaks+3],name=dir,charsize=1.5,lc=rlc
     erase
     multiplot2,/init,[1,2+nwg]
;     multiplot2
     rlc=lcout2fits()
;     plot_like_qdp,xtitle='',name=grbs[t],lc=rlc,/noxaxis
     if keyword_set(ps) then begin
        nocolor=1
        noleg=1
     endif 
     fit_lc,/justplot,title=grbs[t],charsize=1,lc=rlc,ytitle='Count Rate',noleg=noleg,nocolor=nocolor,/noinit
     wrlc=where(rlc.tot_hard gt 0 and finite(rlc.tot_hard))  
;  !y.margin=[3,1]
;     multiplot2,ydowngap=0.08
;     ploterror,rlc[wrlc].time,rlc[wrlc].tot_hard,rlc[wrlc].tot_hard_err,psym=3,/nohat,xtitle='Time since BAT trigger (s)',ytitle='hardness ratio',charsize=1.,/xlog,/ylog,yrange=minmax(rlc[wrlc].tot_hard),xtickname=replicate('',10) ;[min(rlc[wrlc].tot_hard-rlc[wrlc].tot_hard_err),max(rlc[wrlc].tot_hard+rlc[wrlc].tot_hard_err)]
     
     for r=0,n_elements(rlc[wrlc])-1 do oplot,[rlc[wrlc[r]].tstart,rlc[wrlc[r]].tstop],[rlc[wrlc[r]].tot_hard,rlc[wrlc[r]].tot_hard]
     which_alpha,cr.alpha,cr.alphaerr,j,posa,delalp,delalperr
     delalp=[0,delalp]
     delalperr=[[0,0],[delalperr]]
;     multiplot2
     seg=['I','II','III','IV']
     if cr[0].seg1 eq 0 then seg=seg[1:*]
     for j=0,breaks do begin 
        bin=fltarr(ncrs)
        for i=0,ncrs-1 do tmp=execute('bin[i]=cr[j].('+ntostr(i+6)+')')
        wsig=where(bin le nsig,nwsig)
        answer=intarr(ncrs)
        if nwsig gt 0 then answer[wsig]=1
        multiplot2,ydowngap=0
        if j eq breaks then xtitle=!tsym.alpha+' - (Closure Relation)' else xtitle=''
        which_closure_relation,cr[j].alpha,cr[j].alphaerr[0]/1.645,cr[j].alphaerr[1]/1.645,cr[j].beta+1.,cr[j].betaerr[0]/1.645,cr[j].betaerr[1]/1.645,crsp,posa[*,j],delalp[j],delalperr[*,j]/1.645,gg,ps=ps,answer=answer,qstr=qstr,nsig=nsig,xtitle=xtitle,charsize=1.,segment=seg[j],nocolor=nocolor

     endfor
     multiplot2,/reset
     multiplot2,/default
     
     cd,'..'

     if ngrb gt 1 then begin 
        k=get_kbrd(10)
        if k eq 's' then stop
     endif 
  endfor 
  
  return
end 

function qconsistent,q1,q2,q1err,q2err,nsig=nsig
  
  dq=q1-q2
  if dq gt 0 then begin
     if dq-nsig*q1err[0]-nsig*q2err[1] le 0 then return,1 else return,0
  endif else begin
     if dq+nsig*q1err[1]+nsig*q2err[0] ge 0 then return,1 else return,0
  endelse 

end 

pro cr_consistency_check,cr,elim,qstr,nsig=nsig
  
  if n_elements(nsig) eq 0 then nsig=3.
  elim=0
  ;;;MAKES ASSUMPTION THAT WIND OR ISM IS CONSTANT PER GRB
  
  crname=['HighLat1','HighLat2',$
;      'ISMs1a','ISMs1b','ISMs1ai',$
          'ISMs2a','ISMs2b','ISMs2ai',$
          'ISMs3a','ISMs3b','ISMs3ai',$
;      'WINDs1a','WINDs1b','WINDs1ai',$
          'WINDs2a','WINDs2b','WINDs2ai',$
          'WINDs3a','WINDs3b','WINDs3ai',$
;      'ISMf1a','ISMf1b','ISMf1ai',$
          'ISMf2a','ISMf2b','ISMf2ai',$
          'ISMf3a','ISMf3b','ISMf3ai',$
;      'WINDf1a','WINDf1b','WINDf1ai',$
          'WINDf2a','WINDf2b','WINDf2ai',$
          'WINDf3a','WINDf3b','WINDf3ai',$
;      'JETs1a','JETs1b','JETs1i',$
          'JETs2a','JETs2b','JETs2ai',$  ;;uniform jet (spreading)
          'JETs3a','JETs3b','JETs3ai',$
          'JETsISM2a','JETsISM2b','JETsISM2ai',$ ;;uniform jet (non-spreading)
          'JETsISM3a','JETsISM3b','JETsISM3ai',$
          'JETsWIND2a','JETsWIND2b','JETsWIND2ai',$
          'JETsWIND3a','JETsWIND3b','JETsWIND3ai',$
          'JETsoism2a','JETsoism2b',$ ;;structured outflow
          'JETsoism3a','JETsoism3b',$
          'JETsowind2a','JETsowind2b',$
          'JETsowind3a','JETsowind3b'] 
;          'JETthism2','JETthism3',$
;          'JETthwind2','JETthwind3'] ;;top-hat jet
  
  model=[3,3,$   ;;HighLAT 
         1,1,1,$ ;;ISMs2
         1,1,1,$ ;;ISMs3
         2,2,2,$ ;;WINDs2
         2,2,2,$ ;;WINDs3
         1,1,1,$ ;;ISMf2
         1,1,1,$ ;;ISMf3
         2,2,2,$ ;;WINDf2
         2,2,2,$ ;;WINDf3
         3,3,3,$ ;;JET2
         3,3,3,$ ;;JET3
         1,1,1,$ ;;JETsISM2
         1,1,1,$ ;;JETsISM3
         2,2,2,$ ;;JETsWIND2
         2,2,2,$ ;;JETsWIND3
         1,1,$   ;;DEL ALPHA SO ISM
         1,1,$
         2,2,$
         2,2]   ;;DEL ALPHA S0 WIND
  
  ;;ASSUMES THAT ONLY F->S TRANSITION NOT S->F
  sf=[3,3,$   ;;HighLAT 
      1,1,1,$ ;;ISMs2
      1,1,1,$ ;;ISMs3
      1,1,1,$ ;;WINDs2
      1,1,1,$ ;;WINDs3
      2,2,2,$ ;;ISMf2
      2,2,2,$ ;;ISMf3
      2,2,2,$ ;;WINDf2
      2,2,2,$ ;;WINDf3
      1,1,1,$ ;;JET2
      1,1,1,$ ;;JET3
      1,1,1,$     ;;JETsISM2
      1,1,1,$     ;;JETsISM3
      1,1,1,$     ;;JETsWIND2
      1,1,1,$     ;;JETsWIND3
      1,1,$   ;;DEL ALPHA SO ISM2
      1,1,$   ;;DEL ALPHA SO ISM3
      1,1,$   ;;DEL ALPHA S0 WIND2
      1,1]   ;;DEL ALPHA S0 WIND2
  
  nu=[0,0,$   ;;HighLAT 
      2,2,2,$ ;;ISMs2
      3,3,3,$ ;;ISMs3
      2,2,2,$ ;;WINDs2
      3,3,3,$ ;;WINDs3
      2,2,2,$ ;;ISMf2
      3,3,3,$ ;;ISMf3
      2,2,2,$ ;;WINDf2
      3,3,3,$ ;;WINDf3
      2,2,2,$ ;;JET2
      3,3,3,$ ;;JET3
      2,2,2,$     ;;JETsISM2
      3,3,3,$     ;;JETsISM3
      2,2,2,$     ;;JETsWIND2
      3,3,3,$     ;;JETsWIND3
      2,2,$     ;;DEL ALPHA SO ISM
      3,3,$     ;;DEL ALPHA SO ISM
      2,2,$     ;;DEL ALPHA S0 WIND
      3,3]      ;;DEL ALPHA S0 WIND
  
  n=n_elements(cr)
  ncrs=n_elements(crname)
  a1=intarr(n) & a2=a1 & a3=a1 & a4=a1 & a5=a1 & a6=a1
  for j=0,n-1 do begin 
        
     bin=fltarr(ncrs)
     for i=0,ncrs-1 do tmp=execute('bin[i]=cr[j].('+ntostr(i+6)+')')
     if cr[j].seg1 eq 1 then bin[0:1]=1
     w=where(bin le nsig,nw)
     if nw gt 0 then begin 
        mfits=model[w]
        sffits=sf[w]
        nufits=nu[w]
        wa1=where(mfits eq 1 or mfits eq 3,na1) ;;ISM models
        wa2=where(mfits eq 2 or mfits eq 3,na2) ;;Wind models
        wa3=where(sffits eq 1 or sffits eq 3,na3) ;;slow cooling models
        wa4=where(sffits eq 2 or sffits eq 3,na4) ;;fast colling models
        wa5=where(nufits eq 2 or nufits eq 0,na5) ;;nu2
        wa6=where(nufits eq 3 or nufits eq 0,na6) ;;nu3
        print,'Model fits: ',mfits
        print,'slow/fast:  ',sffits
        print,'nu2/nu3:    ',nufits
     endif else begin 
        na1=0 & na2=0 & na3=0 & na4=0 & na5=0 & na6=0
     endelse 
     if na1 gt 0 then a1[j]=1
     if na2 gt 0 then a2[j]=1
     if na3 gt 0 then a3[j]=1
     if na4 gt 0 then a4[j]=1
     if na5 gt 0 then a5[j]=1
     if na6 gt 0 then a6[j]=1
  endfor 
;  print,a1,a2,a3,a4,a5,a6
  ;;;HOW TO CHECK FOR ONLY F->S NO S->F?
  w1=where(a1 eq 0,nw1)                  ;;1=ISM
  w2=where(a2 eq 0,nw2)                  ;;2=WIND
  w3=where(a3 eq 0,nw3)                  ;;3=SLOW
  w4=where(a4 eq 0,nw4)                  ;;4=FAST
  w34=where(a3 eq 1 and a4 eq 1,nw34)    ;;SLOW OR FAST
  w5=where(a5 eq 0,nw5)                  ;;5=NU2
  w6=where(a6 eq 0,nw6)                  ;;6=NU3
  csm=0
  if nw1 eq 0 then csm=1
  if nw2 eq 0 then csm=2
  if nw1 eq 0 and nw2 eq 0 then csm=3
  if csm eq 0 then csm=3
  
  nus=0
  if nw5 eq 0 then nus=2
  if nw6 eq 0 then nus=3
  if nw5 eq 0 and nw6 eq 0 then nus=4
  if nus eq 0 then nus=4
  
  cool=intarr(n)
  cool[*]=3
;  nus=intarr(n)
  
  if n gt 1 then begin 
     wslow=where(a4 eq 0 and a3 eq 1,nws)                             ;;where only slow
     if nws gt 0 then if max(wslow) lt n-1 then a4[max(wslow)+1:*]=0  ;;then following fast bad 
     wfast=where(a4 eq 1 and a3 eq 0,nwf)                             ;;where only fast
     if nwf gt 0 then if min(wfast) gt 0 then a3[0:min(wfast)-1]=0    ;;then preceding slow bad
     w3=where(a3 eq 0,nw3)                                            ;;where not slow is fast
     w4=where(a4 eq 0,nw4)                                            ;;where not fast is slow
     w34=where(a3 eq 1 and a4 eq 1,nw34)                              ;;where slow and fast

;     wnu2=where(a5 eq 1 and a6 eq 0,nwnu2)                            ;;where definitely 2
;     if nwnu2 gt 0 then if min(wnu2) gt 0 then a6[0:min(wnu2)-1]=0    ;;then preceding not 3
;     wnu3=where(a5 eq 0 and a6 eq 1,nwnu3)                            ;;where definitely 3
;     if nwnu3 gt 0 then if max(wnu3) lt n-1 then a5[max(wnu3)+1:*]=0  ;;then following not 2
;     w5=where(a5 eq 0,nw5)                                            ;;where not 2 is 3
;     w6=where(a6 eq 0,nw6)                                            ;;where not 3 is 2
     
  endif
;  print
;  print,a1,a2,a3,a4,a5,a6
;  print
  if nw3 gt 0 then cool[w3]=2
  if nw4 gt 0 then cool[w4]=1
  if nw34 gt 0 then cool[w34]=3
;  if nw5 gt 0 then nus[w5]=3
;  if nw6 gt 0 then nus[w6]=2
  
  whighlat1=where(cr.highlat1 lt nsig,nwhighlat1)
  whighlat2=where(cr.highlat1 eq 100.,nwhighlat2)
  if n gt 2 and nwhighlat2 lt n-1 then begin  ;; if can see more than 2 seg then first must be high lat
     cr[1:*].highlat1=100.
     print,'eliminate: HIGHLAT1 2+'
     elim=elim+1
  endif
  if n eq 2 and nwhighlat2 lt n-1 then begin 
     if cr[0].seg1 eq 1 then begin ;;if 1-2
        cr[1].highlat1=100.
        print,'eliminate: HIGHLAT1 in II'
        elim=elim+1
     endif else begin ;;if 2-3
        ;;attempting to only allow naked GRBs to fit highlat1 in II because it's really a I
        if cr[1].highlat1 lt nsig and cr[1].tbreak lt 1e3 then begin ;;if maybe prompt+1
           cr[0].highlat1=100.
           print,'eliminate: HIGHLAT1 in possible prompt+1'
           elim=elim+1
        endif else begin ;;if really 2-3 or 3-4 no highlat possible
        
           cr.highlat1=100.
           print,'eliminate: HIGHLAT1 in II&III'
           elim=elim+1
        endelse 
     endelse 
  endif 

  for j=0,n-1 do begin
       
     bin=fltarr(ncrs)
     for i=0,ncrs-1 do tmp=execute('bin[i]=cr[j].('+ntostr(i+6)+')')
     if cr[j].seg1 eq 1 then bin[0:1]=1
     w=where(bin le nsig,nw)
     if nw gt 0 then begin 
        ism=where(model[w] eq 1,nism)
        wind=where(model[w] eq 2,nwind)
        slow=where(sf[w] eq 1,nslow)
        fast=where(sf[w] eq 2,nfast)
        nu2=where(nu[w] eq 2,nnu2)
        nu3=where(nu[w] eq 3,nnu3)
  
        if csm eq 1 then begin 
           for i=0,nwind-1 do begin
              tmp=execute('cr[j].('+ntostr(w[wind[i]]+6)+')=100.');cr[j].('+ntostr(w[wind[i]]+6)+')-2')
              print,'eliminate: '+ntostr(j+1)+' '+crname[w[wind[i]]]+' WIND'
              elim=elim+1
           endfor
           cr.csm=1 
        endif
        if csm eq 2 then begin 
           for i=0,nism-1 do begin 
;              tmp=execute('cr[j].(w['+ntostr(ism[i])+']+6)=cr[j].(w['+ntostr(ism[i]+6)+']+6)-2')
              tmp=execute('cr[j].('+ntostr(w[ism[i]]+6)+')=100.');cr[j].('+ntostr(w[ism[i]]+6)+')-2')
              print,'eliminate: '+ntostr(j+1)+' '+crname[w[ism[i]]]+' ISM'
              elim=elim+1
           endfor 
           cr.csm=2
        endif
        if csm eq 3 then cr[j].csm=3
  
        cr[j].cool=cool[j]
        if cool[j] eq 1 and nfast gt 0 then begin 
           for i=0,nfast-1 do begin
;              tmp=execute('cr[j].(w['+ntostr(fast[i])+']+6)=cr[j].(w['+ntostr(fast[i])+']+6)-3')
              tmp=execute('cr[j].('+ntostr(w[fast[i]]+6)+')=100.');cr[j].('+ntostr(w[fast[i]]+6)+')-3')
              print,'eliminate: '+ntostr(j+1)+' '+crname[w[fast[i]]]+' fast cool'
              elim=elim+1
           endfor 
        endif 
        if cool[j] eq 2 and nslow gt 0 then begin 
           for i=0,nslow-1 do begin 
;              tmp=execute('cr[j].(w['+ntostr(slow[i])+']+6)=cr[j].(w['+ntostr(slow[i])+']+6)-3')
              tmp=execute('cr[j].('+ntostr(w[slow[i]]+6)+')=100.');cr[j].('+ntostr(w[slow[i]]+6)+')-3')
              print,'eliminate: '+ntostr(j)+' '+crname[w[slow[i]]]+' slow cool'
              elim=elim+1
           endfor 
        endif 
        
        if nus eq 2 then begin
           for i=0,nnu3-1 do begin
              tmp=execute('cr[j].('+ntostr(w[nu3[i]]+6)+')=100.');cr[j].('+ntostr(w[nu3[i]]+6)+')-4')
              print,'eliminate: '+ntostr(j+1)+' '+crname[w[nu3[i]]]+' nu2'
              elim=elim+1
           endfor 
           cr.nu=2
        endif 
        if  nus eq 3 then begin
           for i=0,nnu2-1 do begin 
              tmp=execute('cr[j].('+ntostr(w[nu2[i]]+6)+')=100.');cr[j].('+ntostr(w[nu2[i]]+6)+')-4')
              print,'eliminate: '+ntostr(j+1)+' '+crname[w[nu2[i]]]+' nu3'
              elim=elim+1
           endfor 
           cr.nu=3
        endif 
        if nus eq 4 then cr[j].nu=4
;        cr[j].nu=nus[j]
;        if nus[j] eq 2 and nnu3 gt 0 then begin
;           for i=0,nnu3-1 do begin 
;;              tmp=execute('cr[j].(w['+ntostr(nu3[i])+']+6)=cr[j].(w['+ntostr(nu3[i])+']+6)-4')
;              tmp=execute('cr[j].('+ntostr(w[nu3[i]]+6)+')=cr[j].('+ntostr(w[nu3[i]]+6)+')-4')
;              print,'eliminate: '+ntostr(j+1)+' '+crname[w[nu3[i]]]
;           endfor
;        endif 
;        if nus[j] eq 3 and nnu2 gt 0 then begin 
;           for i=0,nnu2-1 do begin 
;;              tmp=execute('cr[j].(w['+ntostr(nu2[i])+']+6)=cr[j].(w['+ntostr(nu2[i])+']+6)-4')
;              tmp=execute('cr[j].('+ntostr(w[nu2[i]]+6)+')=cr[j].('+ntostr(w[nu2[i]]+6)+')-4')
;              print,'eliminate: '+ntostr(j+1)+' '+crname[w[nu2[i]]]
;           endfor
;        endif
        
         ;;;;;jetbreak non-spreading must have jet model & previous seg model same
        if n gt 1 and j eq n-1 then begin
           if cr[j].jetsism2a le nsig and (cr[j-1].isms2a gt nsig and cr[j-1].isms2b gt nsig and $
                                        cr[j-1].ismf2a gt nsig and cr[j-1].ismf2b gt nsig and $
                                        cr[j-1].jetsism2ai gt nsig) then begin 
              cr[j].jetsism2a=100.
              print,'eliminate: '+ntostr(j+1)+' JETSISM2a'
              elim=elim+1
           endif 
           if cr[j].jetsism2b le nsig and (cr[j-1].isms2a gt nsig and cr[j-1].isms2b gt nsig and $
                                        cr[j-1].ismf2a gt nsig and cr[j-1].ismf2b gt nsig and $
                                        cr[j-1].jetsism2ai gt nsig) then begin 
              cr[j].jetsism2b=100.
              print,'eliminate: '+ntostr(j+1)+' JETSISM2b'
              elim=elim+1
           endif 
           if cr[j].jetsism3a le nsig and (cr[j-1].isms3a gt nsig and cr[j-1].isms3b gt nsig and $
                                        cr[j-1].ismf3a gt nsig and cr[j-1].ismf3b gt nsig and $
                                        cr[j-1].jetsism3ai gt nsig) then begin 
              cr[j].jetsism3a=100.
              print,'eliminate: '+ntostr(j+1)+' JETSISM3a'
              elim=elim+1
           endif 
           if cr[j].jetsism3b le nsig and (cr[j-1].isms3a gt nsig and cr[j-1].isms3b gt nsig and $
                                        cr[j-1].ismf3a gt nsig and cr[j-1].ismf3b gt nsig and $
                                        cr[j-1].jetsism3ai gt nsig) then begin 
              cr[j].jetsism3b=100.
              print,'eliminate: '+ntostr(j+1)+' JETSISM3b'
              elim=elim+1
           endif 
           if cr[j].jetswind2a le nsig and (cr[j-1].winds2a gt nsig and cr[j-1].winds2b gt nsig and $
                                         cr[j-1].windf2a gt nsig and cr[j-1].windf2b gt nsig and $
                                         cr[j-1].jetswind2ai gt nsig) then begin 
              cr[j].jetswind2a=100.
              print,'eliminate: '+ntostr(j+1)+' JETSWIND2a'
              elim=elim+1
           endif 
           if cr[j].jetswind2b le nsig and (cr[j-1].winds2a gt nsig and cr[j-1].winds2b gt nsig and $
                                         cr[j-1].windf2a gt nsig and cr[j-1].windf2b gt nsig and $
                                         cr[j-1].jetswind2ai gt nsig) then begin 
              cr[j].jetswind2b=100.
              print,'eliminate: '+ntostr(j+1)+' JETSWIND2b'
              elim=elim+1
           endif 
           if cr[j].jetswind3a le nsig and (cr[j-1].winds3a gt nsig and cr[j-1].winds3b gt nsig and $
                                         cr[j-1].windf3a gt nsig and cr[j-1].windf3b gt nsig and $
                                         cr[j-1].jetswind3ai gt nsig) then begin 
              cr[j].jetswind3a=100.
              print,'eliminate: '+ntostr(j+1)+' JETSWIND3a'
              elim=elim+1
           endif 
           if cr[j].jetswind3b le nsig and (cr[j-1].winds3a gt nsig and cr[j-1].winds3b gt nsig and $
                                         cr[j-1].windf3a gt nsig and cr[j-1].windf3b gt nsig and $
                                         cr[j-1].jetswind3ai gt nsig) then begin 
              cr[j].jetswind3b=100.
              print,'eliminate: '+ntostr(j+1)+' JETSWIND3b'
              elim=elim+1
           endif 
           if cr[j].jetsoism2a le nsig and (cr[j-1].isms2a gt nsig and cr[j-1].isms2b gt nsig and $
                                            cr[j-1].ismf2a gt nsig and cr[j-1].ismf2b gt nsig and $
                                            cr[j-1].jetsism2ai gt nsig) then begin 
              cr[j].jetsoism2a=100.
              print,'eliminate: '+ntostr(j+1)+' JETSOISM2a'
              elim=elim+1
           endif 
           if cr[j].jetsoism2b le nsig and (cr[j-1].isms2a gt nsig and cr[j-1].isms2b gt nsig and $
                                            cr[j-1].ismf2a gt nsig and cr[j-1].ismf2b gt nsig and $
                                            cr[j-1].jetsism2ai gt nsig) then begin 
              cr[j].jetsoism2b=100.
              print,'eliminate: '+ntostr(j+1)+' JETSOISM2b'
              elim=elim+1
           endif 
           if cr[j].jetsoism3a le nsig and (cr[j-1].isms3a gt nsig and cr[j-1].isms3b gt nsig and $
                                            cr[j-1].ismf3a gt nsig and cr[j-1].ismf3b gt nsig and $
                                            cr[j-1].jetsism3ai gt nsig) then begin 
              cr[j].jetsoism3a=100.
              print,'eliminate: '+ntostr(j+1)+' JETSOISM3a'
              elim=elim+1
           endif 
           if cr[j].jetsoism3b le nsig and (cr[j-1].isms3a gt nsig and cr[j-1].isms3b gt nsig and $
                                            cr[j-1].ismf3a gt nsig and cr[j-1].ismf3b gt nsig and $
                                            cr[j-1].jetsism3ai gt nsig) then begin 
              cr[j].jetsoism3b=100.
              print,'eliminate: '+ntostr(j+1)+' JETSOISM3b'
              elim=elim+1
           endif 
           if cr[j].jetsowind2a le nsig and (cr[j-1].winds2a gt nsig and cr[j-1].winds2b gt nsig and $
                                             cr[j-1].windf2a gt nsig and cr[j-1].windf2b gt nsig and $
                                             cr[j-1].jetswind2ai gt nsig) then begin 
              cr[j].jetsowind2a=100.
              print,'eliminate: '+ntostr(j+1)+' JETSOWIND2a'
              elim=elim+1
           endif 
           if cr[j].jetsowind2b le nsig and (cr[j-1].winds2a gt nsig and cr[j-1].winds2b gt nsig and $
                                             cr[j-1].windf2a gt nsig and cr[j-1].windf2b gt nsig and $
                                             cr[j-1].jetswind2ai gt nsig) then begin 
              cr[j].jetsowind2b=100.
              print,'eliminate: '+ntostr(j+1)+' JETSOWIND2b'
              elim=elim+1
           endif 
           if cr[j].jetsowind3a le nsig and (cr[j-1].winds3a gt nsig and cr[j-1].winds3b gt nsig and $
                                             cr[j-1].windf3a gt nsig and cr[j-1].windf3b gt nsig and $
                                             cr[j-1].jetswind3ai gt nsig) then begin 
              cr[j].jetsowind3a=100.
              print,'eliminate: '+ntostr(j+1)+' JETSOWIND3a'
              elim=elim+1
           endif 
           if cr[j].jetsowind3b le nsig and (cr[j-1].winds3a gt nsig and cr[j-1].winds3b gt nsig and $
                                             cr[j-1].windf3a gt nsig and cr[j-1].windf3b gt nsig and $ 
                                                           cr[j-1].jetswind3ai gt nsig) then begin 
              cr[j].jetsowind3b=100.
              print,'eliminate: '+ntostr(j+1)+' JETSOWIND3b'
              elim=elim+1
           endif 
        endif 
        
        ;;ENERGY INJECTION + JET BREAK!
        if (n eq 2 and j ge n-1) or (n gt 2 and j ge n-2) then begin ;;is there another seg before j
           if cr[j].jets2ai le nsig and ($
              (cr[j-1].isms2ai gt nsig or qconsistent(qstr[j].jets2ai,qstr[j-1].isms2ai,qstr[j].jets2aierr,qstr[j-1].isms2aierr,nsig=nsig) eq 0) and $
              (cr[j-1].ismf2ai gt nsig or qconsistent(qstr[j].jets2ai,qstr[j-1].ismf2ai,qstr[j].jets2aierr,qstr[j-1].ismf2aierr,nsig=nsig) eq 0) and $
              (cr[j-1].winds2ai gt nsig or qconsistent(qstr[j].jets2ai,qstr[j-1].winds2ai,qstr[j].jets2aierr,qstr[j-1].winds2aierr,nsig=nsig) eq 0) and $
              (cr[j-1].winds2ai gt nsig or qconsistent(qstr[j].jets2ai,qstr[j-1].windf2ai,qstr[j].jets2aierr,qstr[j-1].windf2aierr,nsig=nsig) eq 0)) then begin 
              cr[j].jets2ai=100.
              print,'eliminate: '+ntostr(j+1)+' JETs2ai qcon'
              elim=elim+1
           endif 
           if cr[j].jets3ai le nsig and ($
              (cr[j-1].isms3ai gt nsig or qconsistent(qstr[j].jets3ai,qstr[j-1].isms3ai,qstr[j].jets3aierr,qstr[j-1].isms3aierr,nsig=nsig) eq 0) and $
              (cr[j-1].ismf3ai gt nsig or qconsistent(qstr[j].jets3ai,qstr[j-1].ismf3ai,qstr[j].jets3aierr,qstr[j-1].ismf3aierr,nsig=nsig) eq 0) and $
              (cr[j-1].winds3ai gt nsig or qconsistent(qstr[j].jets3ai,qstr[j-1].winds3ai,qstr[j].jets3aierr,qstr[j-1].winds3aierr,nsig=nsig) eq 0) and $
              (cr[j-1].winds3ai gt nsig or qconsistent(qstr[j].jets3ai,qstr[j-1].windf3ai,qstr[j].jets3aierr,qstr[j-1].windf3aierr,nsig=nsig) eq 0)) then begin 
              cr[j].jets3ai=100.
              print,'eliminate: '+ntostr(j+1)+' JETs3ai qcon'
              elim=elim+1
           endif 
           if cr[j].jetsism2ai le nsig and ($
              (cr[j-1].isms2ai gt nsig or qconsistent(qstr[j].jetsism2ai,qstr[j-1].isms2ai,qstr[j].jetsism2aierr,qstr[j-1].isms2aierr,nsig=nsig) eq 0) and $
              (cr[j-1].ismf2ai gt nsig or qconsistent(qstr[j].jetsism2ai,qstr[j-1].ismf2ai,qstr[j].jetsism2aierr,qstr[j-1].ismf2aierr,nsig=nsig) eq 0)) then begin 
              cr[j].jetsism2ai=100.
              print,'eliminate: '+ntostr(j+1)+' JETsism2ai qcon'
              elim=elim+1
           endif 
           if cr[j].jetsism3ai le nsig and ($
              (cr[j-1].isms3ai gt nsig or qconsistent(qstr[j].jetsism3ai,qstr[j-1].isms3ai,qstr[j].jetsism3aierr,qstr[j-1].isms3aierr,nsig=nsig) eq 0) and $
              (cr[j-1].ismf3ai gt nsig or qconsistent(qstr[j].jetsism3ai,qstr[j-1].ismf3ai,qstr[j].jetsism3aierr,qstr[j-1].ismf3aierr,nsig=nsig) eq 0)) then begin 
              cr[j].jetsism3ai=100.
              print,'eliminate: '+ntostr(j+1)+' JETsism3ai qcon'
              elim=elim+1
           endif
           if cr[j].jetswind2ai le nsig and ($
              (cr[j-1].winds2ai gt nsig or qconsistent(qstr[j].jetswind2ai,qstr[j-1].winds2ai,qstr[j].jetswind2aierr,qstr[j-1].winds2aierr,nsig=nsig) eq 0) and $
              (cr[j-1].windf2ai gt nsig or qconsistent(qstr[j].jetswind2ai,qstr[j-1].windf2ai,qstr[j].jetswind2aierr,qstr[j-1].windf2aierr,nsig=nsig) eq 0)) then begin 
              cr[j].jetswind2ai=100.
              print,'eliminate: '+ntostr(j+1)+' JETswind2ai qcon'
              elim=elim+1
           endif 
           if cr[j].jetswind3ai le nsig and ($
              (cr[j-1].winds3ai gt nsig or qconsistent(qstr[j].jetswind3ai,qstr[j-1].winds3ai,qstr[j].jetswind3aierr,qstr[j-1].winds3aierr,nsig=nsig) eq 0) and $
              (cr[j-1].windf3ai gt nsig or qconsistent(qstr[j].jetswind3ai,qstr[j-1].windf3ai,qstr[j].jetswind3aierr,qstr[j-1].windf3aierr,nsig=nsig) eq 0)) then begin 
              cr[j].jetswind3ai=100.
              print,'eliminate: '+ntostr(j+1)+' JETswind3ai qcon'
              elim=elim+1
           endif 
        endif 
        ;;ENERGY INJECTION + NORMAL
        ;;CAN GO DIRECTLY TO JB
        if n gt 1 and n-j gt 1 then begin  ;;is there another seg after j
           ;;slow (with only slow after)
           if cr[j].isms2ai le nsig and $
              (cr[j+1].isms2a gt nsig and cr[j+1].isms2b gt nsig and $
               cr[j+1].jets2ai gt nsig and cr[j+1].jetsism2ai gt nsig and $
               cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetsism2a gt nsig and cr[j+1].jetsism2b gt nsig and $
               cr[j+1].jetsoism2a gt nsig) then begin
              cr[j].isms2ai=100.
              print,'eliminate: '+ntostr(j+1)+' ISMs2ai'
              elim=elim+1
           endif 
           if cr[j].winds2ai le nsig and $
              (cr[j+1].winds2a gt nsig and cr[j+1].winds2b gt nsig and $
               cr[j+1].jets2ai gt nsig and cr[j+1].jetswind2ai gt nsig and $
               cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetswind2a gt nsig and cr[j+1].jetswind2b gt nsig and $
               cr[j+1].jetsowind2a gt nsig) then begin
              cr[j].winds2ai=100.
              print,'eliminate: '+ntostr(j+1)+' WINDs2ai'
              elim=elim+1
           endif 
           if cr[j].isms3ai le nsig and $
              (cr[j+1].isms3a gt nsig and cr[j+1].isms3b gt nsig and $
               cr[j+1].jets3ai gt nsig and cr[j+1].jetsism3ai gt nsig and $
               cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetsism3a gt nsig and cr[j+1].jetsism3b gt nsig and $
               cr[j+1].jetsoism3a gt nsig) then begin
              cr[j].isms3ai=100.
              print,'eliminate: '+ntostr(j+1)+' ISMs3ai'
              elim=elim+1
           endif 
           if cr[j].winds3ai le nsig and $
              (cr[j+1].winds3a gt nsig and cr[j+1].winds3b gt nsig and $
               cr[j+1].jets3ai gt nsig and cr[j+1].jetswind3ai gt nsig and $
               cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetswind3a gt nsig and cr[j+1].jetswind3b gt nsig and $
               cr[j+1].jetsowind3a gt nsig) then begin
              cr[j].winds3ai=100.
              print,'eliminate: '+ntostr(j+1)+' WINDs3ai'
              elim=elim+1
           endif 
           ;;fast (with fast or slow after)
           if cr[j].ismf2ai le nsig and $
              (cr[j+1].isms2a gt nsig and cr[j+1].isms2b gt nsig and $
               cr[j+1].ismf2a gt nsig and cr[j+1].ismf2b gt nsig and $
               cr[j+1].jets2ai gt nsig and cr[j+1].jetsism2ai gt nsig and $
               cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetsism2a gt nsig and cr[j+1].jetsism2b gt nsig and $
               cr[j+1].jetsoism2a gt nsig) then begin
              cr[j].ismf2ai=100.
              print,'eliminate: '+ntostr(j+1)+' ISMf2ai'
              elim=elim+1
           endif 
           if cr[j].windf2ai le nsig and $
              (cr[j+1].winds2a gt nsig and cr[j+1].winds2b gt nsig and $
               cr[j+1].windf2a gt nsig and cr[j+1].windf2b gt nsig and $
               cr[j+1].jets2ai gt nsig and cr[j+1].jetswind2ai gt nsig and $
               cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetswind2a gt nsig and cr[j+1].jetswind2b gt nsig and $
               cr[j+1].jetsowind2a gt nsig) then begin
              cr[j].windf2ai=100.
              print,'eliminate: '+ntostr(j+1)+' WINDf2ai'
              elim=elim+1
           endif 
           if cr[j].ismf3ai le nsig and $
              (cr[j+1].isms3a gt nsig and cr[j+1].isms3b gt nsig and $
               cr[j+1].ismf3a gt nsig and cr[j+1].ismf3b gt nsig and $
               cr[j+1].jets3ai gt nsig and cr[j+1].jetsism3ai gt nsig and $
               cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetsism3a gt nsig and cr[j+1].jetsism3b gt nsig and $
               cr[j+1].jetsoism3a gt nsig) then begin
              cr[j].ismf3ai=100.
              print,'eliminate: '+ntostr(j+1)+' ISMf3ai'
              elim=elim+1
           endif 
           if cr[j].windf3ai le nsig and $
              (cr[j+1].winds3a gt nsig and cr[j+1].winds3b gt nsig and $
               cr[j+1].windf3a gt nsig and cr[j+1].windf3b gt nsig and $
               cr[j+1].jets3ai gt nsig and cr[j+1].jetswind3ai gt nsig and $
               cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetswind3a gt nsig and cr[j+1].jetswind3b gt nsig and $
               cr[j+1].jetsowind3a gt nsig) then begin
              cr[j].windf3ai=100.
              print,'eliminate: '+ntostr(j+1)+' WINDf3ai'
              elim=elim+1
           endif 
           
           ;;;Normal decay must be followed by normal JB
           if cr[j].isms2a le nsig and $
              (cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetsism2a gt nsig and cr[j+1].jetsism2b gt nsig and $
               cr[j+1].jetsoism2a gt nsig and cr[j+1].jetsoism2b gt nsig) then begin
              cr[j].isms2a=100.
              print,'eliminate: '+ntostr(j+1)+' ISMs2a'
              elim=elim+1
           endif
           if cr[j].isms2b le nsig and $
              (cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetsism2a gt nsig and cr[j+1].jetsism2b gt nsig and $
               cr[j+1].jetsoism2a gt nsig and cr[j+1].jetsoism2b gt nsig) then begin
              cr[j].isms2b=100.
              print,'eliminate: '+ntostr(j+1)+' ISMs2b'
              elim=elim+1
           endif 
           if cr[j].isms3a le nsig and $
              (cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetsism3a gt nsig and cr[j+1].jetsism3b gt nsig and $
               cr[j+1].jetsoism3a gt nsig and cr[j+1].jetsoism3b gt nsig) then begin
              cr[j].isms3a=100.
              print,'eliminate: '+ntostr(j+1)+' ISMs3a'
              elim=elim+1
           endif 
           if cr[j].isms3b le nsig and $
              (cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetsism3a gt nsig and cr[j+1].jetsism3b gt nsig and $
               cr[j+1].jetsoism3a gt nsig and cr[j+1].jetsoism3b gt nsig) then begin
              cr[j].isms3b=100.
              print,'eliminate: '+ntostr(j+1)+' ISMs3b'
              elim=elim+1
           endif 
           if cr[j].ismf2a le nsig and $
              (cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetsism2a gt nsig and cr[j+1].jetsism2b gt nsig and $
               cr[j+1].jetsoism2a gt nsig and cr[j+1].jetsoism2b gt nsig) then begin
              cr[j].ismf2a=100.
              print,'eliminate: '+ntostr(j+1)+' ISMf2a'
              elim=elim+1
           endif 
           if cr[j].ismf2b le nsig and $
              (cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetsism2a gt nsig and cr[j+1].jetsism2b gt nsig and $
               cr[j+1].jetsoism2a gt nsig and cr[j+1].jetsoism2b gt nsig) then begin
              cr[j].ismf2b=100.
              print,'eliminate: '+ntostr(j+1)+' ISMf2b'
              elim=elim+1
           endif 
           if cr[j].ismf3a le nsig and $
              (cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetsism3a gt nsig and cr[j+1].jetsism3b gt nsig and $
               cr[j+1].jetsoism3a gt nsig and cr[j+1].jetsoism3b gt nsig) then begin
              cr[j].ismf3a=100.
              print,'eliminate: '+ntostr(j+1)+' ISMf3a'
              elim=elim+1
           endif 
           if cr[j].ismf3b le nsig and $
              (cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetsism3a gt nsig and cr[j+1].jetsism3b gt nsig and $
               cr[j+1].jetsoism3a gt nsig and cr[j+1].jetsoism3b gt nsig) then begin
              cr[j].ismf3b=100.
              print,'eliminate: '+ntostr(j+1)+' ISMf3b'
              elim=elim+1
           endif 
           if cr[j].winds2a le nsig and $
              (cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetswind2a gt nsig and cr[j+1].jetswind2b gt nsig and $
               cr[j+1].jetsowind2a gt nsig and cr[j+1].jetsowind2b gt nsig) then begin
              cr[j].winds2a=100.
              print,'eliminate: '+ntostr(j+1)+' WINDs2a'
              elim=elim+1
           endif 
           if cr[j].winds2b le nsig and $
              (cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetswind2a gt nsig and cr[j+1].jetswind2b gt nsig and $
               cr[j+1].jetsowind2a gt nsig and cr[j+1].jetsowind2b gt nsig) then begin
              cr[j].winds2b=100.
              print,'eliminate: '+ntostr(j+1)+' WINDs2b'
              elim=elim+1
           endif 
           if cr[j].winds3a le nsig and $
              (cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetswind3a gt nsig and cr[j+1].jetswind3b gt nsig and $
               cr[j+1].jetsowind3a gt nsig and cr[j+1].jetsowind3b gt nsig) then begin
              cr[j].winds3a=100.
              print,'eliminate: '+ntostr(j+1)+' WINDs3a'
              elim=elim+1
           endif 
           if cr[j].winds3b le nsig and $
              (cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetswind3a gt nsig and cr[j+1].jetswind3b gt nsig and $
               cr[j+1].jetsowind3a gt nsig and cr[j+1].jetsowind3b gt nsig) then begin
              cr[j].winds3b=100.
              print,'eliminate: '+ntostr(j+1)+' WINDs3b'
              elim=elim+1
           endif 
           if cr[j].windf2a le nsig and $
              (cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetswind2a gt nsig and cr[j+1].jetswind2b gt nsig and $
               cr[j+1].jetsowind2a gt nsig and cr[j+1].jetsowind2b gt nsig) then begin
              cr[j].windf2a=100.
              print,'eliminate: '+ntostr(j+1)+' WINDf2a'
              elim=elim+1
           endif 
           if cr[j].windf2b le nsig and $
              (cr[j+1].jets2a gt nsig and cr[j+1].jets2b gt nsig and $
               cr[j+1].jetswind2a gt nsig and cr[j+1].jetswind2b gt nsig and $
               cr[j+1].jetsowind2a gt nsig and cr[j+1].jetsowind2b gt nsig) then begin
              cr[j].windf2b=100.
              print,'eliminate: '+ntostr(j+1)+' WINDf2b'
              elim=elim+1
           endif 
           if cr[j].windf3a le nsig and $
              (cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetswind3a gt nsig and cr[j+1].jetswind3b gt nsig and $
               cr[j+1].jetsowind3a gt nsig and cr[j+1].jetsowind3b gt nsig) then begin
              cr[j].windf3a=100.
              print,'eliminate: '+ntostr(j+1)+' WINDf3a'
              elim=elim+1
           endif 
           if cr[j].windf3b le nsig and $
              (cr[j+1].jets3a gt nsig and cr[j+1].jets3b gt nsig and $
               cr[j+1].jetswind3a gt nsig and cr[j+1].jetswind3b gt nsig and $
               cr[j+1].jetsowind3a gt nsig and cr[j+1].jetsowind3b gt nsig) then begin
              cr[j].windf3b=100.
              print,'eliminate: '+ntostr(j+1)+' WINDf3b'
              elim=elim+1
           endif 
                      
        endif  
     endif  
  endfor
  
;  print,csm
;  print,cool
;  print,nus
  
  return
end 
  
pro cr_census,cr,nsig=nsig
  
  if n_elements(nsig) eq 0 then nsig=3.
  if nsig eq 2. then signame='_2sig' else signame=''
  if n_params() eq 0 then cr=mrdfits(!mdata+'closure_relations_total'+signame+'.fits',1)
  u=uniq(cr.grb)
  for i=0,n_elements(u)-1 do begin
     w=where(cr.grb eq cr[u[i]].grb,nw)
     if nw eq 4 then print,cr[u[i]].grb
  endfor 
  
  return
end

pro cr_stats,cr,ps=ps,nsig=nsig
  
  if n_elements(nsig) eq 0 then nsig=3.
  if nsig eq 2. then signame='_2sig' else signame=''
  if n_elements(cr) eq 0 then cr=mrdfits(!mdata+'closure_relations_total'+signame+'.fits',1)
  if keyword_set(ps) then begin 
     sym=!tsym
     begplot,name=!mdata+'closure_relations_summary.ps',/color,/land
  endif  else sym=!vsym
  nu=sym.nu
  nu2=nu+'!L2!N'
  nu3=nu+'!L3!N'
  ntags=n_tags(cr)-32-6  ;;;if add tags subtract 1
  tn=tag_names(cr)
  numfit=intarr(ntags)
  
  crname=['HighLat1','HighLat2',$
          'ISMs2a','ISMs2b','ISMs2ai',$
          'ISMs3a','ISMs3b','ISMs3ai',$
          'WINDs2a','WINDs2b','WINDs2ai',$
          'WINDs3a','WINDs3b','WINDs3ai',$
          'ISMf2a','ISMf2b','ISMf2ai',$
          'ISMf3a','ISMf3b','ISMf3ai',$
          'WINDf2a','WINDf2b','WINDf2ai',$
          'WINDf3a','WINDf3b','WINDf3ai',$
          'JETs2a','JETs2b','JETs2ai',$
          'JETs3a','JETs3b','JETs3ai',$
          'JETsISM2a','JETsISM2b','JETsISM2ai',$ ;;uniform jet (non-spreading)
          'JETsISM3a','JETsISM3b','JETsISM3ai',$
          'JETsWIND2a','JETsWIND2b','JETsWIND2ai',$
          'JETsWIND3a','JETsWIND3b','JETsWIND3ai',$
          'JETsoism2a','JETsoism2b',$
          'JETsoism3a','JETsoism3b',$
          'JETsowind2a','JETsowind2b',$
          'JETsowind3a','JETsowind3b'] ;;structured outflow
  
  c=[1,2,$   ;;HighLAT 
     3,4,5,$ ;;ISMs2
     6,7,8,$ ;;ISMs3
     3,4,5,$ ;;WINDs2
     6,7,8,$ ;;WINDs3
     3,4,5,$ ;;ISMf2
     6,7,8,$ ;;ISMf3
     3,4,5,$ ;;WINDf2
     6,7,8,$ ;;WINDf3
     3,4,5,$ ;;JET2
     6,7,8,$ ;;JET3
     3,4,5,$ ;;JETsISM2
     6,7,8,$ ;;JETsISM3
     3,4,5,$ ;;JETsWIND2
     6,7,8,$ ;;JETsWIND3
     3,4,$   ;;DEL ALP SO ISM
     6,7,$
     3,4,$
     6,7] ;;SO WIND
  color=[!p.color,!magenta,!yellow,!green,!cyan,!blue,!purple,!red,!orange,!grey20,!pink]
;  color=color[c]
;  !p.multi=[0,1,5]
  erase
  multiplot,[1,5],/init
  leg=['Single PL','I','II','III','IV']
;  lines=[-2,3,12,21,30,39,47.5,56]+1   ;;;ALL MESSED UP NOW
  lines=[0,3.5,9.5,15.5,21.5,27.5,33.5,45.5,50.5]
  modclass=['','High Lat','ISM slow','Wind slow','ISM fast','Wind fast','Jet spread','Jet no spread','Structured Jet']
  
  for s=0,4 do begin 
     if s eq 4 then xtitle='Closure Relation' else xtitle=''
     com=execute('ws=where(cr.seg'+ntostr(s)+' eq 1,nws)')
     if nws gt 0 then begin 
        for i=6,ntags-1 do begin 
           
           com=execute('w=where(cr[ws].(i) le nsig,nw)')
           numfit[i-6]=nw
;           print,tn[i],nw
        endfor 
     endif 
     multiplot
     if s eq 4 then yrange=[0,20] else yrange=minmax(numfit)
     plot,indgen(ntags)+2,numfit,psym=10,charsize=1,/nodata,xtitle=xtitle,ytitle='N',xrange=[0,ntags-3],yrange=yrange
     legend,leg[s],box=0,/top,/right,font=0,charsize=1,margin=0
     if nws gt 0 then begin 
        for clr=1,8 do begin 
           tmpnumfit=intarr(ntags)
           w=where(c eq clr)
           tmpnumfit[w]=numfit[w]
           oplot,indgen(ntags)+2,tmpnumfit,color=color[clr],psym=10
           if tmpnumfit[0] gt 0 then begin 
              oplot,[0.5,0.5]+1,[0,tmpnumfit[0]],color=color[clr]
              oplot,[0.5,1]+1,[tmpnumfit[0],tmpnumfit[0]],color=color[clr]
           endif 
        endfor 
     endif 
     oplot,indgen(ntags)+2,intarr(ntags),psym=10,color=!p.color
     yheight=round(max(numfit)/10.+0.1)*10.*0.85
;     print,yheight,max(numfit)
     if yheight gt max(numfit) then yheight=max(numfit)-2
     if yheight eq 0 then yheight=0.8
     
     for l=1,n_elements(lines)-1 do begin 
        if l lt n_elements(lines)-1 then oplot,[lines[l],lines[l]],[0,200],line=2
        if  ((s eq 1 or s eq 2) and (l ge 6 and l le 8)) or ((s eq 2 or s eq 3 or s eq 4) and l eq 1) then blah=1 else xyouts,lines[l-1]+1,yheight,modclass[l],charsize=1
     endfor 
     
     if s eq 0 then begin
        legend,['',nu2+' p>2',nu2+' 1<p<2',nu2+' p>2 + EI',nu3+' p>2',nu3+' 1<p<2',nu3+' p>2 + EI'],textcolor=[color[0],color[3],color[4],color[5],color[6],color[7],color[8]],box=0,/top,/right,charsize=1.
     endif 
  endfor 
  multiplot,/reset
;  !p.multi=0
  if keyword_set(ps) then endplot
  
  return
end 

pro cat_crstructs,cr,fname=fname,outname=outname,nsig=nsig
  
  cd,!mdata
  if n_elements(nsig) eq 0 then nsig=3.
  if nsig eq 2. then signame='_2sig' else signame=''
  if n_elements(fname) eq 0 then fname='GRB*/closure_relations'+signame+'.fits'
  crfiles=file_search(fname)
  nw=n_elements(crfiles)
  cr0=mrdfits(crfiles[0],1)
  for i=1,nw-1 do begin 
     cr1=mrdfits(crfiles[i],1)
     concat_structs,cr0,cr1,cr
     colprint,cr1.grb
     cr0=cr
  endfor 
  if n_elements(outname) eq 0 then outname='closure_relations_total'+signame+'.fits'
  
  mwrfits,cr,outname,/create
  
  return
end 

pro make_qstruct,n,qstr
  qstr=create_struct('ISMs2ai',0.,'ISMs2aierr',fltarr(2),$
                      'ISMs3ai',0.,'ISMs3aierr',fltarr(2),$
                      'ISMf2ai',0.,'ISMf2aierr',fltarr(2),$
                      'ISMf3ai',0.,'ISMf3aierr',fltarr(2),$
                      'WINDs2ai',0.,'WINDs2aierr',fltarr(2),$
                      'WINDs3ai',0.,'WINDs3aierr',fltarr(2),$
                      'WINDf2ai',0.,'WINDf2aierr',fltarr(2),$
                      'WINDf3ai',0.,'WINDf3aierr',fltarr(2),$
                      'JETs2ai',0.,'JETs2aierr',fltarr(2),$
                      'JETs3ai',0.,'JETs3aierr',fltarr(2),$
                      'JETsISM2ai',0.,'JETsISM2aierr',fltarr(2),$
                      'JETsISM3ai',0.,'JETsISM3aierr',fltarr(2),$
                      'JETsWIND2ai',0.,'JETsWIND2aierr',fltarr(2),$
                      'JETsWIND3ai',0.,'JETsWIND3aierr',fltarr(2))
  return
end 
                          
pro make_crstruct,n,crstr
  crstr=create_struct('GRB','',$
                      'Seg0',0,'Seg1',0,'Seg2',0,'Seg3',0,'Seg4',0,$
                      'HighLat1',100.,'HighLat2',100.,$
                      'ISMs2a',100.,'ISMs2b',100.,'ISMs2ai',100.,$
                      'ISMs3a',100.,'ISMs3b',100.,'ISMs3ai',100.,$
                      'WINDs2a',100.,'WINDs2b',100.,'WINDs2ai',100.,$
                      'WINDs3a',100.,'WINDs3b',100.,'WINDs3ai',100.,$
                      'ISMf2a',100.,'ISMf2b',100.,'ISMf2ai',100.,$
                      'ISMf3a',100.,'ISMf3b',100.,'ISMf3ai',100.,$
                      'WINDf2a',100.,'WINDf2b',100.,'WINDf2ai',100.,$
                      'WINDf3a',100.,'WINDf3b',100.,'WINDf3ai',100.,$
                      'JETs2a',100.,'JETs2b',100.,'JETs2ai',100.,$
                      'JETs3a',100.,'JETs3b',100.,'JETs3ai',100.,$
                      'JETsISM2a',100.,'JETsISM2b',100.,'JETsISM2ai',100.,$  ;;uniform spreading jet
                      'JETsISM3a',100.,'JETsISM3b',100.,'JETsISM3ai',100.,$
                      'JETsWIND2a',100.,'JETsWIND2b',100.,'JETsWIND2ai',100.,$
                      'JETsWIND3a',100.,'JETsWIND3b',100.,'JETsWIND3ai',100.,$
                      'JETsoism2a',100.,'JETsoism2b',100.,$  ;;structured outflow
                      'JETsoism3a',100.,'JETsoism3b',100.,$
                      'JETsowind2a',100.,'JETsowind2b',100.,$ 
                      'JETsowind3a',100.,'JETsowind3b',100.,$ ;;structured outflow
                      'CSM',0,$
                      'COOL',0,$
                      'NU',0,$
                      'JETBREAK',0,$
                      'ALPHA',0.,'ALPHAERR',fltarr(2),$
                      'BETA',0.,'BETAERR',fltarr(2),$
                      'TBREAK',0.,'TBREAKERR',fltarr(2),$
                      'TSTART',0.,'TSTOP',0.,'TLASTDET',0.,'TLASTPOS',0.,$
                      'CTR_TSTOP',0.,'CTR_TBREAK',0.,'CTR_TLASTDET',0.,'CTR_TLASTPOS',0.,'CTR_T1DAY',0.,$
                      'Z',0.,'THETA',0.,'THETA_TSTART',0.,'THETA_STOP',0.,'THETA_LASTDET',0.,'THETA_LASTPOS',0.,$
                      'EISO',0.,'EISOERR',fltarr(2),'WHO_EISO',' ','COMPLETE',0,'CLASS',0,$
                      'FLUX',0d,'RATE',0d)
                      
  crstr=replicate(crstr,n)
  return
end 
pro which_alpha,alphas,alphaserr,j,posa,delalp,delalperr
  
  breaks=n_elements(alphas)-1
  
  case breaks of
     0: begin 
        posa=[[1,2,3,4]]
        delalp=0.
        delalperr=[0.,0.]
     end
     1: begin
        if alphas[0] gt alphas[1] then posa=[[1],[2]] else $
;           posa=[[2],[3]]           
           posa=[[2,3],[3,4]]
        delalp=alphas[1]-alphas[0]
        delalperr=[sqrt(total(alphaserr[0,0:1]^2)),sqrt(total(alphaserr[1,0:1]^2))]
     end
     2: begin
        if alphas[0] gt alphas[1] then posa=[[1],[2],[3]] else $
           posa=[[2],[3],[4]]
        delalp=[alphas[1]-alphas[0],alphas[2]-alphas[1]]
        delalperr=[[sqrt(total(alphaserr[0,0:1]^2)),sqrt(total(alphaserr[1,0:1]^2))],[sqrt(total(alphaserr[0,1:2]^2)),sqrt(total(alphaserr[1,1:2]^2))]]
     end
     3: begin 
        posa=[[1],[2],[3],[4]]
        delalp=[alphas[1]-alphas[0],alphas[2]-alphas[1],alphas[3]-alphas[2]]
        delalperr=[[sqrt(total(alphaserr[0,0:1]^2)),sqrt(total(alphaserr[1,0:1]^2))],[sqrt(total(alphaserr[0,1:2]^2)),sqrt(total(alphaserr[1,1:2]^2))],[sqrt(total(alphaserr[0,2:3]^2)),sqrt(total(alphaserr[1,2:3]^2))]]
     end
  endcase 
  
  return
end

pro which_closure_relation,a,alow,aup,g,glow,gup,cr,posa,delalp,delalperr,gg,ps=ps,injection=injection,answer=answer,noplot=noplot,chisq=chisq,qstr=qstr,nsig=nsig,xtitle=xtitle,charsize=charsize,segment=segment,nocolor=nocolor
  
  if n_elements(nsig) eq 0 then nsig=3.
  b=g-1.
  blow=glow
  bup=gup
;  blow=glow-1
;  bup=gup-1
  
  cr=['HighLat1','HighLat2',$
      'ISMs2a','ISMs2b','ISMs2ai',$
      'ISMs3a','ISMs3b','ISMs3ai',$
      'WINDs2a','WINDs2b','WINDs2ai',$
      'WINDs3a','WINDs3b','WINDs3ai',$
      'ISMf2a','ISMf2b','ISMf2ai',$
      'ISMf3a','ISMf3b','ISMf3ai',$
      'WINDf2a','WINDf2b','WINDf2ai',$
      'WINDf3a','WINDf3b','WINDf3ai',$
      'JETs2a','JETs2b','JETs2ai',$  ;;uniform jet with lateral expansion ISM or Wind
      'JETs3a','JETs3b','JETs3ai',$
      'JETsISM2a','JETsISM2b','JETsISM2ai',$ ;;uniform jet (non-spreading)
      'JETsISM3a','JETsISM3b','JETsISM3ai',$
      'JETsWIND2a','JETsWIND2b','JETsWIND2ai',$
      'JETsWIND3a','JETsWIND3b','JETsWIND3ai',$
      'JETsoism2a','JETsoism2b',$  ;;structured outflow
      'JETsoism3a','JETsoism3b',$
      'JETsowind2a','JETsowind2b',$ 
      'JETsowind3a','JETsowind3b'] ;;structured outflow  
  
  n=n_elements(cr)
  chisq=dblarr(n)
  chisq[*]=100.
  if n_elements(answer) gt 0 then know=1 else begin 
     know=0
     answer=intarr(n)
     answer[*]=1
  endelse 
  
  b2=2.*b
  b2p1=2.*b+1
  
  p=[0,0,$            ;;HighLAT 
     b2p1,b2p1,b2p1,$ ;;ISMs2
     b2,b2,b2,$       ;;ISMs3
     b2p1,b2p1,b2p1,$ ;;WINDs2
     b2,b2,b2,$       ;;WINDs3
     0,0,0,$          ;;ISMf2
     b2,b2,b2,$       ;;ISMf3
     0,0,0,$          ;;WINDf2
     b2,b2,b2,$       ;;WINDf3
     b2p1,b2p1,b2p1,$ ;;JET2
     b2,b2,b2,$       ;;JET3
     b2p1,b2p1,b2p1,$         ;;JETsISM2
     b2,b2,b2,$             ;;JETsISM3
     b2p1,b2p1,b2p1,$         ;;JETsWIND2
     b2,b2,b2,$             ;;JETsWIND3
     b2p1,b2p1,$         ;;DEL ALPHA S0 ISM2
     b2,b2,$              ;;DEL ALPHA S0 ISM3
     b2p1,b2p1,$          ;;DEL ALPHA S0 WIND2
     b2,b2]               ;;DEL ALPHA S0 WIND3
  
;  berr=mean([blow,bup]);2.*(abs(blow)+abs(bup))/2.
  perr=dblarr(2,n)
  perr[0,*]=2.*blow
  perr[1,*]=2.*bup
;  perr[*]=2.*berr
  w=where(p eq 0)
 ; perr[*,w]=100.
  pp='(p='+sigfig(p,2)+'!S!L-'+numdec(perr[0,*],2)+'!R!U+'+numdec(perr[1,*],2)+'!N'
  pp[w]=''
  
  c=[1,2,$   ;;HighLAT 
     3,4,5,$    ;;ISMs2
     6,7,8,$   ;;ISMs3
     3,4,5,$    ;;WINDs2
     6,7,8,$   ;;WINDs3
     3,4,5,$   ;;ISMf2
     6,7,8,$  ;;ISMf3
     3,4,5,$ ;;WINDf2
     6,7,8,$ ;;WINDf3
     3,4,5,$    ;;JET2
     6,7,8,$   ;;JET3
     3,4,5,$ ;;JETsISM2
     6,7,8,$ ;;JETsISM3
     3,4,5,$ ;;JETsWIND2
     6,7,8,$ ;;JETsWIND3
     3,4,$ ;;DEL ALP SO ISM
     6,7,$
     3,4,$
     6,7] ;;SO WIND
  
  if not keyword_set(nocolor) then $
     color=[!p.color,!magenta,!yellow,!green,!cyan,!blue,!purple,!red,!orange,!grey20,!pink] else color=replicate(!p.color,11)
  color=color[c]
  
  bb=[0,0,$   ;;HighLAT 
      1,2,1,$ ;;ISMs2
      1,2,1,$ ;;ISMs3
      1,2,1,$ ;;WINDs2
      1,2,1,$ ;;WINDs3
      1,2,1,$ ;;ISMf2
      1,2,1,$ ;;ISMf3
      1,2,1,$ ;;WINDf2
      1,2,1,$ ;;WINDf3
      1,2,1,$ ;;JET2
      1,2,1,$ ;;JET3
      1,2,1,$     ;;JETsISM2
      1,2,1,$     ;;JETsISM3
      1,2,1,$     ;;JETsWIND2
      1,2,1,$     ;;JETsWIND3
      1,2,$     ;;DEL ALPHA S0 ISM
      1,2,$
      1,2,$
      1,2]   ;;DEL ALPHA S0 WIND
  
  bb[w]=0
;;exclude nu<nu_a (for optical not xray)
  
  
  g=[1,0,$   ;;HighLAT 
     1,1,1,$ ;;ISMs2
     1,1,1,$ ;;ISMs3
     1,1,1,$ ;;WINDs2
     1,1,1,$ ;;WINDs3
     1,1,1,$ ;;ISMf2
     1,1,1,$ ;;ISMf3
     1,1,1,$ ;;WINDf2
     1,1,1,$ ;;WINDf3
     1,1,1,$ ;;JET2                ;;TURNED ON JET+EI
     1,1,1,$ ;;JET3                ;;TURNED ON JET+EI
     1,1,1,$     ;;JETsISM2
     1,1,1,$     ;;JETsISM3
     1,1,1,$     ;;JETsWIND2
     1,1,1,$     ;;JETsWIND3
     1,0,$     ;;DEL ALPHA S0 ISM       ;;NOT TRUSTING DERIV OF SO JET p<2
     1,0,$
     1,0,$
     1,0]   ;;DEL ALPHA S0 WIND
  
  
  ;; exclusions based on which part of canonical LC
  p1=where(posa eq 1,n1)
;  if n1 eq 0 then g[0:1]=0  ;; High Lat only possible if LC 1
  p2=where(posa eq 2,n2)
  if n2 eq 0 then g[[4,7,10,13,16,19,22,25]]=0  ;;N+EI only in 2
  p3=where(posa eq 3,n3)
  if n3 eq 0 then g[[28,31,34,37,40,43]]=0  ;;JET + EI only in 3
  p4=where(posa eq 4,n4)
  
;  p34=where(posa eq 3 or posa eq 4,np34) 
;  if n1 eq 0 and n2 eq 0 then g[0:1]=0
  if n3 eq 0 and n4 eq 0 then g[26:*]=0  ;;JET only possible in 3 or 4 or 0 
  ;;limits JB in 3 to JB+EI 
;  if n4 eq 0 then g[[26,27,29,30,32,33,35,36,38,39,41,42,44,45,46,47,48,49,50,51]]=0
;  if n_elements(posa) eq 4 then g[[28,31+indgen(21)]]=0  ;;no delalp possible in 0
;  if n_elements(posa) eq 4 then g[44:*]=0  ;;no delalp possible in 0
;  p34b=where(posa ne 3 and posa eq 4,np34b) ;;where definitely a 4 cannot have N
;  if np34b gt 0 then g[2:25]=0
  if n3 eq 0 and n4 gt 0 then g[2:25]=0 ;;norm not possible is 3 or 4 are not
  if n2 gt 0 and n1 eq 0 and n3 eq 0 and n4 eq 0 then $
     g[[0,1]]=0 ;;must keep other options for 2 incase 1 is incorrectly identified (flare confusion)
;     g[[0,1,2,3,5,6,8,9,11,12,14,15,17,18,20,21,23,24]]=0 ;;if 2 only option then 2 can only be N+EI

;  if n_elements(posa) eq 4 or delalp[0] eq 0. then g[n_elements(g)-14:*]=0
  ;;;change this 14 to something else if add more models
  
  good=where(g eq 1)
  
  n=n_elements(good)
;  n2=10

  ;;distinguish between energy injection and not
;  inj=indgen(10)*2+1
;  noinj=indgen
;  if keyword_set(injection) then good=good[inj] else $
;     good=good[]

  cr=cr[good]
  color=color[good]
  p=p[good]  
  pp=pp[good]
  bb=bb[good]
  if know then answer=answer[good]
  
  n=n_elements(cr)
  crval=dblarr(n)
  creq=strarr(n)
  errvalup=dblarr(n)
  errvallow=errvalup
  dcrdb=dblarr(n)
  if keyword_set(ps) then sym=!tsym else sym=!vsym
  alpha=sym.alpha
  beta=sym.beta
  dap=sym.delta_cap+sym.alpha
  
;     !p.multi=[0,5,5]
;     !p.multi=[0,2,n/2]
  
  q=dblarr(n)
  qerr=dblarr(2,n)
  make_qstruct,1,qstr

  k=dblarr(n)
  gg=-1
;  chisq=dblarr(n)
  
  if n_elements(xtitle) eq 0 then xtitle='closure relation'
  if not keyword_set(noplot) then plot,[-4,2],[0,n+3],/nodata,xtitle=xtitle,/xsty,/ysty,charsize=charsize,ytickname=replicate(' ',10)
  
  for i=0,n-1 do begin 
     qt=100.
     kkt=''
     ktgood=1
     case cr[i] of 
        'HighLat1': begin 
           crval[i]=a-2.-b
           creq[i]=alpha+'=2+'+beta
           dcrdb[i]=-1.
        end 
        'HighLat2': begin ;;where did this come from????  Zhang et al (2006)
           crval[i]=a-1.-3.*b/2.
           creq[i]=alpha+'=1+3'+beta+'/2'
           dcrdb[i]=-3./2.
        end 
;        'ISMs1a': begin
;           crval[i]=a-3.*b/2.
;           creq[i]=alpha+'=3'+beta+'/2'
;           dcrdb[i]=-3./2.
;        end 
;        'ISMs1ai': begin
;           q[i]=(a+1-b)/(1+b/2.)
;           qerr[*,i]=[sqrt((1./(1.+b/2.))^2.*alow^2+(-4./(2.+b))^2.*blow^2),sqrt((1./(1.+b/2.))^2.*aup^2+(-4./(2.+b))^2.*bup^2)]
;           crval[i]=a-(q[i]-1.)-(2+q[i])*b/2.
;           creq[i]=alpha+'=(q-1)+(2+q)'+beta+'/2'
;           dcrdb[i]=-(2.+q[i])/2.
;        end 
        'ISMs2a': begin
           crval[i]=a-3.*b/2.
           creq[i]=alpha+'=3'+beta+'/2'
           dcrdb[i]=-3./2.
        end 
        'ISMs2b': begin
           crval[i]=a-3.*(2*b+3)/16.
           creq[i]=alpha+'=3(2'+beta+'+3)/16'
           dcrdb[i]=3./8.
        end 
        'ISMs2ai': begin
;           ktgood=0
           q[i]=(a+1.-b)/(1.+b/2.)
           dqda=1./(1.+b/2.)
           dqdb=(-2.*a-6.)/(2.+b)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-(q[i]-1.)-(2+q[i])*b/2.
           creq[i]=alpha+'=(q-1)+(2+q)'+beta+'/2'
           dcrdb[i]=-(2.+q[i])/2.
        end 
        'ISMs3a': begin
           crval[i]=a-(3.*b-1.)/2.
           creq[i]=alpha+'=(3'+beta+'-1)/2'
           dcrdb[i]=-3./2.
        end 
        'ISMs3b': begin
           crval[i]=a-(3.*b+5)/8.
           creq[i]=alpha+'=(3'+beta+'+5)/8'
           dcrdb[i]=3./8.
        end 
        'ISMs3ai': begin
;           ktgood=0
           q[i]=(a+1.-b)/((1.+b)/2.)
           dqda=2./(1.+b)
           dqdb=(-2.*a-4.)/(1.+b)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-(q[i]-2.)/2.-(2+q[i])*b/2.
           creq[i]=alpha+'=(q-2)/2+(2+q)'+beta+'/2'
           dcrdb[i]=-(2.+q[i])/2.
        end 
;        'ISMf1a': begin
;           crval[i]=a-b/2.
;           creq[i]=alpha+'='+beta+'/2'
;           dcrdb[i]=-1./2.
;        end 
;        'ISMf1b': begin
;           crval[i]=a-b/2.
;           creq[i]=alpha+'='+beta+'/2'
;           dcrdb[i]=-1./2.
;        end 
;        'ISMf1ai': begin
;           q[i]=(a+1.-b)/(1-b/2.)
;           crval[i]=a-(q[i]-1.)-(2-q[i])*b/2.
;           creq[i]=alpha+'=(q-1)+(2-q)'+beta+'/2'
;           dcrdb[i]=-(2.-q[i])/2.
;        end 
        'ISMf2a': begin
           crval[i]=a-b/2.
           creq[i]=alpha+'='+beta+'/2'
           dcrdb[i]=-1./2
        end 
        'ISMf2b': begin
           crval[i]=a-b/2.
           creq[i]=alpha+'='+beta+'/2'
           dcrdb[i]=-1./2
        end 
        'ISMf2ai': begin
;           ktgood=0
           q[i]=(a+1.-b)/(1.-b/2.)           
           dqda=2./(2.-b)
           dqdb=(2.*a-2.)/(2.-b)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-(q[i]-1.)-(2-q[i])*b/2.
           creq[i]=alpha+'=(q-1)+(2-q)'+beta+'/2'
           dcrdb[i]=-(2.-q[i])/2.
        end         
        'ISMf3a': begin
           crval[i]=a-(3.*b-1)/2.
           creq[i]=alpha+'=(3'+beta+'-1)/2'              
           dcrdb[i]=-3./2.
        end 
        'ISMf3b': begin
           crval[i]=a-(3.*b+5)/8.
           creq[i]=alpha+'=(3'+beta+'+5)/8'
           dcrdb[i]=3./8.
        end 
        'ISMf3ai': begin
;           ktgood=0
           q[i]=(a+1.-b)/((1.+b)/2.)
           dqda=2./(1.+b)
           dqdb=(-2.*a-4.)/(1.+b)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-(q[i]-2.)/2.-(2+q[i])*b/2.
           creq[i]=alpha+'=(q-2)/2+(2+q)'+beta+'/2'
           dcrdb[i]=-(2.+q[i])/2.
        end 
;        'WINDs1a': begin
;           crval[i]=a-(3.*b+1.)/2.
;           creq[i]=alpha+'=(3'+beta+'+1)/2'
;           dcrdb[i]=-3./2.
;        end
;        'WINDs1b': begin
;           crval[i]=a-(3.*b+1.)/2.
;           creq[i]=alpha+'=(3'+beta+'+1)/2'
;           dcrdb[i]=-3./2.
;        end
;        'WINDs1ai': begin
;           q[i]=(a-b)/((1+b)/2.)
;           crval[i]=a-q[i]/2.-(2+q[i])*b/2.
;           creq[i]=alpha+'=q/2+(2+q)'+beta+'/2'
;           dcrdb[i]=-(2.+q[i])/2.
;        end 
        'WINDs2a': begin
           crval[i]=a-(3.*b+1.)/2.
           creq[i]=alpha+'=(3'+beta+'+1)/2'
           dcrdb[i]=-3./2.
        end
        'WINDs2b': begin
           crval[i]=a-(2.*b+9.)/8.
           creq[i]=alpha+'=(2'+beta+'+9)/8'
           dcrdb[i]=-1./4.
        end        
        'WINDs2ai': begin
;           ktgood=0
           q[i]=(a-b)/((1.+b)/2.)
           dqda=2./(1.+b)
           dqdb=(-2.*a-2.)/(1.+b)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-q[i]/2.-(2+q[i])*b/2.
           creq[i]=alpha+'=q/2+(2+q)'+beta+'/2'
           dcrdb[i]=-(2.+q[i])/2.
        end
        'WINDs3a': begin
           crval[i]=a-(3.*b-1.)/2.
           creq[i]=alpha+'=(3'+beta+'-1)/2'
           dcrdb[i]=-3./2.
        end
        'WINDs3b': begin
           crval[i]=a-(b+3.)/4.
           creq[i]=alpha+'=('+beta+'+3)/4'
           dcrdb[i]=1./4.
        end
        'WINDs3ai': begin
;           ktgood=0
           q[i]=(a+1.-b)/((1.+b)/2.)
           dqda=2./(1.+b)
           dqdb=(-2.*a-4.)/(1.+b)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-(q[i]-2.)/2.-(2+q[i])*b/2.
           creq[i]=alpha+'=(q-2)/2+(2+q)'+beta+'/2'
           dcrdb[i]=-(2.+q[i])/2.
        end
;        'WINDf1a': begin
;           crval[i]=a-(1.-b)/2.
;           creq[i]=alpha+'=(1-'+beta+')/2'
;           dcrdb[i]=1./2.
;        end
;        'WINDf1b': begin
;           crval[i]=a-(1.-b)/2.
;           creq[i]=alpha+'=(1-'+beta+')/2'
;           dcrdb[i]=1./2.
;        end        
;        'WINDf1ai': begin
;           q[i]=(a+b)/((1+b)/2.)
;           crval[i]=a-q[i]/2.+(2-q[i])*b/2.
;           creq[i]=alpha+'=q/2-(2-q)'+beta+'/2'
;           dcrdb[i]=(2.-q[i])/2.
;        end 
        'WINDf2a': begin
           crval[i]=a-(1.-b)/2.
           creq[i]=alpha+'=(1-'+beta+')/2'
           dcrdb[i]=1./2.
        end
        'WINDf2b': begin
           crval[i]=a-(1.-b)/2.
           creq[i]=alpha+'=(1-'+beta+')/2'
           dcrdb[i]=1./2.
        end        
        'WINDf2ai': begin
;           ktgood=0
           q[i]=(a+b)/((1.+b)/2.)
           dqda=2./(1.+b)
           dqdb=(-2.*a+2.)/(1.+b)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-q[i]/2.+(2-q[i])*b/2.
           creq[i]=alpha+'=q/2-(2-q)'+beta+'/2'
           dcrdb[i]=(2.-q[i])/2.
        end 
        'WINDf3a': begin
           crval[i]=a-(3.*b-1.)/2.
           creq[i]=alpha+'=(3'+beta+'-1)/2'
           dcrdb[i]=-3./2.
        end
        'WINDf3b': begin
           crval[i]=a-(b+3.)/4.
           creq[i]=alpha+'=('+beta+'+3)/4'
           dcrdb[i]=1./4.
        end
        'WINDf3ai': begin
;           ktgood=0
           q[i]=(a+1.-b)/((1.+b)/2.)
           dqda=2./(1.+b)
           dqdb=(-2.*a-4.)/(1.+b)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-(q[i]-2.)/2.-(2+q[i])*b/2.
           creq[i]=alpha+'=(q-2)/2+(2+q)'+beta+'/2'
           dcrdb[i]=(2.+q[i])/2.           
        end
        'JETs2a': begin
           crval[i]=a-(2.*b+1.)
           creq[i]=alpha+'=2'+beta+'+1'
           dcrdb[i]=-2.
        end
        'JETs2b': begin
           crval[i]=a-(2.*b+7.)/4.
           creq[i]=alpha+'=(2'+beta+'+7)/4'
           dcrdb[i]=-2./4.
        end
        'JETs2ai': begin
;           ktgood=0
           q[i]=(3.*a-4.*b+1)/(2.*b+4)
           dqda=3./(2.*b+4.)
           dqdb=(-6.*a-18.)/(2.*b+4.)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-(2.*b+1-2./3.*(1-q[i])*(b+2.))
           creq[i]=alpha+'=2'+beta+'+1-2/3(1-q)('+beta+'+2)'
           dcrdb[i]=(4.+2.*q[i])/3.
;           if delalp eq 0. then ktgood=0
;           q[i]=1.-3.*delalp/(2.*b+4.)
;           qerr[*,i]=[sqrt((3./(2.*b+4.))^2.*delalperr[0]^2+(-6.*delalp/(4.+2.*b)^2)^2.*blow^2),sqrt((3./(4.+2.*b))^2.*delalperr[1]^2+(-6./(4.+2.*b)^2)^2.*bup^2)]
;           crval[i]=delalp-2./3.*(1.-q[i])*(b+2.)
;           creq[i]=dap+'=2/3(1-q)('+beta+'+2)'
;           dcrdb[i]=2./3.*(1.-q[i])
        end 
        'JETs3a': begin
           crval[i]=a-2.*b
           creq[i]=alpha+'=2'+beta+''
           dcrdb[i]=-2.
        end
        'JETs3b': begin
           crval[i]=a-(b+3.)/2.
           creq[i]=alpha+'=('+beta+'+3)/2'
           dcrdb[i]=-1./2.
        end 
        'JETs3ai': begin
;           ktgood=0
           q[i]=(3.*a-4.*b+2.)/(2.*b+2.)
           dqda=3./(2.*b+2.)
           dqdb=(-6.*a-12.)/(2.*b+2.)^2
           qerr[*,i]=[sqrt(dqda^2.*alow^2.+dqdb^2*blow^2),sqrt(dqda^2.*aup^2.+dqdb^2*bup^2)]
           crval[i]=a-(2*b-2./3.*(1-q[i])*(b+1.))
           creq[i]=alpha+'=2'+beta+'-2/3(1-q)('+beta+'+1)'
           dcrdb[i]=-(4.+2.*q[i])/3.
;           if delalp eq 0. then ktgood=0
;           q[i]=1.-3.*delalp/(2.*b+2.)
;           qerr[*,i]=[sqrt((3./(2.*b+2.))^2.*delalperr[0]^2+(-6*delalp/(2.+2.*b)^2)^2.*blow^2),sqrt((3./(2.+2.*b))^2.*delalperr[1]^2+(-6./(2.+2.*b)^2)^2.*bup^2)]
;           crval[i]=delalp-2./3.*(1.-q[i])*(b+1.)
;           creq[i]=dap+'=2/3(1-q)('+beta+'+1)'
;           dcrdb[i]=2./3.*(1.-q[i])
        end
        ;;;;DELTA ALPHA CLOSURE RELATIONS
        ;;NOT KOSHER TO USE DELALP TO GET ALP
        'JETsoism2a':begin  ;;structured jet
;           k[i]=(8.*a-12.*b)/(3.+a)
           k[i]=delalp*8./(a+3.)
           kt=8./(2.*b+5.)
           kkt='<'+sigfig(kt,3)
           if k[i] gt kt or delalp eq 0. then ktgood=0 else ktgood=1
;           crval[i]=delalp-3.*k[i]/2.*(b+2.)/(8.-k[i])
;           creq[i]=dap+'=3k('+beta+'+2)/2(8-k)'
;           dcrdb[i]=3.*k[i]/(2.*(8.-k[i]))
           crval[i]=a-(3.*k[i]+12.*b)/(8-k[i])
           creq[i]=alpha+'=(3k+12'+beta+')/(8-k)'
           dcrdb[i]=12./(8.-k[i])
;           creq[i]=alpha+'=(12'+beta+'+3k)/(8-k)'
;           dcrdb[i]=12./(8.-k[i])
        end
        'JETsoism2b': begin ;;DON'T BELIEVE
           k[i]=delalp*8./(a+3.)
           kt=8./(2.*b+5.)
           kkt='<'+sigfig(kt,3)
           if k[i] gt kt or delalp eq 0. then ktgood=0 else ktgood=1
           crval[i]=delalp-3.*k[i]/16.*(2.*b+5.)/(8.-k[i])
           creq[i]=dap+'=3k(2'+beta+'+5)/16(8-k)'
           dcrdb[i]=6.*k[i]/(16.*(8.-k[i]))
        end
        'JETsoism3a':begin
;           k[i]=(8.*a-12.*b+4.)/(2.+a)
           k[i]=delalp*8./(a+2.)
           kt=8./(2.*b+3.)
           kkt='<'+sigfig(kt,3)
           if k[i] gt kt or delalp eq 0. then ktgood=0 else ktgood=1
           crval[i]=delalp-3.*k[i]/2.*(b+1.)/(8-k[i])
           creq[i]=dap+'=3k('+beta+'+1)/2(8-k)'
           dcrdb[i]=3.*k[i]/(2.*(8-k[i]))           
;           crval[i]=a-(12.*b-4.+2.*k[i])/(8.-k[i])
;           creq[i]=alpha+'=(12'+beta+'-4+2k)/(8-k)'
;           dcrdb[i]=12./(8.-k[i])
           crval[i]=a-(12.*b+2.*k[i]-4.)/(8.-k[i])
           creq[i]=alpha+'=(12'+beta+'+2k-4)/(8-k)'
           dcrdb[i]=12./(8-k[i])
        end 
        'JETsoism3b':begin ;;DON'T BELIEVE
           k[i]=delalp*8./(a+2.)
           kt=8./(2.*b+3.)
           kkt='<'+sigfig(kt,3)
           if k[i] gt kt or delalp eq 0. then ktgood=0 else ktgood=1
           crval[i]=delalp-3.*k[i]/8.*(b+7.)/(8-k[i])
           creq[i]=dap+'=3k('+beta+'+7)/8(8-k)'
           dcrdb[i]=3.*k[i]/(8.*(8-k[i]))           
        end 
        'JETsowind2a': begin
;           k[i]=(4.*a-6.*b-2.)/(a-b)
           k[i]=delalp*12./(2.*delalp+a+1.)
           kt=8./(2.*b+4.)
           kkt='<'+sigfig(kt,3)
           if k[i] gt kt or delalp eq 0. then ktgood=0 else ktgood=1
;           crval[i]=delalp-k[i]/2.*(b+1.)/(4.-k[i])
;           creq[i]=dap+'=k('+beta+'+1)/2(4-k)'
;           dcrdb[i]=k[i]/(2.*(4-k[i]))
;           crval[i]=a-(6.*b+2.-k[i]*b)/(4.-k[i])
;           creq[i]=alpha+'=(6'+beta+'+2-k'+beta+')/(4-k)'
;           dcrdb[i]=(6.-k[i])/(4.-k[i])
           crval[i]=a-(6.*b+k[i]*b+2.)/(4.-k[i])
           creq[i]=alpha+'=(6'+beta+'+k'+beta+'+2)/(4-k)'
           dcrdb[i]=(6.+k[i])/(4.-k[i])
        end 
        'JETsowind2b': begin;;DON'T BELIEVE
           k[i]=delalp*12./(2.*delalp+a+1.)
           kt=8./(2.*b+4.)
           kkt='<'+sigfig(kt,3)
           if k[i] gt kt or delalp eq 0. then ktgood=0 else ktgood=1
           crval[i]=delalp-k[i]/24.*(2.*b+17.)/(4.-k[i])
           creq[i]=dap+'=k(2'+beta+'+17)/24(4-k)'
           dcrdb[i]=2.*k[i]/(24.*(4-k[i]))
        end 
        'JETsowind3a': begin
;           k[i]=(4.*a-6.*b+2.)/(a-b+1.)
           k[i]=delalp*12./(2.*delalp+a+2.)
           kt=8./(2.*b+4.)
           kkt='<'+sigfig(kt,3)
           if k[i] gt kt or delalp eq 0. then ktgood=0 else ktgood=1
;           crval[i]=delalp-k[i]/2.*(b+1.)/(4.-k[i])
;           creq[i]=dap+'=k('+beta+'+1)/2(4-k)'
;           dcrdb[i]=k[i]/(2.*(4-k[i]))
;           crval[i]=a-(6.*b-2.-k[i]*b+k[i])/(4.-k[i])
;           creq[i]=alpha+'=(6'+beta+'-2-k'+beta+'+k)/(4-k)'
;           dcrdb[i]=(6.-k[i])/(4.-k[i])
           crval[i]=a-(6.*b+k[i]-k[i]*b-2.)/(4.-k[i])
           creq[i]=alpha+'=(6'+beta+'+k-k'+beta+'-2)/(4-k)'
           dcrdb[i]=(6.-k[i])/(4.-k[i])
        end 
        'JETsowind3b': begin ;;DON'T BELIEVE
           k[i]=delalp*12./(2.*delalp+a+2.)
           kt=8./(2.*b+4.)
           kkt='<'+sigfig(kt,3)
           if k[i] gt kt or delalp eq 0. then ktgood=0 else ktgood=1
           crval[i]=delalp-k[i]/12.*(b+11.)/(4.-k[i])
           creq[i]=dap+'=k('+beta+'+11)/12(4-k)'
           dcrdb[i]=k[i]/(12.*(4-k[i]))
        end 
        ;;;k>kt for structured jet implies no spreading
        ;;;need kerr for k check?
        'JETsISM2a':begin  ;;JET with no lateral spreading
           crval[i]=a-(6.*b+3.)/4.
           creq[i]=alpha+'=(6'+beta+'+3)/4'
           dcrdb[i]=3./2.
;           if delalp eq 0. then ktgood=0
;           crval[i]=delalp-3./4.
;           creq[i]=dap+'=3/4'
;           dcrdb[i]=0.
        end
        'JETsISM2b':begin  ;;JET with no lateral spreadin
           crval[i]=a-(6.*b+21.)/16.
           creq[i]=alpha+'=(6'+beta+'+21)/16'
           dcrdb[i]=3./8.
;           if delalp eq 0. then ktgood=0
;           crval[i]=delalp-3./4.
;           creq[i]=dap+'=3/4'
;           dcrdb[i]=0.
        end
        'JETsISM2ai': begin ;;JET with no spreading and with EI
;           ktgood=0
           q[i]=(4.*a-4.*b+2.)/(2.*b+5.)
           dqda=4./(2.*b+5.)
           dqdb=(-8.*a-24.)/(2.*b+5.)^2.
           qerr[*,i]=[sqrt(dqda^2*alow^2+dqdb^2*blow^2),sqrt(dqda^2*aup^2+dqdb^2*bup^2)]
           crval[i]=a-((6.*b+3.)/4.-1./4.*(1-q[i])*(2.*b+5.))
           creq[i]=alpha+'=(6'+beta+'+3)/4-1/4(1-q)(2'+beta+'+5)'
           dcrdb[i]=(1.-q[i]/2.)
;           if delalp eq 0. then ktgood=0
;           q[i]=1.-4.*delalp/(2.*b+5.)
;           qerr[*,i]=[sqrt((4./(2.*b+5.))^2.*delalperr[0]^2+(-8.*delalp/(2.*b+5)^2)^2.*blow^2),sqrt((4./(5.+2.*b))^2.*delalperr[1]^2+(-8.*delalp/(2.*b+5)^2)^2.*bup^2)]
;           crval[i]=delalp-(1.-q[i])*(2.*b+5.)/4.
;           creq[i]=dap+'=(1-q)(2'+beta+'+5)/4'
;           dcrdb[i]=(1.-q[i])/2.
        end
        'JETsISM3a':begin
           crval[i]=a-(6.*b+1.)/4.
           creq[i]=alpha+'=(6'+beta+'+1)/4'
           dcrdb[i]=3./2.
;           if delalp eq 0. then ktgood=0
;           crval[i]=delalp-3./4.
;           creq[i]=dap+'=3/4'
;           dcrdb[i]=0.

        end
        'JETsISM3b':begin
           crval[i]=a-(3.*b+11.)/8.
           creq[i]=alpha+'=(3'+beta+'+11)/8'
           dcrdb[i]=3./8.
;           if delalp eq 0. then ktgood=0
;           crval[i]=delalp-3./4.
;           creq[i]=dap+'=3/4'
;           dcrdb[i]=0.
        end
        'JETsISM3ai': begin ;;JET with no spreading and with EI
;           ktgood=0
           q[i]=(4.*a-4.*b+2.)/(2.*b+3.)
           dqda=4./(2.*b+3.)
           dqdb=(-8.*a-16.)/(2.*b+3.)^2.
           qerr[*,i]=[sqrt(dqda^2*alow^2+dqdb^2*blow^2),sqrt(dqda^2*aup^2+dqdb^2*bup^2)]
           crval[i]=a-((6.*b+1.)/4.-1./4.*(1-q[i])*(2.*b+3.))
           creq[i]=alpha+'=(6'+beta+'+1)/4-1/4(1-q)(2'+beta+'+3)'
           dcrdb[i]=(1.-q[i]/2.)
;           if delalp eq 0. then ktgood=0
;           q[i]=1.-4.*delalp/(2.*b+3.)
;           qerr[*,i]=[sqrt((4./(2.*b+3.))^2.*delalperr[0]^2+(-8.*delalp/(2.*b+3.)^2)^2.*blow^2),sqrt((4./(3.+2.*b))^2.*delalperr[1]^2+(-8.*delalp/(2.*b+3.)^2)^2.*bup^2)]
;           crval[i]=delalp-(1.-q[i])*(2.*b+3.)/4.
;           creq[i]=dap+'=(1-q)(2'+beta+'+3)/4'
;           dcrdb[i]=(1.-q[i])/2.
        end 
        'JETsWIND2a': begin
           crval[i]=a-(3.*b+2.)/2.
           creq[i]=alpha+'=(3'+beta+'+2)/2'
           dcrdb[i]=3./2.
;           if delalp eq 0. then ktgood=0
;           crval[i]=delalp-1./2.
;           creq[i]=dap+'=1/2'
;           dcrdb[i]=0.
        end 
        'JETsWIND2b': begin
           crval[i]=a-(2.*b+13.)/8.
           creq[i]=alpha+'=(2'+beta+'+13)/8'
           dcrdb[i]=1./4.
;           if delalp eq 0. then ktgood=0
;           crval[i]=delalp-1./2.
;           creq[i]=dap+'=1/2'
;           dcrdb[i]=0.
        end 
        'JETsWIND2ai': begin ;;JET with no spreading and with EI
;           ktgood=0
           q[i]=(2.*a-2.*b)/(2.+b)
           dqda=2./(2.+b)
           dqdb=(-2.*a-4.)/(2.+b)^2.
           qerr[*,i]=[sqrt(dqda^2*alow^2+dqdb^2*blow^2),sqrt(dqda^2*aup^2+dqdb^2*bup^2)]
           crval[i]=a-((3.*b+2.)/2.-1./2.*(1-q[i])*(b+2.))
           creq[i]=alpha+'=(3'+beta+'+2)/2-1/2(1-q)('+beta+'+2)'
           dcrdb[i]=(1.+q[i]/2.)
;           if delalp eq 0. then ktgood=0
;           q[i]=1.-2.*delalp/(b+2.)
;           qerr[*,i]=[sqrt((2./(b+2.))^2.*delalperr[0]^2+(-4.*delalp/(b+2.)^2)^2.*blow^2),sqrt((2./(2.+b))^2.*delalperr[1]^2+(-4.*delalp/(b+2.)^2)^2.*bup^2)]
;           crval[i]=delalp-(1.-q[i])*(b+2.)/2.
;           creq[i]=dap+'=(1-q)('+beta+'+2)/2'
;           dcrdb[i]=(1.-q[i])/2.
        end
        'JETsWIND3a': begin
           crval[i]=a-3.*b/2.
           creq[i]=alpha+'=3'+beta+'/2'
           dcrdb[i]=3./2.
;           if delalp eq 0. then ktgood=0
;           crval[i]=delalp-1./2.
;           creq[i]=dap+'=1/2'
;           dcrdb[i]=0.
        end 
        'JETsWIND3b': begin
           crval[i]=a-(b+5.)/4.
           creq[i]=alpha+'=('+beta+'+5)/4'
           dcrdb[i]=1./4.
;           if delalp eq 0. then ktgood=0
;           crval[i]=delalp-1./2.
;           creq[i]=dap+'=1/2'
;           dcrdb[i]=0.
        end 
        'JETsWIND3ai': begin ;;JET with no spreading and with EI
;           ktgood=0
           q[i]=(2.*a-2.*b+2)/(2.+b)
           dqda=2./(2.+b)
           dqdb=(-2.*a-6.)/(2.+b)^2.
           qerr[*,i]=[sqrt(dqda^2*alow^2+dqdb^2*blow^2),sqrt(dqda^2*aup^2+dqdb^2*bup^2)]
           crval[i]=a-(3.*b/2.-1./2.*(1-q[i])*(b+2.))
           creq[i]=alpha+'=(3'+beta+')/2-1/2(1-q)('+beta+'+2)'
           dcrdb[i]=(1.+q[i]/2.)
;           if delalp eq 0. then ktgood=0
;           q[i]=1.-2.*delalp/(b+2.)
;           qerr[*,i]=[sqrt((2./(b+2.))^2.*delalperr[0]^2+(-4.*delalp/(b+2.)^2)^2.*blow^2),sqrt((2./(2.+b))^2.*delalperr[1]^2+(-4.*delalp/(b+2.)^2)^2.*bup^2)]
;           crval[i]=delalp-(1.-q[i])*(b+2.)/2.
;           creq[i]=dap+'=(1-q)('+beta+'+2)/2'
;           dcrdb[i]=(1.-q[i])/2.
        end 
        else:
     endcase
     errvalup[i]=sqrt(aup^2.+bup^2*dcrdb[i]^2.)
     errvallow[i]=sqrt(alow^2.+blow^2*dcrdb[i]^2.)
     if dcrdb[i] eq 0. then begin 
        errvalup[i]=delalperr[1]
        errvallow[i]=delalperr[0]
     endif 
     if k[i] ne 0. then begin 
        errvalup[i]=sqrt(delalperr[1]^2.+bup^2*dcrdb[i]^2.)
        errvallow[i]=sqrt(delalperr[0]^2.+blow^2*dcrdb[i]^2.)
     endif 
     
     ;;;IS IT REALLY NECESSARY TO LIMIT P WITHIN 3 SIGMA OF 1-2 OR >2
     if bb[i] eq 0 then npg=1
     if bb[i] eq 1 then pgood=where(p[i]+perr[1,i] gt 2,npg)
;     if bb[i] eq 2 then pgood=where(p[i]-perr[i] le 2. and p[i]+perr[i] ge 1.5,npg)
     if bb[i] eq 2 then pgood=where(p[i]-perr[0,i] le 2. and p[i]+perr[1,i] ge 1.0,npg)
;     if q[i] ne 0. then print,'q=',q[i],qerr[0,i],qerr[1,i]

;     if (((q[i]-qerr[0,i] lt 1. and q[i]+qerr[1,i] gt 0.) or ktgood) and npg gt 0 and know eq 0) or (know eq 1 and answer[i] eq 1) then begin 
     
     if q[i] eq 0. then begin
        ;;if not EI, can eval chisq based on how good fit to CR is
        if crval[i] gt 0. then chisq[good[i]]=crval[i]^2./(errvallow[i])^2. else chisq[good[i]]=crval[i]^2./(errvalup[i])^2.
;        print,'cr Nsig=',sqrt(chisq[i]),crval[i]
     endif else begin
        if q[i] gt 1 then chisq[good[i]]=(q[i]-1.)^2/(qerr[0,i])^2.
        if q[i] lt 1. then chisq[good[i]]=1.0
        if chisq[good[i]] lt nsig^2. then begin 
           com=execute('qstr.'+cr[i]+'=q[i]')
           com=execute('qstr.'+cr[i]+'err=qerr[*,i]')
        endif 
;        print,'q Nsig=',sqrt(chisq[i])
     endelse 
     
     ;;THIS IS BETTER THAN USING 90% PLUS FUDGE FACTOR
     
;     if (((q[i]-qerr[0,i] lt 1.) or ktgood) and npg gt 0 and know eq 0) or (know eq 1 and answer[i] eq 1) then begin 
     if (ktgood and npg gt 0 and know eq 0) or (know eq 1 and answer[i] eq 1) then begin 
;        if crval[i]-errvallow[i] lt 0.06 and crval[i]+errvalup[i] gt -0.06 and ((q[i]-qerr[0,i] lt 1.) or ktgood) then begin 
        if sqrt(chisq[good[i]]) le nsig and ktgood then begin 
        ;;;ALLOWED A LITTLE LEEWAY IN BEING CONSISTENT, RESET TO 0 TO BE STRICTER
;        if crval[i]-errvallow[i] lt 0 and crval[i]+errvalup[i] gt 0 and ktgood then begin 
;           gg=[gg,good[i]]
           psym=2
        endif else psym=4
        gg=[gg,good[i]]
        if not keyword_set(noplot) then begin 
           if k[i] ne 0. then kk='k='+numdec(k[i],2)+kkt else kk=''
           if q[i] ne 0. then kk='q='+numdec(q[i],2)+'!S!L-'+numdec(qerr[0,i],2)+'!R!U+'+numdec(qerr[1,i],2)+'!N)' else kk=''
           if pp[i] ne '' and kk eq '' then pp[i]=pp[i]+')'
           if pp[i] eq '' and kk ne '' then kk='('+kk
           plots,crval[i],n-i,psym=psym,color=color[i]
           oplot,[crval[i]-errvallow[i],crval[i]+errvalup[i]],[n-i,n-i],line=0,color=color[i]
;           print,cr[i],crval[i]
           xyouts,-3.8,n-i,cr[i]+' '+creq[i]+' '+pp[i]+'  '+kk,color=color[i],charsize=0.7
           if n_elements(segment) gt 0 then legend,ntostr(segment),box=0,/top,/right,charsize=1
        endif
;        if k[i] ne 0. then stop
     endif
;     xyouts,-3.8,n-i+1,cr[i]+' '+altcr[i]+'  '+creq[i]+' ',color=color[i],charsize=1.5
;     if ktgood eq 0 then stop
;     key=get_kbrd(10)
;     print,cr[i]
;     stop
  endfor 
;stop
  if n_elements(gg) gt 1 then gg=gg[1:*]
  if not keyword_set(noplot) then oplot,[0,0],[0,n+2],line=2

;  for i=0,n_elements(m1)-1 do $
;     oplot,[crval[m1[i]]-errvallow[m1[i]],crval[m1[i]]+errvalup[m1[i]]],[m1[i]+1,m1[i]+1],line=0,color=!green
;  oplot,crval[m1],m1+1,psym=2,color=!green
;  !p.multi=0
;  endif else print,'No closure relations fit'
 
  return
end 
  
pro closure_relations,ps=ps,go=go,dir=dir,onlygo=onlygo
  
  if n_elements(nsig) eq 0 then nsig=3.
;  nsig=2.
  cd,!mdata
  if keyword_set(onlygo) then goto,cheat
  g=0
  if n_elements(dir) eq 0 then dir=file_search('GRB*')
  nw=n_elements(dir)
  if nw lt 5 then begin 
     g=0
     nw=1
     nocd=0
  endif else begin
     nocd=0
     stop
  endelse 
  count=0

  for i=g,nw-1 do begin 
     if not nocd then cd,dir[i]
     print
     print,dir[i],i
     lcfile0='lc_fit_out_idl.dat'
     lcfile='lc_fit_out_idl_int2.dat'
     lcoutfile='lc_newout_noflares.txt'
     if not exist(lcoutfile) then lcoutfile='lc_newout.txt'
     if exist(lcfile) or exist(lcfile0) then begin 
        if numlines(lcfile) gt 1 then begin 
           read_lcfit,lcfile,pname,p,perror,chisqs,dof,breaks,lc=lc
           wnotfin=where(finite(perror[0,*]) eq 0,nwnot)
           if nwnot gt 0 then perror[0,wnotfin]=perror[1,wnotfin]
           wnotfin=where(finite(perror[1,*]) eq 0,nwnot)
           if nwnot gt 0 then perror[1,wnotfin]=perror[0,wnotfin]
           if breaks eq 0 then count=count+1
           if n_elements(pname) gt 1 then begin 
;              fit_lc,/justplot,name=dir[i],lc=rlc,ps=ps
              if keyword_set(ps) then begplot,name='closure_relations.ps',/color ;,/land
              if exist('spec/seg1.dat') then begin 
                 read_specfit,spec,dir='spec'
                 if n_elements(spec) eq 1 and spec[0].pow eq 0 then print,'No specfit' else begin 
                    
;              erase
;              multiplot,[1,breaks+3],/init
;              !p.multi=[0,1,breaks+2]
;              plot_like_qdp,name=dir[i],pmulti=[0,1,breaks+2]
;              multiplot
;              fit_lc,/justplot,charsize=1.5,name=dir[i],lc=rlc,xtitle=''

;                 fit_lc,/justplot,pmulti=[0,1,breaks+3],name=dir[i],charsize=1.5,lc=rlc
                    erase
                    multiplot2,[1,breaks+3],/init
                    fit_lc,/justplot,name=dir[i],charsize=1.5,lc=rlc,/noinit,/noxaxis
                    lcout=lcout2fits(lcoutfile)
                    wrlc=where(rlc.tot_hard gt 0 and finite(rlc.tot_hard),nwrlc)
;              multiplot
;                 !y.margin=[3,1]
;                 if nwrlc gt 0 then begin
;                    ploterror,rlc[wrlc].time,rlc[wrlc].tot_hard,rlc[wrlc].tot_hard_err,psym=3,/nohat,xtitle='Time since BAT trigger (s)',ytitle='hard ratio',charsize=1.5,/xlog,/ylog,yrange=minmax(rlc[wrlc].tot_hard) ;[min(rlc[wrlc].tot_hard-rlc[wrlc].tot_hard_err),max(rlc[wrlc].tot_hard+rlc[wrlc].tot_hard_err)]
;                    for r=0,n_elements(rlc[wrlc])-1 do oplot,[rlc[wrlc[r]].tstart,rlc[wrlc[r]].tstop],[rlc[wrlc[r]].tot_hard,rlc[wrlc[r]].tot_hard]
;                 endif 
                    alphas=p[indgen(breaks+1)*2+1]
                    alphaserr=perror[*,indgen(breaks+1)*2+1]
                    make_crstruct,breaks+1,crstr

;              multiplot
;              plot,indgen(10),color=0,/nodata
                    noj=intarr(breaks+1)
                    
                    crstr.tstart=min(lcout.tstart)
                    crstr.tstop=max(rlc.tstop)
                    wdet=where(rlc.src_rate_err gt 0.,nwdet)
;                 if nwdet le 3 then stop
                    crstr.tlastdet=rlc[wdet[nwdet-1]].tstop
                    case breaks of 
                       0: model='pow'
                       1: model='bknpow'
                       2: model='bkn2pow'
                       3: model='bkn3pow'
                    endcase 
                    times=['tstop','tlastdet']
              ;;;loop over times of interest and find fit count rate (ctr)
                    for j=0,n_elements(times)-1 do $
                       tmp=execute('crstr.ctr_'+times[j]+'='+model+'(crstr.'+times[j]+',p)')
                    tmp=execute('crstr.ctr_t1day[*]='+model+'(86400.,p)')

                    for j=0,breaks do begin
                       crstr[j].grb=dir[i]
                                ;                multiplot
                       alpha=p[j*2+1]
                       alplow=perror[0,j*2+1]
                       alphigh=perror[1,j*2+1]
                       if alplow eq 0. then alplow=alpha*0.3
                       if alphigh eq 0. then alphigh=alpha*0.3
                       
                       if j gt 0 then begin
                          crstr[j].tbreak=p[(j-1)*2+2]
                          crstr[j].tbreakerr=perror[*,(j-1)*2+2]
                       endif 
                       crstr[j].alpha=alpha
                       crstr[j].alphaerr=[alplow,alphigh]
;                    if n_elements(spec) gt breaks then begin 
                       crstr[j].beta=spec[j].pow-1
                       wnot0=where(spec.pow ne 0.)
                       if spec[j].pow eq 0 then begin
                          crstr[j].beta=mean(spec[wnot0].pow-1)
                          crstr[j].betaerr[0]=mean(spec[wnot0].pow_err[0])
                          crstr[j].betaerr[1]=mean(spec[wnot0].pow_err[1])
                          spec[j].pow=mean(spec[wnot0].pow)
                          spec[j].pow_err[0]=mean(spec[wnot0].pow_err[0])
                          spec[j].pow_err[1]=mean(spec[wnot0].pow_err[1])
                       endif 
                       crstr[j].betaerr=spec[j].pow_err
                       crstr[j].flux=spec[j].unabs_flux
                       crstr[j].rate=spec[j].rate
                                ;                   endif 

                       which_alpha,alphas,alphaserr,j,posas,delalp,delalperr
                       posa=posas[*,j]
                       print,posa
                       if j ne 0 then begin
                          dalp=delalp[j-1]
                          dalperr=delalperr[*,j-1]
                       endif else begin 
                          dalp=0.
                          dalperr=[0.,0.]
                       endelse 
                       print,dalp,dalperr
                       print,'Fitting Closure Relations for Segment '+ntostr(j+1)
                       if nwdet gt 2 then begin 
                          if n_elements(spec)+1 gt breaks then begin 
                             if spec[j].pow ne 0. then begin 
                                print,alpha,alplow,alphigh,spec[j].pow,spec[j].pow_err[0],spec[j].pow_err[1]
                                multiplot2,ydowngap=0
                                if j eq breaks then xtitle='closure relations' else xtitle=''
                                which_closure_relation,alpha,alplow/1.645,alphigh/1.645,spec[j].pow,spec[j].pow_err[0]/1.645,spec[j].pow_err[1]/1.645,cr,posa,dalp,dalperr/1.645,gg,chisq=chisq,ps=ps,qstr=qstr0,nsig=nsig,xtitle=xtitle
                                
                                if j gt 0 then begin
                                   concat_structs,qstr,qstr0,qstrcomb
                                   qstr=qstrcomb
                                endif else qstr=qstr0
                                if n_elements(posa) eq 2 then posa=posa[0]
                                for pa=1,4 do begin 
                                   w=where(posa eq pa,nw)
                                   if n_elements(posa) ne 4 then begin 
                                      if nw eq 1 then com=execute('crstr[j].seg'+ntostr(pa)+'=1') 
                                   endif else crstr[j].seg0=1
                                endfor 
                                if gg[0] ne -1 then $
                                   for c=0,n_elements(gg)-1 do com=execute('crstr[j].(gg[c]+6)=sqrt(chisq[gg[c]])')
                                noj[j]=1
                             endif else begin
                                print,'No Spectral fit available'
                             endelse 
                          endif else begin 
                             print,'No Spectral fit available'
                          endelse 
                          if breaks gt 0 then tmp=execute('crstr[j].ctr_tbreak='+model+'(crstr[j].tbreak'+',p)')
                       endif
                    endfor
                    multiplot2,/reset
                    multiplot2,/default
;                 wj=where(noj ne 0,nwj)
;                 if nwj gt 0 then crstr=crstr[wj]
                    elim=1
                    while elim gt 0 do begin
                       cr_consistency_check,crstr,elim,qstr,nsig=nsig
                       print,elim
                    endwhile 

;              cr_consistency_check,crstr ;;run twice to adapt to already removed possibilities
                    if nsig eq 2. then signame='_2sig' else signame=''
                    if n_elements(spec) eq 1 and spec[0].pow eq 0. or nwdet le 2 then begin
                       if exist('closure_relations.fits') then spawn,'rm closure_relations.fits'
                       print,'No spec fits' 
                    endif else begin
                       mwrfits,crstr,'closure_relations'+signame+'.fits',/create
                       mwrfits,qstr,'qstr'+signame+'.fits',/create
                    endelse 
                    !p.multi=0
                    !y.margin=[4,2]
                    if keyword_set(ps) then endplot
;              multiplot,/reset
                    if not keyword_set(go) then k=get_kbrd(10) else k=''
                    if k eq 's' then stop
                    if k eq 'q' then begin
                       cd,!mdata
                       return
                    endif 
                 endelse 
              endif else print,'No specfit' 
           endif 
        endif else print,'No good temporal fit'
     endif else print,'No '+lcfile
     if not nocd then cd,!mdata
  endfor
  
  print,'Count of 0 breaks: ',count
  if nw gt 1 then begin
     cat_crstructs,cr,nsig=nsig
     maybe_jet_break,cr,nsig=nsig
     calc_jet_stuff,cr,nsig=nsig
     stop
  endif 
  
  cheat:
  if keyword_set(go) then begin
     cat_crstructs,cr,nsig=nsig
     maybe_jet_break,cr,nsig=nsig
     when_maybe_jetbreak,cr=cr,/go,nsig=nsig
     calc_jet_stuff,cr,nsig=nsig
     cr_paper_results,nsig=nsig
  endif 
  
  ;;;plot cases for each burst
  ;;use gamma to get beta
  ;;use beta to get nu
  ;;for nu with p options, use beta to get p
  ;;then have closure relation for each case (ISM, WIND, JET, fast, slow, etc)
  
  return
end 


;;run closure_relations for each burst
;;run cat_crstructs,cr
;;run maybe_jet_break,cr
;;calc_jet_stuff,cr
