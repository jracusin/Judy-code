pro akbar_email_sub,noprint=noprint,submit=submit
  
  prt='N'
;  if keyword_set(noprint) then prt='N' else prt='Y'
  get_file_begin,filebegin
  
                                ;begin akbar submission file
  openw,aklun,'akbar_email.txt',/get_lun
  printf,aklun,'<BEGIN>'
  printf,aklun,'<PROJECT=SWIFTXRTDS>'
  if not keyword_set(submit) then printf,aklun,'<OPTION=VERIFY>' else $
     printf,aklun,'<OPTION=SUBMIT>'
  printf,aklun,'<COVER>'
  
                                ;archive
  year=strmid(filebegin,4,4)
  day=strmid(filebegin,8,3)
  hour=strmid(filebegin,11,2)
  minute=strmid(filebegin,13,2)
  printf,aklun,'Day of Day-Month-Year Date [format=I2]: '
  printf,aklun,'Month of Day-Month-Year Date [format=A3]: '
  printf,aklun,'Year of Day-Month-Year Date [format=I4]: '
  printf,aklun,'Hour of Day-Month-Year Date [format=I2]: '
  printf,aklun,'Minute of Day-Month-Year Date [format=F5.2]: '
  printf,aklun,'Day of Year [format=I3]: '+day
  printf,aklun,'Year of Day-of-year Date [format=I4]: '+year
  printf,aklun,'Hour of Day-of-year Date [format=I2]: '+hour
  printf,aklun,'Minute of Day-of-year Date [format=F5.2]: '+minute
  
  mode='Pipeline'               ;ask user?
  printf,aklun,'Mode That Data Is From [format=A10,unit=Pipeline/Playback,required]: '+mode
  rootname=filebegin
  printf,aklun,'Root Filename [format=A20,required]: '+rootname
  analyst='XRT'                 ;need specific?
  printf,aklun,'Analyst Initials [format=A3,required]: '+analyst
  note='Generated by akbar_email_sub.pro' ;needed?
  printf,aklun,'Archive Tag Note [format=A80]: '+note
  
  ;;stripchart VC0 RT (1)
  file=filebegin+'_ahkVC0.0.stripchart.log'
  strtcat='N'                   ;always true?
  strttimegaps='N'              ;true if assuming after launch?
  strtprint=prt
  strtsampstart=''              ;what are these?
  strtsampstop=''
  strtdata=''
  strtstarttime=''
  strtstoptime=''
  note=''
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     if file_size(file) eq 0 then strtdata='N' else strtdata='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while ((not EOF(stlun)) or (go eq 1)) do begin 
        if strpos(line,'First CCSDS packet time: ') ne -1 then begin 
           chunks=str_sep(line,' ')
           strtstarttime=chunks[8]
        endif 
        if strpos(line,'Last CCSDS packet time: ') ne -1 then begin
           chunks=str_sep(line,' ')
           strtstoptime=chunks[9]
           go=0
        endif
        if strpos(line,'Delta') ne -1 then begin
           chunks=str_sep(line,' ')
           strtdelta=chunks[13]
        endif
        
        readf,stlun,line
     endwhile
     close,stlun
     free_lun,stlun
  endif 
  
  printf,aklun,'Stripchart APID 0X484 RT Data?(1) [format=A1,unit=Y/N]: '+strtdata
  printf,aklun,'Stripchart APID 0X484 RT Catalog?(1) [format=A1,unit=Y/N]: '+strtcat
  printf,aklun,'Stripchart APID 0X484 RT Time-gaps?(1) [format=A1,unit=Y/N]: '+strttimegaps
  printf,aklun,'Stripchart APID 0X484 RT Print?(1) [format=A1,unit=Y/N]: '+strtprint
  printf,aklun,'Stripchart APID 0X484 RT Sample Number Start(1) [format=I10]: '+strtsampstart
  printf,aklun,'Stripchart APID 0X484 RT Sample Number Stop(1) [format=I10]: '+strtsampstop
  printf,aklun,'Stripchart APID 0X484 RT Start Time(1) [format=F16.5]: ',strtstarttime,format=f165
  printf,aklun,'Stripchart APID 0X484 RT Stop Time(1) [format=F16.5]: ',strtstoptime,format=f165
;  printf,aklun,'Stripchart APID 0X484 RT Note [format=A80]: '+note
  
                                ;stripchart VCO RT (2)  
                                ;   if assuming no time gaps, all fields always zero for this section
                                ;   is this a reasonable assumption?  how check?
  
  printf,aklun,'Stripchart APID 0X484 RT Data?(2) [format=A1,unit=Y/N]: '
  printf,aklun,'Stripchart APID 0X484 RT Catalog?(2) [format=A1,unit=Y/N]: '
  printf,aklun,'Stripchart APID 0X484 RT Time-gaps?(2) [format=A1,unit=Y/N]: '
  printf,aklun,'Stripchart APID 0X484 RT Print?(2) [format=A1,unit=Y/N]: '
  printf,aklun,'Stripchart APID 0X484 RT Sample Number Start(2) [format=I10]: '
  printf,aklun,'Stripchart APID 0X484 RT Sample Number Stop(2) [format=I10]: '
  printf,aklun,'Stripchart APID 0X484 RT Start Time(2) [format=F16.5]: '
  printf,aklun,'Stripchart APID 0X484 RT Stop Time(2) [format=F16.5]: '
  printf,aklun,'Stripchart APID 0X484 RT Note [format=A80]: '
  
                                ;stripchart TDRSS RT
  file=filebegin+'_tdrsshk.0.stripchart.log'
  strtcat='N'                   ;always true?
  strttimegaps='N'              ;true if assuming after launch?
  strtprint=prt
  strtsampstart=''              ;what are these?
  strtsampstop=''
  strtdata=''
  strtstarttime=''
  strtstoptime=''
  note=''
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     if file_size(file) eq 0 then strtdata='N' else strtdata='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while ((not EOF(stlun)) or (go eq 1)) do begin 
        if strpos(line,'First CCSDS packet time: ') ne -1 then begin 
           chunks=str_sep(line,' ')
           strtstarttime=chunks[8]
        endif 
        if strpos(line,'Last CCSDS packet time: ') ne -1 then begin
           chunks=str_sep(line,' ')
           strtstoptime=chunks[9]
           go=0
        endif
        if strpos(line,'Delta') ne -1 then begin
           chunks=str_sep(line,' ')
           strtdelta=chunks[13]
        endif
        
        readf,stlun,line
     endwhile
     close,stlun
     free_lun,stlun
  endif 
  
  printf,aklun,'Stripchart APID 0X534 RT Data? [format=A1,unit=Y/N]: '+strtdata
  printf,aklun,'Stripchart APID 0X534 RT Catalog? [format=A1,unit=Y/N]: '+strtcat
  printf,aklun,'Stripchart APID 0X534 RT Time-gaps? [format=A1,unit=Y/N]: '+strttimegaps
  printf,aklun,'Stripchart APID 0X534 RT Print? [format=A1,unit=Y/N]: '+strtprint
  printf,aklun,'Stripchart APID 0X534 RT Sample Number Start [format=I10]: '+strtsampstart
  printf,aklun,'Stripchart APID 0X534 RT Sample Number Stop [format=I10]: '+strtsampstop
  printf,aklun,'Stripchart APID 0X534 RT Start Time [format=F16.5]: ',strtstarttime,format=f165
  printf,aklun,'Stripchart APID 0X534 RT Stop Time [format=F16.5]: ',strtstoptime,format=f165
  printf,aklun,'Stripchart APID 0X534 RT Note [format=A80]: '+note
  
  
                                ;stripchart AHK Malindi SSR (1)    
  file=filebegin+'_ahk.0.stripchart.log'
  stssrcat='N'                  ;always true?
  stssrtimegaps='N'             ;true if assuming after launch?
  stssrprint=prt
  stssrsampstart=''             ;what are these?
  stssrsampstop=''
  stssrdata=''
  stssrstarttime=''
  stssrstoptime=''
  note=''
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     if file_size(file) eq 0 then stssrdata='N' else stssrdata='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while ((not EOF(stlun)) or (go eq 1)) do begin 
        if strpos(line,'First CCSDS packet time: ') ne -1 then begin 
           chunks=str_sep(line,' ')
           stssrstarttime=chunks[8]
        endif 
        if strpos(line,'Last CCSDS packet time: ') ne -1 then begin
           chunks=str_sep(line,' ')
           stssrstoptime=chunks[9]
           go=0
        endif
        if strpos(line,'Delta') ne -1 then begin
           chunks=str_sep(line,' ')
           stssrdelta=chunks[13]
        endif
        
        readf,stlun,line
     endwhile
     close,stlun
     free_lun,stlun
  endif 
  printf,aklun,'Stripchart APID 0X484 SSR Data?(1) [format=A1,unit=Y/N]: '+stssrdata
  printf,aklun,'Stripchart APID 0X484 SSR Catalog?(1) [format=A1,unit=Y/N]: '+stssrcat
  printf,aklun,'Stripchart APID 0X484 SSR Time-gaps?(1) [format=A1,unit=Y/N]: '+stssrtimegaps
  printf,aklun,'Stripchart APID 0X484 SSR Print?(1) [format=A1,unit=Y/N]: '+stssrprint
  printf,aklun,'Stripchart APID 0X484 SSR Sample Number Start(1) [format=I10]: '+stssrsampstart
  printf,aklun,'Stripchart APID 0X484 SSR Sample Number Stop(1) [format=I10]: '+stssrsampstop
  printf,aklun,'Stripchart APID 0X484 SSR Start Time(1) [format=F16.5]: ',stssrstarttime,format=f165
  printf,aklun,'Stripchart APID 0X484 SSR Stop Time(1) [format=F16.5]: ',stssrstoptime,format=f165
;  printf,aklun,'Stripchart APID 0X484 SSR Note [format=A80]: '+note
  
                                ;stripchart ahk Malindi SSR (2)  
                                ;   if assuming no time gaps, all fields always zero for this section
                                ;   is this a reasonable assumption?  how check?
  
  printf,aklun,'Stripchart APID 0X484 SSR Data?(2) [format=A1,unit=Y/N]: '
  printf,aklun,'Stripchart APID 0X484 SSR Catalog?(2) [format=A1,unit=Y/N]: '
  printf,aklun,'Stripchart APID 0X484 SSR Time-gaps?(2) [format=A1,unit=Y/N]: '
  printf,aklun,'Stripchart APID 0X484 SSR Print?(2) [format=A1,unit=Y/N]: '
  printf,aklun,'Stripchart APID 0X484 SSR Sample Number Start(2) [format=I10]: '
  printf,aklun,'Stripchart APID 0X484 SSR Sample Number Stop(2) [format=I10]: '
  printf,aklun,'Stripchart APID 0X484 SSR Start Time(2) [format=F16.5]: '
  printf,aklun,'Stripchart APID 0X484 SSR Stop Time(2) [format=F16.5]: '
  printf,aklun,'Stripchart APID 0X484 SSR Note [format=A80]: '
  
                                ;stripchart ahk_tdrss_vc6 TDRSS SSR
  
  file=filebegin+'_ahk_tdrss_vc6.0.stripchart.log'
  strtcat='N'                   ;always true?
  strttimegaps='N'              ;true if assuming after launch?
  strtprint=prt
  strtsampstart=''              ;what are these?
  strtsampstop=''
  strtdata=''
  strtstarttime=''
  strtstoptime=''  
  note=''
  f165='(a,a)'
  if exist(file) then begin
     f165='(a,F16.5)'
     if file_size(file) eq 0 then strtdata='N' else strtdata='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while ((not EOF(stlun)) or (go eq 1)) do begin 
        if strpos(line,'First CCSDS packet time: ') ne -1 then begin 
           chunks=str_sep(line,' ')
           strtstarttime=chunks[8]
        endif 
        if strpos(line,'Last CCSDS packet time: ') ne -1 then begin
           chunks=str_sep(line,' ')
           strtstoptime=chunks[9]
           go=0
        endif
        if strpos(line,'Delta') ne -1 then begin
           chunks=str_sep(line,' ')
           strtdelta=chunks[13]
        endif
        
        readf,stlun,line
     endwhile
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'Stripchart APID 0X534 SSR Data? [format=A1,unit=Y/N]: '+strtdata
  printf,aklun,'Stripchart APID 0X534 SSR Catalog? [format=A1,unit=Y/N]: '+strtcat
  printf,aklun,'Stripchart APID 0X534 SSR Time-gaps? [format=A1,unit=Y/N]: '+strttimegaps
  printf,aklun,'Stripchart APID 0X534 SSR Print? [format=A1,unit=Y/N]: '+strtprint
  printf,aklun,'Stripchart APID 0X534 SSR Sample Number Start [format=I10]: '+strtsampstart
  printf,aklun,'Stripchart APID 0X534 SSR Sample Number Stop [format=I10]: '+strtsampstop
  printf,aklun,'Stripchart APID 0X534 SSR Start Time [format=F16.5]: ',strtstarttime,format=f165
  printf,aklun,'Stripchart APID 0X534 SSR Note [format=A80]: '+note
  
  ;;scanerr
  
  ;; Malindi SSR
  file=filebegin+'_errors.txt'
  run='N'
  starttime=''
  stoptime=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        whatline=whatline+1
        if whatline eq 7 then begin
           chunks=str_sep(line,' ')
           date=strtrim(chunks[0],1)
           met=date2met(date)
           starttime=ntostr(long(met))+ntostr((met-long(met)))
        endif 
        readf,stlun,line
     endwhile
     chunks=str_sep(line,' ')
     date=strtrim(chunks[0],1)
     met=date2met(date)
     stoptime=ntostr(long(met))+ntostr((met-long(met)))
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'Malindi SSR Scanner Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'Malindi SSR Scanner Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'Malindi SSR Scanner Start Time [format=F16.5]: ',starttime,format=f165
  printf,aklun,'Malindi SSR Scanner Stop Time [format=F16.5]: ',stoptime,format=f165
  printf,aklun,'Malindi SSR Scanner Note [format=A80]: '+note
  
  ;;Malindi RT
  file=filebegin+'_errorsVC0.txt'
  run='N'
  starttime=''
  stoptime=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        whatline=whatline+1
        if whatline eq 7 then begin
           chunks=str_sep(line,' ')
           date=strtrim(chunks[0],1)
           met=date2met(date)
           starttime=ntostr(long(met))+ntostr((met-long(met)))
        endif 
        readf,stlun,line
     endwhile
     chunks=str_sep(line,' ')
     date=strtrim(chunks[0],1)
     met=date2met(date)
     stoptime=ntostr(long(met))+ntostr((met-long(met)))
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'Malindi RT Scanner Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'Malindi RT Scanner Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'Malindi RT Scanner Start Time [format=F16.5]: ',starttime,format=f165
  printf,aklun,'Malindi RT Scanner Stop Time [format=F16.5]: ',stoptime,format=f165
  printf,aklun,'Malindi RT Scanner Note [format=A80]: '+note
  
  ;;TDRSS SSR
  file=filebegin+'_errors_tdrss_vc6.txt'
  run='N'
  starttime=''
  stoptime=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        whatline=whatline+1
        if whatline eq 7 then begin
           chunks=str_sep(line,' ')
           date=strtrim(chunks[0],1)
           met=date2met(date)
           starttime=ntostr(long(met))+ntostr((met-long(met)))
        endif 
        readf,stlun,line
     endwhile
     chunks=str_sep(line,' ')
     date=strtrim(chunks[0],1)
     met=date2met(date)
     stoptime=ntostr(long(met))+ntostr((met-long(met)))
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS SSR Scanner Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS SSR Scanner Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS SSR Scanner Start Time [format=F16.5]: ',starttime,format=f165
  printf,aklun,'TDRSS SSR Scanner Stop Time [format=F16.5]: ',stoptime,format=f165
  printf,aklun,'TDRSS SSR Scanner Note [format=A80]: '+note
  
  ;;TDRSS RT  ;do we ever produce these?
  file=filebegin+'_errors_tdrsshk.txt'
  run='N'
  starttime=''
  stoptime=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        whatline=whatline+1
        if whatline eq 7 then begin
           chunks=str_sep(line,' ')
           date=strtrim(chunks[0],1)
           met=date2met(date)
           starttime=ntostr(long(met))+ntostr((met-long(met)))
        endif 
        readf,stlun,line
     endwhile
     chunks=str_sep(line,' ')
     date=strtrim(chunks[0],1)
     met=date2met(date)
     stoptime=ntostr(long(met))+ntostr((met-long(met)))
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS RT Scanner Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS RT Scanner Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS RT Scanner Start Time [format=F16.5]: ',starttime,format=f165
  printf,aklun,'TDRSS RT Scanner Stop Time [format=F16.5]: ',stoptime,format=f165
  printf,aklun,'TDRSS RT Scanner Note [format=A80]: '+note
  
  ;;MODECHANGE
  ;; Malindi SSR 
  file=filebegin+'_modechange.0.modechange.log'
  run='N'
  starttime=''
  stoptime=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        whatline=whatline+1
        if whatline eq 5 then begin
           chunks=str_sep(line,' ')
           date=strtrim(chunks[1],1)
           met=date2met(date)
           starttime=ntostr(long(met))+ntostr((met-long(met)))
        endif 
        readf,stlun,line
     endwhile
     chunks=str_sep(line,' ')
     date=strtrim(chunks[1],1)
     met=date2met(date)
     stoptime=ntostr(long(met))+ntostr((met-long(met)))
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'Malindi SSR Modechange Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'Malindi SSR Modechange Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'Malindi SSR Modechange Start Time [format=F16.5]: ',starttime,format=f165
  printf,aklun,'Malindi SSR Modechange Stop Time [format=F16.5]: ',stoptime,format=f165
  printf,aklun,'Malindi SSR Modechange Note [format=A80]: '+note
  
  ;;Malindi RT
  file=filebegin+'_modechangeVC0.0.modechange.log'
  run='N'
  starttime=''
  stoptime=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        whatline=whatline+1
        if whatline eq 5 then begin
           chunks=str_sep(line,' ')
           date=strtrim(chunks[1],1)
           met=date2met(date)
           starttime=ntostr(long(met))+ntostr((met-long(met)))
        endif 
        readf,stlun,line
     endwhile
     chunks=str_sep(line,' ')
     date=strtrim(chunks[0],1)
     met=date2met(date)
     stoptime=ntostr(long(met))+ntostr((met-long(met)))
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'Malindi RT Modechange Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'Malindi RT Modechange Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'Malindi RT Modechange Start Time [format=F16.5]: ',starttime,format=f165
  printf,aklun,'Malindi RT Modechange Stop Time [format=F16.5]: ',stoptime,format=f165
  printf,aklun,'Malindi RT Modechange Note [format=A80]: '+note
  
  ;;TDRSS SSR
  file=filebegin+'_modechange_tdrss_vc6.0.modechange.log'
  run='N'
  starttime=''
  stoptime=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        whatline=whatline+1
        if whatline eq 5 then begin
           chunks=str_sep(line,' ')
           date=strtrim(chunks[1],1)
           met=date2met(date)
           starttime=ntostr(long(met))+ntostr((met-long(met)))
        endif 
        readf,stlun,line
     endwhile
     chunks=str_sep(line,' ')
     date=strtrim(chunks[0],1)
     met=date2met(date)
     stoptime=ntostr(long(met))+ntostr((met-long(met)))
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS SSR Modechange Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS SSR Modechange Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS SSR Modechange Start Time [format=F16.5]: ',starttime,format=f165
  printf,aklun,'TDRSS SSR Modechange Stop Time [format=F16.5]: ',stoptime,format=f165
  printf,aklun,'TDRSS SSR Modechange Note [format=A80]: '+note
  
  ;;TDRSS RT  ;do we ever produce these?
  file=filebegin+'_modechange_tdrsshk.0.modechange.log'
  run='N'
  starttime=''
  stoptime=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        whatline=whatline+1
        if whatline eq 5 then begin
           chunks=str_sep(line,' ')
           date=strtrim(chunks[1],1)
           met=date2met(date)
           starttime=ntostr(long(met))+ntostr((met-long(met)))
        endif 
        readf,stlun,line
     endwhile
     chunks=str_sep(line,' ')
     date=strtrim(chunks[0],1)
     met=date2met(date)
     stoptime=ntostr(long(met))+ntostr((met-long(met)))
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS RT Modechange Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS RT Modechange Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS RT Modechange Start Time [format=F16.5]: ',starttime,format=f165
  printf,aklun,'TDRSS RT Modechange Stop Time [format=F16.5]: ',stoptime,format=f165
  printf,aklun,'TDRSS RT Modechange Note [format=A80]: '+note
  
  ;;TDRSS ANALYSIS
  ;;POSITIONMESSAGE
  
  file=filebegin+'_positionmessage.txt'
  file0=filebegin+'_positionmessage.0'
  run='N'
  report='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if whatline eq 11 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           segno=chunks[6]
        endif 
        if whatline eq 12 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           targetid=chunks[6]
        endif 
        if whatline eq 13 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[6]
           go=0
        endif 
        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis positionmessage.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis positionmessage.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis positionmessage.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis positionmessage.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis positionmessage.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis positionmessage.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis positionmessage.0 Segment Number [format=I10]: '+segno

  ;;POSITIONMESSAGE TDRSS
  
  file=filebegin+'_positionmessage_tdrss.txt'
  file0=filebegin+'_positionmessage_tdrss.0'
  run='N'
  report='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if whatline eq 11 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           segno=chunks[6]
        endif 
        if whatline eq 12 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           targetid=chunks[6]
        endif 
        if whatline eq 13 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[6]
           go=0
        endif 
        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis positionmessage_tdrss.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis positionmessage_tdrss.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis positionmessage_tdrss.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis positionmessage_tdrss.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis positionmessage_tdrss.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis positionmessage_tdrss.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis positionmessage_tdrss.0 Segment Number [format=I10]: '+segno
  printf,aklun,'TDRSS Analysis Position Note [format=A80]:',note
  
  
  ;;CENTROIDINGERR
  
  file=filebegin+'_centroidingerr.txt'
  file0=filebegin+'_centroidingerr.0'
  run='N'
  report='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if whatline eq 11 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           segno=chunks[6]
        endif 
        if whatline eq 12 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           targetid=chunks[6]
        endif 
        if whatline eq 13 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[6]
           go=0
        endif 
        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis centroidingerr.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis centroidingerr.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis centroidingerr.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis centroidingerr.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis centroidingerr.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis centroidingerr.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis centroidingerr.0 Segment Number [format=I10]: '+segno

  ;;CENTRIODINGERR tdrss
  
  file=filebegin+'_centroidingerr_tdrss.txt'
  file0=filebegin+'_centroidingerr_tdrss.0'
  run='N'
  report='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if whatline eq 11 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           segno=chunks[6]
        endif 
        if whatline eq 12 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           targetid=chunks[6]
        endif 
        if whatline eq 13 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[6]
           go=0
        endif 
        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis centroidingerr_tdrss.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis centroidingerr_tdrss.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis centroidingerr_tdrss.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis centroidingerr_tdrss.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis centroidingerr_tdrss.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis centroidingerr_tdrss.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis centroidingerr_tdrss.0 Segment Number [format=I10]: '+segno
  printf,aklun,'TDRSS Analysis Centroid Error Note [format=A80]: '+note
  
  ;;POSTAGESTAMP
  
  file=filebegin+'_postagestamp.0.postage_stamp.log'
  file0=filebegin+'_postagestamp.0'
  run='N'
  report='N'
  verifyfits='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     verifyfits='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if strpos(line,'Satellite time') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[6]
           go=0
        endif 
        
        if strpos(line,'Obs Num, Target ID, Obs Seg, Seq #:') ne -1 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           targetid=chunks[8]
           segno=chunks[11]
        endif 

        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis postagestamp.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis postagestamp.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis postagestamp.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis postagestamp.0 Verify FITS? [format=A1,unit=Y/N]: '+verifyfits
  printf,aklun,'TDRSS Analysis postagestamp.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis postagestamp.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis postagestamp.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis postagestamp.0 Segment Number [format=I10]: '+segno

  ;;POSTAGESTAMP TDRSS
  
  file=filebegin+'_postagestamp_tdrss.0.postage_stamp.log'
  file0=filebegin+'_postagestamp_tdrss.0'
  run='N'
  report='N'
  verifyfits='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     verifyfits='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if strpos(line,'Satellite time') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[6]
        endif 
        
        if strpos(line,'Obs Num, Target ID, Obs Seg, Seq #:') ne -1 then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           targetid=chunks[8]
           segno=chunks[11]
        endif 

        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis postagestamp_tdrss.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis postagestamp_tdrss.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis postagestamp_tdrss.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis postagestamp_tdrss.0 Verify FITS? [format=A1,unit=Y/N]: '+verifyfits
  printf,aklun,'TDRSS Analysis postagestamp_tdrss.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis postagestamp_tdrss.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis postagestamp_tdrss.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis postagestamp_tdrss.0 Segment Number [format=I10]: '+segno
  printf,aklun,'TDRSS Analysis Postage Stamp Note [format=A80]: '+note
  
  ;;LIGHTCURVE
  
  file=filebegin+'_lightcurve.0.plc.log'
  file0=filebegin+'_lightcurve.0'
  run='N'
  report='N'
  starttime='N'
  stoptime='N'
  livetime='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if strpos(line,'PLC start time') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[4]
           starttime='Y'
        endif 
        if strpos(line,'PLC stop time') ne -1 then begin 
           stoptime='Y'
           livetime='Y'
           go=0
        endif 

        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis lightcurve.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis lightcurve.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis lightcurve.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis lightcurve.0 Verify Start Time? [format=A1,unit=Y/N]: '+starttime
  printf,aklun,'TDRSS Analysis lightcurve.0 Verify Stop Time? [format=A1,unit=Y/N]: '+stoptime
  printf,aklun,'TDRSS Analysis lightcurve.0 Verify Livetime? [format=A1,unit=Y/N]: '+livetime

  printf,aklun,'TDRSS Analysis lightcurve.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis lightcurve.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis lightcurve.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis lightcurve.0 Segment Number [format=I10]: '+segno  
  ;;LIGHTCURVE TDRSS
  
  file=filebegin+'_lightcurve_tdrss.0.plc.log'
  file0=filebegin+'_lightcurve_tdrss.0'
  run='N'
  report='N'
  starttime='N'
  stoptime='N'
  livetime='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if strpos(line,'PLC start time') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[4]
           starttime='Y'
        endif 
        if strpos(line,'PLC stop time') ne -1 then begin 
           stoptime='Y'
           livetime='Y'
           go=0
        endif 

        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Verify Start Time? [format=A1,unit=Y/N]: '+starttime
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Verify Stop Time? [format=A1,unit=Y/N]: '+stoptime
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Verify Livetime? [format=A1,unit=Y/N]: '+livetime

  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis lightcurve_tdrss.0 Segment Number [format=I10]: '+segno  
  printf,aklun,'TDRSS Analysis Lightcurve Note [format=A80]: '+note
  
  ;;SPECTRUM
  
  file=filebegin+'_spectrum.0.spectrum.log'
  file0=filebegin+'_spectrum.0'
  run='N'
  report='N'
  starttime='N'
  stoptime='N'
  livetime='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if strpos(line,'Spectrum start time') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[4]
           starttime='Y'
        endif 
        if strpos(line,'Spectrum stop time') ne -1 then begin 
           stoptime='Y'
           livetime='Y'
           go=0
        endif 

        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis spectrum.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis spectrum.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis spectrum.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis spectrum.0 Verify Start Time? [format=A1,unit=Y/N]: '+starttime
  printf,aklun,'TDRSS Analysis spectrum.0 Verify Stop Time? [format=A1,unit=Y/N]: '+stoptime
  printf,aklun,'TDRSS Analysis spectrum.0 Verify Livetime? [format=A1,unit=Y/N]: '+livetime

  printf,aklun,'TDRSS Analysis spectrum.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis spectrum.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis spectrum.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis spectrum.0 Segment Number [format=I10]: '+segno  
  ;;SPECTRUM TDRSS
  
  file=filebegin+'_spectrum_tdrss.0.spectrum.log'
  file0=filebegin+'_spectrum_tdrss.0'
  run='N'
  report='N'
  starttime='N'
  stoptime='N'
  livetime='N'
  time=''
  targetid=''
  segno=''
  note=''
  whatline=0
  f165='(a,a)'
  if (file_size(file0) gt 0) then data='Y' else data='N'
  if exist(file) then begin 
     f165='(a,F16.5)'
     run='Y'
     report='Y'
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     go=1
     while (not EOF(stlun) and (go eq 1)) do begin 
        whatline=whatline+1
        if strpos(line,'PLC start time') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           time=chunks[4]
           starttime='Y'
        endif 
        if strpos(line,'PLC stop time') ne -1 then begin 
           stoptime='Y'
           livetime='Y'
           go=0
        endif 

        readf,stlun,line
     endwhile
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Data? [format=A1,unit=Y/N]: '+data
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Run? [format=A1,unit=Y/N]: '+run
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Verify Start Time? [format=A1,unit=Y/N]: '+starttime
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Verify Stop Time? [format=A1,unit=Y/N]: '+stoptime
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Verify Livetime? [format=A1,unit=Y/N]: '+livetime

  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Time [format=F16.5]: ',time,format=f165
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Target ID [format=I10]: '+targetid
  printf,aklun,'TDRSS Analysis spectrum_tdrss.0 Segment Number [format=I10]: '+segno  
  printf,aklun,'TDRSS Analysis Spectrum Note [format=A80]: '+note
  
  ;;PASS1
  file0=filebegin+'_science.0'
  fileall=filebegin+'_science.all'
  cat=''
  if exist(fileall) then begin
     file=fileall
     cat='Y'
  endif else begin
     file=file0
     cat='N'
  endelse 
  file=file+'.timeline'
  starttime=''
  stoptime=''
  verify=''
  report=''
  note=''
  whatline=0
  f165='(a,a)'
  if exist(file) then begin 
     openr,stlun,file,/get_lun
     line=''
     readf,stlun,line
     while (not EOF(stlun)) do begin 
        if (strpos(line,'Target ID') ne -1 ) then begin
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           if chunks[13] gt 100000 then begin 
              targetid=chunks[13]
              segno=chunks[16]
              report='Y'
           endif 
        endif 
        if strpos(line,' IM') ne -1 then begin
           f165='(a,F16.5)'
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           starttime=chunks[4]
           if strpos(starttime,'-') ne -1 then starttime=chunks[3]
        endif 
        readf,stlun,line
     endwhile
;     chunks=str_sep(line,' ')
;     w=where(chunks ne '')
;     chunks=chunks[w]
;     stoptime=chunks[4]
     
     close,stlun
     free_lun,stlun
  endif
  
  printf,aklun,'Science Data pass1 science.0 Cat? [format=A1,unit=Y/N]: '+cat
  printf,aklun,'Science Data pass1 science.0 Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'Science Data pass1 science.0 Verify? [format=A1,unit=Y/N]: '+verify
  printf,aklun,'Science Data pass1 science.0 Reports as a GRB? [format=A1,unit=Y/N]: '+report
  printf,aklun,'Science Data pass1 science.0 Time of GRB [format=F16.5]: ',starttime,format=f165
  printf,aklun,'Science Data pass1 science.0 Target ID [format=I10]: '+targetid
  printf,aklun,'Science Data pass1 science.0 Segment Number [format=I10]: '+segno
  printf,aklun,'Science Data pass1 science.0 Note [format=A80]: '+note

  ;;XLS files
  
  files=['mean_bias_summary.xls','raw_spec_result_summary.xls','im_spec_result_summary.xls','pupd_spec_result_summary.xls','lrpd_spec_result_summary.xls','wt_spec_result_summary.xls','pc_spec_result_summary.xls']
  modes=['BIAS','RAW',' IM','PUPD','LRPD','WT','PC']
  fnames=['bias_map.fits','raw_image.fits','im_image.fits','pupd.fits','lrpd_events.fits','wt_events.fits','pc_events.fits']
  
  for i=0,6 do begin 
     file=files[i]
     mode=modes[i]
     fname=fnames[i]
     tfile=filebegin+'_science.0.timeline'
     data='N'
     ammode=''
     line=''
     excel='N'
     if exist(tfile) then begin
        data='Y'
        excel='Y'
                                ;get modes (AUTO/MAN)
        openw,alun,'awktmp',/get_lun
        printf,alun,'/'+mode+'/{print}'
        close,alun
        free_lun,alun
        spawn,'awk -f awktmp '+tfile+' > awktmp.txt'
        spawn,'rm awktmp'
        if (file_size('awktmp.txt') gt 0) then begin 
           openr,alun,'awktmp.txt',/get_lun
           readf,alun,line ;assumes same mode thoughout data set, uses first mode
           chunk=str_sep(line,' ')
           w=where(chunk ne '')
           chunk=chunk[w]
           ammode=chunk[3]
;           print,ammode,fnames[i]
;           if i eq 2 then stop
           if ((ammode ne 'Auto') and (ammode ne 'Man')) then begin 
              if (chunk[2] eq 'Auto') or (chunk[2] eq 'Man') then $
                 ammode=chunk[2] else ammode='' 
           endif 
        endif 
        spawn,'rm awktmp.txt'
        
     endif 
     
     printf,aklun,'Science Mode Analysis '+fname+' Data? [format=A1,unit=Y/N]: '+data
     printf,aklun,'Science Mode Analysis '+fname+' Mode? [format=A4,unit=Auto/Man]: '+ammode
     printf,aklun,'Science Mode Analysis '+fname+' Excel? [format=A1,unit=Y/N]: '+excel
     printf,aklun,'Science Mode Analysis '+fname+' Spreadsheet? [format=A1,unit=Y/N]: '+excel
  endfor 
  
  ;;RAW IMAGE
  ;;cannot do some parameters automatically!!
  
  if exist(fileall) then file=fileall else file=file0
  sfile='*raw*image*'
  
  ldps=strarr(2)
  frno=strarr(2)
  amps=strarr(2)
  if exist(sfile) then begin   
     rfile=file+'_LDP*.raw_image_2.fits'
     rfile=findfile(rfile)
     nrfile=n_elements(rfile)
     for i=0,nrfile-1 do begin
        ldppos=strpos(rfile[i],'LDP')
        ldp=strmid(rfile[i],ldppos+3,2)
        ldp=strsplit(ldp,'.',/ex)
        ldps[i]=ldp
        frpos=strpos(rfile[i],'image_')
        fr=strmid(rfile[i],frpos+6,2)
        fr=strsplit(fr,'.',/ex)
        frno[i]=fr
        rf=mrdfits(rfile[i],0,rhdr)
        amps[i]=sxpar(rhdr,'AMP')
     endfor 
  endif 
  
  printf,aklun,'Raw Data LDP(1) [format=I10]: '+ldps[0]
  printf,aklun,'Raw Data Frame Number(1) [format=I10]: '+frno[0]
  printf,aklun,'Raw Data Gain(1) [format=A2,unit=Hi/Lo]: '
  printf,aklun,'Raw Data Amp(1) [format=I2,unit=1/2]: '+amps[0]
  printf,aklun,'Raw Data Single Pixel(1) [format=F10.4]: '
  printf,aklun,'Raw Data FWHM(1) [format=F10.4]: '
  printf,aklun,'Raw Data Noise(1) [format=F10.4]: '
  printf,aklun,'Raw Data LDP(2) [format=I10]: '+ldps[1]
  printf,aklun,'Raw Data Frame Number(2) [format=I10]: '+frno[1]
  printf,aklun,'Raw Data Gain(2) [format=A2,unit=Hi/Lo]: '
  printf,aklun,'Raw Data Amp(2) [format=I2,unit=1/2]: '+amps[1]
  printf,aklun,'Raw Data Single Pixel(2) [format=F10.4]: '
  printf,aklun,'Raw Data FWHM(2) [format=F10.4]: '
  printf,aklun,'Raw Data Noise(2) [format=F10.4]: '
  
  ldps=strarr(4)
  backdn=strarr(4)
  amps=strarr(4)
  if exist(sfile) then begin   
     rfile=file+'_LDP*.raw_image_1.fits'
     rfile=findfile(rfile)
     nrfile=n_elements(rfile)
     for i=0,nrfile-1 do begin
        ldppos=strpos(rfile[i],'LDP')
        ldp=strmid(rfile[i],ldppos+3,2)
        ldp=strsplit(ldp,'.',/ex)
        ldps[i]=ldp
        backdn[i]=strtrim(sxpar(rhdr,'MEDIAN'),2)
        amps[i]=strtrim(sxpar(rhdr,'AMP'),2)
     endfor 
  endif 
  
  printf,aklun,'Filter Integrity LDP(1) [format=I10]: '+ldps[0]
  printf,aklun,'Filter Integrity LED(1) [format=A3,unit=ON/OFF]: '
  printf,aklun,'Filter Integrity Gain(1) [format=A2,unit=Hi/Lo]: '
  printf,aklun,'Filter Integrity Amp(1) [format=I2,unit=1/2]: '+amps[0]
  printf,aklun,'Filter Integrity Back DN(1) [format=F10.4]: '+backdn[0]
  printf,aklun,'Filter Integrity Note(1) [format=A80]: '
  printf,aklun,'Filter Integrity LDP(2) [format=I10]: '+ldps[1]
  printf,aklun,'Filter Integrity LED(2) [format=A3,unit=ON/OFF]: '
  printf,aklun,'Filter Integrity Gain(2) [format=A2,unit=Hi/Lo]: '
  printf,aklun,'Filter Integrity Amp(2) [format=I2,unit=1/2]: '+amps[1]
  printf,aklun,'Filter Integrity Back DN(2) [format=F10.4]: '+backdn[1]
  printf,aklun,'Filter Integrity Note(2) [format=A80]: '
  printf,aklun,'Filter Integrity LDP(3) [format=I10]: '+ldps[2]
  printf,aklun,'Filter Integrity LED(3) [format=A3,unit=ON/OFF]: '
  printf,aklun,'Filter Integrity Gain(3) [format=A2,unit=Hi/Lo]: '
  printf,aklun,'Filter Integrity Amp(3) [format=I2,unit=1/2]: '+amps[2]
  printf,aklun,'Filter Integrity Back DN(3) [format=F10.4]: '+backdn[2]
  printf,aklun,'Filter Integrity Note(3) [format=A80]: '
  printf,aklun,'Filter Integrity LDP(4) [format=I10]: '+ldps[3]
  printf,aklun,'Filter Integrity LED(4) [format=A3,unit=ON/OFF]: '
  printf,aklun,'Filter Integrity Gain(4) [format=A2,unit=Hi/Lo]: '
  printf,aklun,'Filter Integrity Amp(4) [format=I2,unit=1/2]: '+amps[3]
  printf,aklun,'Filter Integrity Back DN(4) [format=F10.4]: '+backdn[3]
  printf,aklun,'Filter Integrity Note(4) [format=A80]: '
  
  
  ;;TAM-TWO-WIN
  
  file=filebegin+'_tam_two_win.0.log'
  
  tamdata='N'
  tamrun='N'
  tamstarttime=''
  tamstoptime=''
  done=0
  x1=''
  x2=''
  y1=''
  y2=''
  sig1=''
  sig2=''
  f165='(a,a)'
  if (file_size(file) gt 0) then begin 
     f165='(a,F16.5)'
     tamdata='Y'
     tamrun=tamdata
     openr,tlun,file,/get_lun
     line=''
     readf,tlun,line
     while (not EOF(tlun)) do begin 
        if strpos(line,'First TAM time:') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           tamstarttime=chunks[3]
        endif 
        if strpos(line,'Last TAM time:') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           tamstoptime=chunks[3]
        endif 
        if (strpos(line,'TAM Window 1 centroid, std dev:') ne -1) and (done eq 0) then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           x1=chunks[6]
           y1=chunks[7]
           sig1=chunks[8]
           readf,tlun,line
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           x2=chunks[6]
           y2=chunks[7]
           sig2=chunks[8]
           done=1
        endif 
        readf,tlun,line
     endwhile
     close,tlun
     free_lun,tlun
  endif 
  
  
  printf,aklun,'TAM Two-Window Mode Data? [format=A1,unit=Y/N]: '+tamdata
  printf,aklun,'TAM Two-Window Mode Run? [format=A1,unit=Y/N]: '+tamrun
  printf,aklun,'TAM Two-Window Mode Print? [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TAM Two-Window Mode Start Time [format=F16.5]: ',tamstarttime,format=f165
  printf,aklun,'TAM Two-Window Mode Stop Time [format=F16.5]: ',tamstoptime,format=f165
  printf,aklun,'TAM Two-Window Mode X1 [format=F10.4]: '+x1
  printf,aklun,'TAM Two-Window Mode Y1 [format=F10.4]: '+y1
  printf,aklun,'TAM Two-Window Mode Sig1 [format=F10.4]: '+sig1
  printf,aklun,'TAM Two-Window Mode X2 [format=F10.4]: '+x2
  printf,aklun,'TAM Two-Window Mode Y2 [format=F10.4]: '+y2
  printf,aklun,'TAM Two-Window Mode Sig2 [format=F10.4]: '+sig2
  printf,aklun,'TAM Two-Window Mode LED [format=I1,unit=0/1/2]: '
  printf,aklun,'TAM Two-Window Mode Back DN1 [format=F10.4]: '
  printf,aklun,'TAM Two-Window Mode Back Sig1 [format=F10.4]: '
  printf,aklun,'TAM Two-Window Mode Back DN2 [format=F10.4]: '
  printf,aklun,'TAM Two-Window Mode Back Sig2 [format=F10.4]: '

  ;;TAM-FULL-FRAME
  
  file=filebegin+'_tam_full_frame.0.log'
  
  tamdata=strarr(3)
  tamrun=strarr(3)
  tamdata[*]='N'
  tamrun[*]='N'
  tamstarttime=''
  tamstoptime=''
  done=0
  f165='(a,a)'
  if (file_size(file) gt 0) then begin 
     f165='(a,F16.5)'
     openr,tlun,file,/get_lun
     line=''
     readf,tlun,line
     while (not EOF(tlun)) do begin 
        if strpos(line,'First TAM time:') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           tamstarttime=chunks[3]
        endif 
        if strpos(line,'Last TAM time:') ne -1 then begin 
           chunks=str_sep(line,' ')
           w=where(chunks ne '')
           chunks=chunks[w]
           tamstoptime=chunks[3]
        endif 
        readf,tlun,line
     endwhile
  endif 
  
  fileimg=filebegin+'_tam_full_frame.0.frame'+ntostr([1,2,3])+'.fits.gz'
  for i=0,2 do begin
     if exist(fileimg[i]) then begin 
        tamdata[i]='Y'
        tamrun[i]='Y'
     endif 
  endfor 
        
  printf,aklun,'TAM Full-Frame Mode Data?(1) [format=A1,unit=Y/N]: '+tamdata[0]
  printf,aklun,'TAM Full-Frame Mode Run?(1) [format=A1,unit=Y/N]: '+tamrun[0]
  printf,aklun,'TAM Full-Frame Mode Print?(1) [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TAM Full-Frame Mode Start Time(1) [format=F16.5]: ',tamstarttime,format=f165
  printf,aklun,'TAM Full-Frame Mode Stop Time(1) [format=F16.5]: ',tamstoptime,format=f165
  printf,aklun,'TAM Full-Frame Mode X1(1) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Y1(1) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode DN1(1) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode X2(1) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Y2(1) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode DN2(1) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode LED(1) [format=I1,unit=0/1/2]: '
  printf,aklun,'TAM Full-Frame Mode Back DN(1) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Back Sig3(1) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Data?(2) [format=A1,unit=Y/N]: '+tamdata[1]
  printf,aklun,'TAM Full-Frame Mode Run?(2) [format=A1,unit=Y/N]: '+tamrun[1]
  printf,aklun,'TAM Full-Frame Mode Print?(2) [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TAM Full-Frame Mode Start Time(2) [format=F16.5]: '
  printf,aklun,'TAM Full-Frame Mode Stop Time(2) [format=F16.5]: '
  printf,aklun,'TAM Full-Frame Mode X1(2) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Y1(2) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode DN1(2) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode X2(2) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Y2(2) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode DN2(2) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode LED(2) [format=I1,unit=0/1/2]: '
  printf,aklun,'TAM Full-Frame Mode Back DN(2) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Back Sig3(2) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Data?(3) [format=A1,unit=Y/N]: '+tamdata[2]
  printf,aklun,'TAM Full-Frame Mode Run?(3) [format=A1,unit=Y/N]: '+tamrun[2]
  printf,aklun,'TAM Full-Frame Mode Print?(3) [format=A1,unit=Y/N]: '+prt
  printf,aklun,'TAM Full-Frame Mode Start Time(3) [format=F16.5]: '
  printf,aklun,'TAM Full-Frame Mode Stop Time(3) [format=F16.5]: '
  printf,aklun,'TAM Full-Frame Mode X1(3) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Y1(3) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode DN1(3) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode X2(3) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Y2(3) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode DN2(3) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode LED(3) [format=I1,unit=0/1/2]: '
  printf,aklun,'TAM Full-Frame Mode Back DN(3) [format=F10.4]: '
  printf,aklun,'TAM Full-Frame Mode Back Sig3(3) [format=F10.4]: '
  
  ;;Summary
  
  summary='Submission by akbar_email_sub.pro automated script.  Some values may be missing that require human interaction to acquire.'
  printf,aklun,'Summary [format=A800]: '+summary

  
  
  
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  printf,aklun,'<END>'
  close,/all
                                ;send email ;pgp
  
  ;gpg --clearsign < akbar_email.txt > akbar_email_signed.txt 
  ;fastmail -r xrt@astro.psu.edu -f "XRT" -F xrt@astro.psu.edu akbar_email_signed.txt akbar@dbms1.gsfc.nasa.gov
  
  return
end 
